#!/usr/bin/env node

const fs = require('fs');
const glob = require('glob');

console.log('üîß –ü–û–õ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–õ–û–ñ–ï–ù–ù–´–• CSS –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í');
console.log('='.repeat(50));

// –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ CSS —Ñ–∞–π–ª—ã
const files = glob.sync('frontend/src/components/**/*.css');

files.forEach(filePath => {
    console.log(`üîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${filePath}`);
    
    let content = fs.readFileSync(filePath, 'utf8');
    let originalContent = content;
    
    // Backup
    const backupPath = `${filePath}.complete-fix-backup.${Date.now()}`;
    fs.writeFileSync(backupPath, originalContent, 'utf8');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ç–∏–ø—ã –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    
    // –¢–∏–ø 1: /* /* REMOVED ANIMATION: ... */ */
    content = content.replace(/\/\* \/\* REMOVED ANIMATION: ([^*]+(?:\*(?!\/)[^*]*)*) \*\/ \*\//g, '/* REMOVED ANIMATION: $1 */');
    
    // –¢–∏–ø 2: /* REMOVED ANIMATION: */ REMOVED ANIMATION: /* REMOVED ANIMATION: ... */
    content = content.replace(/\/\* REMOVED ANIMATION: \*\/ REMOVED ANIMATION: \/\* REMOVED ANIMATION: ([^*]+(?:\*(?!\/)[^*]*)*) \*\//g, '/* REMOVED ANIMATION: $1 */');
    
    // –¢–∏–ø 3: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ */ */
    content = content.replace(/\*\/ \*\//g, '*/');
    
    // –¢–∏–ø 4: –û—Ç–∫—Ä—ã—Ç—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –±–µ–∑ –∑–∞–∫—Ä—ã—Ç–∏—è
    content = content.replace(/\/\* \/\* REMOVED ANIMATION: ([^*]+)\s*$/gm, '/* REMOVED ANIMATION: $1 */');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    fs.writeFileSync(filePath, content, 'utf8');
    
    if (content !== originalContent) {
        console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: ${filePath}`);
        console.log(`üì¶ Backup: ${backupPath}`);
    } else {
        console.log(`‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: ${filePath}`);
        // –£–¥–∞–ª—è–µ–º backup –µ—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –±—ã–ª–æ
        fs.unlinkSync(backupPath);
    }
});

console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!'); 