#!/usr/bin/env node

/**
 * üîß –°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö CSS –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
 * 
 * –ü—Ä–æ–±–ª–µ–º–∞: –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
 * –†–µ—à–µ–Ω–∏–µ: –£–±–∏—Ä–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
 */

const fs = require('fs');
const path = require('path');

console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–õ–û–ñ–ï–ù–ù–´–• CSS –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í');
console.log('='.repeat(50));

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
const cssFiles = [
    'frontend/src/components/modals/TeamModal.css',
    'frontend/src/components/tournament/modals/MatchResultModal.css',
    'frontend/src/components/styles/ParticipantsModal.css',
    'frontend/src/components/tournament/modals/MatchDetailsModal.css',
    'frontend/src/components/modals/TeamSelectionModal.css',
    'frontend/src/components/tournament/modals/ParticipantSearchModal.css',
    'frontend/src/components/tournament/modals/ParticipationConfirmModal.css',
    'frontend/src/components/AttachmentModal.css',
    'frontend/src/components/modals/CreateTeamModal.css',
    'frontend/src/components/tournament/modals/AddParticipantModal.css',
    'frontend/src/components/tournament/modals/ThirdPlaceMatchModal.css'
];

// –§—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
function fixNestedComments(content) {
    let fixed = content;
    
    // –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    const nestedCommentPattern = /\/\*\s*REMOVED ANIMATION:\s*(\/\*.*?\*\/\s*)+/g;
    
    // –ó–∞–º–µ–Ω—è–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ
    fixed = fixed.replace(nestedCommentPattern, (match) => {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–∞–º—ã–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        const innerContent = match.match(/\/\*\s*REMOVED ANIMATION:\s*(.+?)\s*\*\//);
        if (innerContent && innerContent[1]) {
            // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏
            const cleanContent = innerContent[1]
                .replace(/\/\*.*?\*\//g, '') // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
                .replace(/\s+/g, ' ')        // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–±–µ–ª—ã
                .trim();
            
            if (cleanContent) {
                return `/* REMOVED ANIMATION: ${cleanContent} */`;
            }
        }
        return '/* REMOVED ANIMATION: [nested comment cleaned] */';
    });
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–ª—É—á–∞–∏ —Å text-transform
    fixed = fixed.replace(/text-\/\*\s*REMOVED ANIMATION:.*?\*\//g, '/* REMOVED ANIMATION: text-transform: uppercase; */');
    
    // –£–±–∏—Ä–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    fixed = fixed.replace(/\/\*\s*REMOVED ANIMATION:\s*\/\*/g, '/* REMOVED ANIMATION: */');
    fixed = fixed.replace(/\*\/\s*\*\//g, '*/');
    
    return fixed;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤
let fixedCount = 0;
let totalFixed = 0;

cssFiles.forEach(filePath => {
    console.log(`\nüîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${filePath}`);
    
    if (!fs.existsSync(filePath)) {
        console.log(`‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filePath}`);
        return;
    }
    
    try {
        const originalContent = fs.readFileSync(filePath, 'utf8');
        const fixedContent = fixNestedComments(originalContent);
        
        if (originalContent !== fixedContent) {
            // –°–æ–∑–¥–∞–µ–º backup
            const backupPath = `${filePath}.nested-comments-backup.${Date.now()}`;
            fs.writeFileSync(backupPath, originalContent, 'utf8');
            
            // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
            fs.writeFileSync(filePath, fixedContent, 'utf8');
            
            console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: ${filePath}`);
            console.log(`üì¶ Backup: ${backupPath}`);
            fixedCount++;
            
            // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
            const beforeMatches = (originalContent.match(/\/\*\s*REMOVED ANIMATION:.*?\/\*.*?\*\//g) || []).length;
            const afterMatches = (fixedContent.match(/\/\*\s*REMOVED ANIMATION:.*?\/\*.*?\*\//g) || []).length;
            const fixed = beforeMatches - afterMatches;
            totalFixed += fixed;
            
            if (fixed > 0) {
                console.log(`üéØ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: ${fixed}`);
            }
        } else {
            console.log(`‚úÖ –§–∞–π–ª —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: ${filePath}`);
        }
        
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ${filePath}:`, error.message);
    }
});

console.log(`\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:`);
console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${fixedCount}`);
console.log(`üéØ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: ${totalFixed}`);
console.log(`\nüí° –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:`);
console.log(`1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'npm run build' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∏–ª–¥–∞`);
console.log(`2. –ü—Ä–∏ —É—Å–ø–µ—Ö–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å backup —Ñ–∞–π–ª—ã`);
console.log(`3. –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ backup –¥–ª—è –æ—Ç–∫–∞—Ç–∞`);

console.log(`\n‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!`); 