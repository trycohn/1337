// frontend/src/pages/create-tournament/components/steps/Step5_Branding.js
import React, { useRef } from 'react';

/**
 * –®–∞–≥ 5: –ë—Ä–µ–Ω–¥–∏–Ω–≥ —Ç—É—Ä–Ω–∏—Ä–∞
 * –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –ª–æ–≥–æ—Ç–∏–ø–∞, –±–∞–Ω–Ω–µ—Ä–∞, —Ü–≤–µ—Ç–∞–º–∏
 */
function Step5_Branding({ data, user, onChange }) {
  const logoInputRef = useRef(null);
  const bannerInputRef = useRef(null);

  const handleChange = (field, value) => {
    onChange({ ...data, [field]: value });
  };

  const isPro = user?.subscription === 'pro';

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ—Ç–∏–ø–∞
  const handleLogoUpload = (e) => {
    const file = e.target.files?.[0];
    if (!file) return;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (file.size > 2 * 1024 * 1024) {
      alert('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 2MB');
      return;
    }

    if (!file.type.startsWith('image/')) {
      alert('–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
      return;
    }

    // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    const url = URL.createObjectURL(file);
    handleChange('logo_file', file);
    handleChange('logo_preview', url);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–Ω–Ω–µ—Ä–∞
  const handleBannerUpload = (e) => {
    const file = e.target.files?.[0];
    if (!file) return;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (file.size > 5 * 1024 * 1024) {
      alert('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5MB');
      return;
    }

    if (!file.type.startsWith('image/')) {
      alert('–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
      return;
    }

    const url = URL.createObjectURL(file);
    handleChange('banner_file', file);
    handleChange('banner_preview', url);
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞
  const handleRemoveLogo = () => {
    handleChange('logo_file', null);
    handleChange('logo_preview', null);
    if (logoInputRef.current) logoInputRef.current.value = '';
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞
  const handleRemoveBanner = () => {
    handleChange('banner_file', null);
    handleChange('banner_preview', null);
    if (bannerInputRef.current) bannerInputRef.current.value = '';
  };

  return (
    <div className="wizard-step step-branding">
      <div className="step-header">
        <h2>üé® –ë—Ä–µ–Ω–¥–∏–Ω–≥</h2>
        <p className="step-description">
          –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –≤–∞—à–µ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
        </p>
      </div>

      <div className="step-section">
        <h3>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</h3>
        
        {/* –õ–æ–≥–æ—Ç–∏–ø —Ç—É—Ä–Ω–∏—Ä–∞ */}
        <div className="form-group">
          <label>–õ–æ–≥–æ—Ç–∏–ø —Ç—É—Ä–Ω–∏—Ä–∞</label>
          <div className="image-upload-area">
            <input
              type="file"
              ref={logoInputRef}
              onChange={handleLogoUpload}
              accept="image/*"
              style={{ display: 'none' }}
            />
            
            {data.logo_preview || data.logo_url ? (
              <div className="image-preview">
                <img
                  src={data.logo_preview || data.logo_url}
                  alt="–õ–æ–≥–æ—Ç–∏–ø"
                  style={{ maxWidth: '200px', maxHeight: '200px', borderRadius: '8px' }}
                />
                <div className="preview-actions">
                  <button
                    type="button"
                    className="btn btn-secondary"
                    onClick={() => logoInputRef.current?.click()}
                  >
                    –ó–∞–º–µ–Ω–∏—Ç—å
                  </button>
                  <button
                    type="button"
                    className="btn btn-secondary"
                    onClick={handleRemoveLogo}
                  >
                    –£–¥–∞–ª–∏—Ç—å
                  </button>
                </div>
              </div>
            ) : (
              <button
                type="button"
                className="btn btn-secondary"
                onClick={() => logoInputRef.current?.click()}
                style={{ width: '100%', padding: '40px', fontSize: '16px' }}
              >
                üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø
              </button>
            )}
          </div>
          <small className="form-hint">
            –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä: 500√ó500px, –º–∞–∫—Å 2MB. –§–æ—Ä–º–∞—Ç—ã: JPG, PNG, SVG
          </small>
        </div>

        {/* –ë–∞–Ω–Ω–µ—Ä —Ç—É—Ä–Ω–∏—Ä–∞ */}
        <div className="form-group">
          <label>–ë–∞–Ω–Ω–µ—Ä —Ç—É—Ä–Ω–∏—Ä–∞</label>
          <div className="image-upload-area">
            <input
              type="file"
              ref={bannerInputRef}
              onChange={handleBannerUpload}
              accept="image/*"
              style={{ display: 'none' }}
            />
            
            {data.banner_preview || data.banner_url ? (
              <div className="image-preview">
                <img
                  src={data.banner_preview || data.banner_url}
                  alt="–ë–∞–Ω–Ω–µ—Ä"
                  style={{ maxWidth: '100%', maxHeight: '200px', borderRadius: '8px' }}
                />
                <div className="preview-actions">
                  <button
                    type="button"
                    className="btn btn-secondary"
                    onClick={() => bannerInputRef.current?.click()}
                  >
                    –ó–∞–º–µ–Ω–∏—Ç—å
                  </button>
                  <button
                    type="button"
                    className="btn btn-secondary"
                    onClick={handleRemoveBanner}
                  >
                    –£–¥–∞–ª–∏—Ç—å
                  </button>
                </div>
              </div>
            ) : (
              <button
                type="button"
                className="btn btn-secondary"
                onClick={() => bannerInputRef.current?.click()}
                style={{ width: '100%', padding: '40px', fontSize: '16px' }}
              >
                üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–Ω–Ω–µ—Ä
              </button>
            )}
          </div>
          <small className="form-hint">
            –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä: 1920√ó400px, –º–∞–∫—Å 5MB. –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —à–∞–ø–∫–µ —Ç—É—Ä–Ω–∏—Ä–∞
          </small>
        </div>
      </div>

      <div className="step-section">
        <h3>–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞</h3>
        
        <div className="form-row" style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>
          <div className="form-group">
            <label>–û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç</label>
            <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>
              <input
                type="color"
                value={data.primary_color || '#ff0000'}
                onChange={(e) => handleChange('primary_color', e.target.value)}
                style={{ width: '60px', height: '40px', cursor: 'pointer', border: '1px solid #333', borderRadius: '6px' }}
              />
              <input
                type="text"
                value={data.primary_color || '#ff0000'}
                onChange={(e) => handleChange('primary_color', e.target.value)}
                placeholder="#ff0000"
                style={{ flex: 1 }}
              />
            </div>
            <small className="form-hint">
              –ê–∫—Ü–µ–Ω—Ç–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            </small>
          </div>

          <div className="form-group">
            <label>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ü–≤–µ—Ç</label>
            <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>
              <input
                type="color"
                value={data.secondary_color || '#111111'}
                onChange={(e) => handleChange('secondary_color', e.target.value)}
                style={{ width: '60px', height: '40px', cursor: 'pointer', border: '1px solid #333', borderRadius: '6px' }}
              />
              <input
                type="text"
                value={data.secondary_color || '#111111'}
                onChange={(e) => handleChange('secondary_color', e.target.value)}
                placeholder="#111111"
                style={{ flex: 1 }}
              />
            </div>
            <small className="form-hint">
              –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∏ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            </small>
          </div>
        </div>

        {/* –ü—Ä–µ–≤—å—é —Ü–≤–µ—Ç–æ–≤ */}
        <div style={{ 
          marginTop: '20px', 
          padding: '20px', 
          background: '#1a1a1a', 
          borderRadius: '8px',
          border: '1px solid #333'
        }}>
          <div style={{ fontSize: '13px', color: '#888', marginBottom: '12px' }}>
            –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∫–Ω–æ–ø–æ–∫:
          </div>
          <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap' }}>
            <button
              type="button"
              style={{
                background: data.primary_color || '#ff0000',
                color: '#fff',
                border: 'none',
                padding: '10px 20px',
                borderRadius: '6px',
                cursor: 'default'
              }}
            >
              –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
            </button>
            <button
              type="button"
              style={{
                background: 'transparent',
                color: data.primary_color || '#ff0000',
                border: `2px solid ${data.primary_color || '#ff0000'}`,
                padding: '10px 20px',
                borderRadius: '6px',
                cursor: 'default'
              }}
            >
              –í—Ç–æ—Ä–∏—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞
            </button>
          </div>
        </div>
      </div>

      {/* Pro Features Upsell */}
      {!isPro && (
        <div className="step-section pro-upsell">
          <h3 style={{ color: '#ff0000', marginBottom: '15px', textAlign: 'center' }}>
            üëë Pro Features
          </h3>
          <p style={{ color: '#ccc', marginBottom: '20px', textAlign: 'center' }}>
            –†–∞–∑–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±—Ä–µ–Ω–¥–∏–Ω–≥–∞:
          </p>
          <ul style={{ 
            listStyle: 'none', 
            padding: 0, 
            margin: '20px 0',
            color: '#ddd',
            maxWidth: '400px',
            marginLeft: 'auto',
            marginRight: 'auto'
          }}>
            <li style={{ padding: '8px 0', display: 'flex', gap: '10px' }}>
              <span>‚úì</span> –ö–∞—Å—Ç–æ–º–Ω—ã–π –¥–æ–º–µ–Ω (cup.yourteam.gg)
            </li>
            <li style={{ padding: '8px 0', display: 'flex', gap: '10px' }}>
              <span>‚úì</span> –°–∫—Ä—ã—Ç–∏–µ –±—Ä–µ–Ω–¥–∏–Ω–≥–∞ 1337 Community
            </li>
            <li style={{ padding: '8px 0', display: 'flex', gap: '10px' }}>
              <span>‚úì</span> –õ–æ–≥–æ—Ç–∏–ø—ã —Å–ø–æ–Ω—Å–æ—Ä–æ–≤
            </li>
            <li style={{ padding: '8px 0', display: 'flex', gap: '10px' }}>
              <span>‚úì</span> –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
            </li>
          </ul>
          <div style={{ textAlign: 'center' }}>
            <button 
              type="button"
              className="btn btn-primary"
              onClick={() => alert('–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')}
            >
              –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ Pro ($49/–º–µ—Å—è—Ü)
            </button>
          </div>
        </div>
      )}
    </div>
  );
}

export default Step5_Branding;

