import React from 'react';
import ReactDOM from 'react-dom/client';
import './styles/index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import { AuthProvider } from './context/AuthContext';
import { LoaderProvider } from './context/LoaderContext';

// üõ°Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ó–∞—â–∏—Ç–∞ –æ—Ç React Error #130 (undefined root element)
const rootElement = document.getElementById('root');

if (!rootElement) {
  console.error('‚ùå [React App] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –≠–ª–µ–º–µ–Ω—Ç #root –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM!');
  console.error('‚ùå [React App] –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤ public/index.html —Å—É—â–µ—Å—Ç–≤—É–µ—Ç <div id="root"></div>');
  
  // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç root –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç (—ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ)
  const emergencyRoot = document.createElement('div');
  emergencyRoot.id = 'root';
  emergencyRoot.innerHTML = '<h1 style="color: red; text-align: center; margin-top: 50px;">–û–®–ò–ë–ö–ê: –≠–ª–µ–º–µ–Ω—Ç #root –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>';
  document.body.appendChild(emergencyRoot);
  
  throw new Error('Root element not found! Check that public/index.html contains <div id="root"></div>');
}

console.log('‚úÖ [React App] Root element –Ω–∞–π–¥–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');

try {
  const root = ReactDOM.createRoot(rootElement);
  root.render(
    <React.StrictMode>
      <LoaderProvider>
        <AuthProvider>
          <App />
        </AuthProvider>
      </LoaderProvider>
    </React.StrictMode>
  );
  
  console.log('‚úÖ [React App] –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
} catch (error) {
  console.error('‚ùå [React App] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ React:', error);
  console.error('‚ùå [React App] Stack trace:', error.stack);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  rootElement.innerHTML = `
    <div style="color: red; text-align: center; margin: 50px; font-family: Arial, sans-serif;">
      <h1>–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h1>
      <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.</p>
      <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</p>
      <details style="margin-top: 20px; text-align: left;">
        <summary>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</summary>
        <pre style="background: #f5f5f5; padding: 10px; margin-top: 10px; overflow: auto;">
Error: ${error.message}

Stack trace:
${error.stack}
        </pre>
      </details>
    </div>
  `;
  
  throw error;
}

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();
