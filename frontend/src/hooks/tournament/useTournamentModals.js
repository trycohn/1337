import { useState, useCallback } from 'react';

const useTournamentModals = () => {
    // –°–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    const [showAddParticipantModal, setShowAddParticipantModal] = useState(false);
    const [showParticipantSearchModal, setShowParticipantSearchModal] = useState(false);
    const [showMatchResultModal, setShowMatchResultModal] = useState(false);
    // üÜï –ù–û–í–û–ï –°–û–°–¢–û–Ø–ù–ò–ï –î–õ–Ø –ê–î–ú–ò–ù–°–ö–û–ì–û –ü–û–ò–°–ö–ê
    const [showAdminSearchModal, setShowAdminSearchModal] = useState(false);
    
    // –î–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    const [newParticipantData, setNewParticipantData] = useState({
        display_name: '',
        email: '',
        faceit_elo: '',
        cs2_premier_rank: ''
    });
    
    const [searchQuery, setSearchQuery] = useState('');
    const [searchResults, setSearchResults] = useState([]);
    const [isSearching, setIsSearching] = useState(false);
    
    const [selectedMatch, setSelectedMatch] = useState(null);
    const [matchResultData, setMatchResultData] = useState({
        score1: 0,
        score2: 0,
        maps_data: []
    });

    // üÜï –°–û–°–¢–û–Ø–ù–ò–Ø –î–õ–Ø –ê–î–ú–ò–ù–°–ö–û–ì–û –†–ï–ñ–ò–ú–ê
    const [adminSearchQuery, setAdminSearchQuery] = useState('');
    const [adminSearchResults, setAdminSearchResults] = useState([]);
    const [isAdminSearching, setIsAdminSearching] = useState(false);

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
    const openAddParticipantModal = useCallback(() => {
        setNewParticipantData({
            display_name: '',
            email: '',
            faceit_elo: '',
            cs2_premier_rank: ''
        });
        setShowAddParticipantModal(true);
    }, []);

    const closeAddParticipantModal = useCallback(() => {
        setShowAddParticipantModal(false);
        setNewParticipantData({
            display_name: '',
            email: '',
            faceit_elo: '',
            cs2_premier_rank: ''
        });
    }, []);

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º –ø–æ–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    const openParticipantSearchModal = useCallback(() => {
        setSearchQuery('');
        setSearchResults([]);
        setIsSearching(false);
        setShowParticipantSearchModal(true);
    }, []);

    const closeParticipantSearchModal = useCallback(() => {
        setShowParticipantSearchModal(false);
        setSearchQuery('');
        setSearchResults([]);
        setIsSearching(false);
    }, []);

    // üÜï –£–ü–†–ê–í–õ–ï–ù–ò–ï –ú–û–î–ê–õ–¨–ù–´–ú –û–ö–ù–û–ú –ü–û–ò–°–ö–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í
    const openAdminSearchModal = useCallback(() => {
        setAdminSearchQuery('');
        setAdminSearchResults([]);
        setIsAdminSearching(false);
        setShowAdminSearchModal(true);
    }, []);

    const closeAdminSearchModal = useCallback(() => {
        setShowAdminSearchModal(false);
        setAdminSearchQuery('');
        setAdminSearchResults([]);
        setIsAdminSearching(false);
    }, []);

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–∞
    const openMatchResultModal = useCallback((match) => {
        console.log('üîç [useTournamentModals] openMatchResultModal –≤—ã–∑–≤–∞–Ω —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', {
            match: match,
            matchId: match?.id,
            matchType: typeof match,
            hasId: !!match?.id,
            matchKeys: match ? Object.keys(match) : '–Ω–µ—Ç –æ–±—ä–µ–∫—Ç–∞'
        });

        if (!match) {
            console.error('‚ùå [useTournamentModals] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: match –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –≤ openMatchResultModal!');
            return;
        }

        if (!match.id && match.id !== 0) {
            console.error('‚ùå [useTournamentModals] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: match.id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —Ä–∞–≤–µ–Ω undefined/null!', {
                match,
                id: match.id,
                hasId: !!match.id
            });
            return;
        }

        console.log('‚úÖ [useTournamentModals] –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
        setSelectedMatch(match);
        setMatchResultData({
            score1: match.score1 || 0,
            score2: match.score2 || 0,
            maps_data: match.maps_data || []
        });
        setShowMatchResultModal(true);
    }, []);

    const closeMatchResultModal = useCallback(() => {
        setShowMatchResultModal(false);
        setSelectedMatch(null);
        setMatchResultData({
            score1: 0,
            score2: 0,
            maps_data: []
        });
    }, []);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    const closeAllModals = useCallback(() => {
        setShowAddParticipantModal(false);
        setShowParticipantSearchModal(false);
        setShowMatchResultModal(false);
        setShowAdminSearchModal(false); // üÜï –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—Å–∫–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        
        // –°–±—Ä–æ—Å –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
        setNewParticipantData({
            display_name: '',
            email: '',
            faceit_elo: '',
            cs2_premier_rank: ''
        });
        setSearchQuery('');
        setSearchResults([]);
        setIsSearching(false);
        setSelectedMatch(null);
        setMatchResultData({
            score1: 0,
            score2: 0,
            maps_data: []
        });
        
        // üÜï –°–±—Ä–æ—Å –∞–¥–º–∏–Ω—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        setAdminSearchQuery('');
        setAdminSearchResults([]);
        setIsAdminSearching(false);
    }, []);

    // –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
    const updateSearchResults = useCallback((results) => {
        setSearchResults(results);
    }, []);

    const setSearchLoading = useCallback((loading) => {
        setIsSearching(loading);
    }, []);

    // üÜï –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –ê–î–ú–ò–ù–°–ö–û–ì–û –ü–û–ò–°–ö–ê
    const updateAdminSearchResults = useCallback((results) => {
        setAdminSearchResults(results);
    }, []);

    const setAdminSearchLoading = useCallback((loading) => {
        setIsAdminSearching(loading);
    }, []);

    return {
        // –°–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        showAddParticipantModal,
        showParticipantSearchModal,
        showMatchResultModal,
        showAdminSearchModal, // üÜï –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        
        // –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
        newParticipantData,
        setNewParticipantData,
        
        // –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        searchQuery,
        setSearchQuery,
        searchResults,
        isSearching,
        
        // üÜï –î–ê–ù–ù–´–ï –î–õ–Ø –ü–û–ò–°–ö–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í
        adminSearchQuery,
        setAdminSearchQuery,
        adminSearchResults,
        isAdminSearching,
        
        // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–∞
        selectedMatch,
        matchResultData,
        setMatchResultData,
        
        // –ú–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏
        openAddParticipantModal,
        closeAddParticipantModal,
        openParticipantSearchModal,
        closeParticipantSearchModal,
        openAdminSearchModal, // üÜï –ù–æ–≤—ã–π –º–µ—Ç–æ–¥
        closeAdminSearchModal, // üÜï –ù–æ–≤—ã–π –º–µ—Ç–æ–¥
        openMatchResultModal,
        closeMatchResultModal,
        closeAllModals,
        
        // –ú–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–∏—Å–∫–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        updateSearchResults,
        setSearchLoading,
        
        // üÜï –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–û–ò–°–ö–û–ú –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í
        updateAdminSearchResults,
        setAdminSearchLoading
    };
};

export default useTournamentModals; 