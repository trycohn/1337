import axios from 'axios';

// –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–π URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ–º localhost
const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:3000';

console.log(' üîç axios baseURL:', baseURL);

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
const api = axios.create({
    baseURL,
    timeout: 30000, // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–æ 30 —Å–µ–∫—É–Ω–¥
    headers: {
        'Content-Type': 'application/json',
        'Cache-Control': 'no-cache, no-store, must-revalidate',
        'Pragma': 'no-cache',
        'Expires': '0'
    },
    withCredentials: true, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—É–∫–∏ —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏
});

// –°–ø–∏—Å–æ–∫ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö endpoints –¥–ª—è retry –ª–æ–≥–∏–∫–∏
const CRITICAL_ENDPOINTS = [
    '/api/users/profile',
    '/api/tournaments/',
    '/api/users/me'
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å
const shouldRetry = (error, config) => {
    // üîß –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ï—Å–ª–∏ config undefined, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º
    if (!config) {
        console.warn('‚ö†Ô∏è shouldRetry: config is undefined');
        return false;
    }
    
    // –ù–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ —É–∂–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    const retryCount = config.__retryCount || 0;
    if (retryCount >= 2) return false;
    
    // –ü–æ–≤—Ç–æ—Ä—è–µ–º –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö endpoints
    const isCriticalEndpoint = CRITICAL_ENDPOINTS.some(endpoint => 
        config.url?.includes(endpoint)
    );
    
    // –ü–æ–≤—Ç–æ—Ä—è–µ–º –¥–ª—è —Ç–∞–π–º–∞—É—Ç–æ–≤, —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫ –∏–ª–∏ 5xx –æ—à–∏–±–æ–∫
    const shouldRetryError = (
        error.code === 'ECONNABORTED' || // timeout
        error.code === 'ERR_NETWORK' || // network error
        error.code === 'ERR_INSUFFICIENT_RESOURCES' || // insufficient resources
        (error.response?.status >= 500 && error.response?.status < 600) // 5xx errors
    );
    
    return isCriticalEndpoint && shouldRetryError;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è retry —Å —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
const retryRequest = async (config) => {
    // üîß –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ï—Å–ª–∏ config undefined, –æ—Ç–∫–ª–æ–Ω—è–µ–º
    if (!config) {
        console.error('‚ùå retryRequest: config is undefined');
        return Promise.reject(new Error('Config is undefined'));
    }
    
    config.__retryCount = (config.__retryCount || 0) + 1;
    const delay = Math.pow(2, config.__retryCount) * 1000; // 2s, 4s, 8s
    
    console.log(`üîÑ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å #${config.__retryCount} –∫ ${config.url} —á–µ—Ä–µ–∑ ${delay}ms`);
    
    await new Promise(resolve => setTimeout(resolve, delay));
    return api(config);
};

// –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
api.interceptors.request.use(
    (config) => {
        const token = localStorage.getItem('token');
        
        // –õ–æ–≥–∏—Ä—É–µ–º URL –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö)
        const isCritical = CRITICAL_ENDPOINTS.some(endpoint => 
            config.url?.includes(endpoint)
        );
        
        if (isCritical) {
            console.log(' üîç Sending request to:', config.url);
        }
        
        if (token && !config.headers.Authorization) {
            config.headers.Authorization = `Bearer ${token}`;
        }
        return config;
    },
    (error) => {
        console.error('Request error:', error);
        return Promise.reject(error);
    }
);

// –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
api.interceptors.response.use(
    (response) => {
        return response;
    },
    async (error) => {
        const config = error?.config; // üîß –ë–ï–ó–û–ü–ê–°–ù–û–ï –ü–û–õ–£–ß–ï–ù–ò–ï CONFIG
        
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ config —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (config && shouldRetry(error, config)) {
            try {
                return await retryRequest(config);
            } catch (retryError) {
                // –ï—Å–ª–∏ retry —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–æ–π
                console.error(`‚ùå Retry failed for ${config.url}:`, retryError);
            }
        }
        
        if (error.response) {
            // –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å—Ç–∞—Ç—É—Å–æ–º –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ 2xx
            const status = error.response.status;
            const url = config?.url;
            
            // –ù–µ –ª–æ–≥–∏—Ä—É–µ–º –Ω–µ–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ 404 –æ—à–∏–±–∫–∏
            const isExpected404 = status === 404 && (
                url?.includes('admin-request-status') ||
                url?.includes('dota-stats') ||
                url?.includes('maps')
            );
            
            if (!isExpected404) {
                console.error(`API Error (${status}) –Ω–∞ ${url}:`, {
                    status,
                    message: error.response.data?.message || error.response.data?.error,
                    data: error.response.data
                });
            }
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ 401 –æ—à–∏–±–∫–∏ (–Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)
            if (status === 401) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ expired –ª–∏ —Ç–æ–∫–µ–Ω
                const token = localStorage.getItem('token');
                if (token && !url?.includes('/login')) {
                    console.warn('üîê –¢–æ–∫–µ–Ω –≤–æ–∑–º–æ–∂–Ω–æ –∏—Å—Ç–µ–∫, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
                    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
                }
            }
        } else if (error.request) {
            // –ó–∞–ø—Ä–æ—Å –±—ã–ª —Å–¥–µ–ª–∞–Ω, –Ω–æ –Ω–µ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç
            if (error.code === 'ECONNABORTED') {
                console.warn(`‚è±Ô∏è Timeout –¥–ª—è ${config?.url} (${config?.timeout}ms)`);
            } else if (error.code === 'ERR_NETWORK') {
                console.warn(`üåê –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è ${config?.url}`);
            } else if (error.code === 'ERR_INSUFFICIENT_RESOURCES') {
                console.warn(`üíæ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è ${config?.url}`);
            } else {
                console.error('No response received:', {
                    url: config?.url,
                    code: error.code,
                    message: error.message
                });
            }
        } else {
            // –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞
            // üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫
            console.error('Request config error:', {
                message: error.message,
                code: error.code,
                name: error.name,
                stack: error.stack?.substring(0, 500) // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä stack trace
            });
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± URL –≤ –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏ –¥–ª—è –ª—É—á—à–µ–π –æ—Ç–ª–∞–¥–∫–∏
        if (config) {
            error.apiUrl = config.url;
            error.retryCount = config.__retryCount || 0;
        }
        
        return Promise.reject(error);
    }
);

export default api; 