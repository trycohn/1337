import React, { useMemo } from 'react';
import DOMPurify from 'dompurify';
import './SafeRichTextDisplay.css';

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è Rich Text –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç DOMPurify –¥–ª—è —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
 */
const SafeRichTextDisplay = ({ 
    content = '', 
    className = '', 
    maxLength = null,
    showReadMore = false,
    onReadMoreClick = null 
}) => {
    // –°—Ç—Ä–æ–≥–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è DOMPurify –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const displayPurifyConfig = useMemo(() => ({
        ALLOWED_TAGS: [
            'p', 'br', 'strong', 'em', 'u', 's', 'sub', 'sup',
            'ul', 'ol', 'li', 'blockquote',
            'a', 'h3', 'h4', 'h5', 'h6'
        ],
        ALLOWED_ATTR: {
            'a': ['href', 'title', 'target', 'rel'],
            '*': ['class', 'style'] // –†–∞–∑—Ä–µ—à–∞–µ–º style –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ line-height
        },
        ALLOWED_URI_REGEXP: /^(?:(?:(?:f|ht)tps?|mailto|tel):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i,
        FORBID_TAGS: [
            'script', 'object', 'embed', 'iframe', 'form', 
            'input', 'textarea', 'select', 'button', 'style', 
            'meta', 'link', 'title', 'base'
        ],
        FORBID_ATTR: [
            'onerror', 'onload', 'onclick', 'onmouseover', 'onfocus', 
            'onblur', 'onchange', 'onsubmit', 'onkeydown', 'onkeyup',
            'onmousedown', 'onmouseup', 'onmousemove'
        ],
        ALLOW_DATA_ATTR: false,
        ALLOW_UNKNOWN_PROTOCOLS: false,
        SANITIZE_DOM: true,
        KEEP_CONTENT: true,
        FORBID_SCRIPT: true,
        USE_PROFILES: { html: true },
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–ª—è —Å—Å—ã–ª–æ–∫
        ADD_ATTR: { 'target': '_blank', 'rel': 'noopener noreferrer' },
        FORCE_BODY: false,
        RETURN_DOM: false,
        RETURN_DOM_FRAGMENT: false
    }), []);

    // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const sanitizedContent = useMemo(() => {
        if (!content || typeof content !== 'string') {
            return '';
        }

        try {
            // –ü–µ—Ä–≤–∏—á–Ω–∞—è —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è
            let cleanContent = DOMPurify.sanitize(content, displayPurifyConfig);
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
            const dangerousPatterns = [
                /javascript:/gi,
                /data:(?!image\/(?:png|jpe?g|gif|svg\+xml|webp);base64,)/gi,
                /vbscript:/gi,
                /on\w+\s*=/gi,
                /<script/gi,
                /<iframe/gi,
                /<object/gi,
                /<embed/gi,
                /expression\s*\(/gi,
                /import\s*\(/gi,
                /eval\s*\(/gi
            ];

            const hasUnsafeContent = dangerousPatterns.some(pattern => pattern.test(cleanContent));
            
            if (hasUnsafeContent) {
                console.warn('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω –∏ —É–¥–∞–ª–µ–Ω –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç');
                // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è —Å –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏
                cleanContent = DOMPurify.sanitize(cleanContent, {
                    ...displayPurifyConfig,
                    ALLOWED_TAGS: ['p', 'br', 'strong', 'em', 'u', 'ul', 'ol', 'li'],
                    ALLOWED_ATTR: {}
                });
            }

            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è inline-—Å—Ç–∏–ª–µ–π: –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ line-height —Å whitelisted –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
            try {
                const allowedLH = new Set(['0.5', '1', '1.5', '2']);
                const container = document.createElement('div');
                container.innerHTML = cleanContent;
                const all = container.querySelectorAll('[style]');
                all.forEach(el => {
                    const style = el.getAttribute('style') || '';
                    const matched = /line-height\s*:\s*([0-9.]+)/i.exec(style);
                    if (matched && allowedLH.has(matched[1])) {
                        el.setAttribute('style', `line-height: ${matched[1]};`);
                    } else {
                        el.removeAttribute('style');
                    }
                });
                cleanContent = container.innerHTML;
            } catch (e) {
                // –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –æ—Å—Ç–∞–≤–ª—è–µ–º —É–∂–µ –æ—á–∏—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
            }

            // –û–±—Ä–µ–∑–∫–∞ –ø–æ –¥–ª–∏–Ω–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if (maxLength && cleanContent.length > maxLength) {
                const truncated = cleanContent.substring(0, maxLength);
                const lastSpace = truncated.lastIndexOf(' ');
                const cutPoint = lastSpace > maxLength * 0.8 ? lastSpace : maxLength;
                cleanContent = truncated.substring(0, cutPoint) + '...';
            }

            return cleanContent;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
            return '<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</p>';
        }
    }, [content, displayPurifyConfig, maxLength]);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const isEmpty = useMemo(() => {
        if (!sanitizedContent) return true;
        
        // –£–±–∏—Ä–∞–µ–º HTML —Ç–µ–≥–∏ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—É—Å—Ç–æ—Ç—É
        const textContent = sanitizedContent.replace(/<[^>]*>/g, '').trim();
        return textContent.length === 0;
    }, [sanitizedContent]);

    // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –ø—É—Å—Ç–æ–π
    if (isEmpty) {
        return (
            <div className={`safe-rich-display empty-content ${className}`}>
                <p className="no-content-message">–ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω</p>
            </div>
        );
    }

    return (
        <div className={`safe-rich-display ${className}`}>
            <div 
                className="rich-content"
                dangerouslySetInnerHTML={{ __html: sanitizedContent }}
            />
            
            {/* –ö–Ω–æ–ø–∫–∞ "–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ" –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –æ–±—Ä–µ–∑–∞–Ω */}
            {showReadMore && maxLength && content.length > maxLength && (
                <button 
                    className="read-more-btn"
                    onClick={onReadMoreClick}
                    type="button"
                >
                    –ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ
                </button>
            )}
            
            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ) */}
            {process.env.NODE_ENV === 'development' && (
                <div className="security-indicator" title="–ö–æ–Ω—Ç–µ–Ω—Ç —Å–∞–Ω–∏—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω DOMPurify">
                    üõ°Ô∏è
                </div>
            )}
        </div>
    );
};

export default SafeRichTextDisplay;