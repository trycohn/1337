/**
 * üèÖ USER ACHIEVEMENTS PANEL
 * –ü–∞–Ω–µ–ª—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö
 * @version 1.0.0
 */

import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import api from '../../axios';
import AchievementBadge from './AchievementBadge';
import './UserAchievementsPanel.css';

const UserAchievementsPanel = ({ userId }) => {
    const [achievements, setAchievements] = useState([]);
    const [medals, setMedals] = useState({ gold: 0, silver: 0, bronze: 0, mvp: 0 });
    const [globalRank, setGlobalRank] = useState(null);
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        fetchAchievements();
        fetchGlobalRank();
    }, [userId]);

    const fetchAchievements = async () => {
        try {
            const response = await api.get(`/api/achievements/user/${userId}`);
            
            if (response.data.success) {
                setAchievements(response.data.achievements || []);
                setMedals(response.data.medals || { gold: 0, silver: 0, bronze: 0, mvp: 0 });
            }
        } catch (error) {
            console.error(`‚ùå [UserAchievements] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:`, error);
        } finally {
            setLoading(false);
        }
    };

    const fetchGlobalRank = async () => {
        try {
            const response = await api.get(`/api/achievements/user/${userId}/rank`);
            
            if (response.data.hasRank) {
                setGlobalRank(response.data.rank);
            }
        } catch (error) {
            console.error(`‚ùå [UserAchievements] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–Ω–≥–∞:`, error);
        }
    };

    if (loading) {
        return (
            <div className="user-achievements-panel">
                <div className="achievements-loading">
                    <div className="spinner"></div>
                    <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...</p>
                </div>
            </div>
        );
    }

    if (achievements.length === 0) {
        return (
            <div className="user-achievements-panel">
                <div className="achievements-empty">
                    <div className="empty-icon">üèÜ</div>
                    <h3>–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π</h3>
                    <p>–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö –∏ –ø–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ –ª—É—á—à—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!</p>
                    <Link to="/tournaments" className="btn btn-primary">
                        –ù–∞–π—Ç–∏ —Ç—É—Ä–Ω–∏—Ä—ã
                    </Link>
                </div>
            </div>
        );
    }

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ —Ç—É—Ä–Ω–∏—Ä–∞–º
    const achievementsByTournament = achievements.reduce((acc, achievement) => {
        const key = achievement.tournament_id;
        if (!acc[key]) {
            acc[key] = {
                tournament_id: achievement.tournament_id,
                tournament_name: achievement.tournament_name,
                game: achievement.game,
                achievements: []
            };
        }
        acc[key].achievements.push(achievement);
        return acc;
    }, {});

    const tournaments = Object.values(achievementsByTournament);

    return (
        <div className="user-achievements-panel">
            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ–¥–∞–ª–µ–π */}
            <div className="medals-summary">
                <div className="summary-card">
                    <div className="summary-icon">üëë</div>
                    <div className="summary-value">{medals.mvp}</div>
                    <div className="summary-label">MVP</div>
                </div>
                <div className="summary-card">
                    <div className="summary-icon">ü•á</div>
                    <div className="summary-value">{medals.gold}</div>
                    <div className="summary-label">–ó–æ–ª–æ—Ç–æ</div>
                </div>
                <div className="summary-card">
                    <div className="summary-icon">ü•à</div>
                    <div className="summary-value">{medals.silver}</div>
                    <div className="summary-label">–°–µ—Ä–µ–±—Ä–æ</div>
                </div>
                <div className="summary-card">
                    <div className="summary-icon">ü•â</div>
                    <div className="summary-value">{medals.bronze}</div>
                    <div className="summary-label">–ë—Ä–æ–Ω–∑–∞</div>
                </div>
                {globalRank && (
                    <div className="summary-card global-rank-card">
                        <div className="summary-icon">üåç</div>
                        <div className="summary-value">#{globalRank}</div>
                        <div className="summary-label">–ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥</div>
                    </div>
                )}
            </div>

            {/* –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ —Ç—É—Ä–Ω–∏—Ä–∞–º */}
            <div className="achievements-list">
                <h3>–¢—É—Ä–Ω–∏—Ä—ã ({tournaments.length})</h3>
                
                {tournaments.map((tournament) => (
                    <div key={tournament.tournament_id} className="tournament-achievements">
                        <div className="tournament-header">
                            <Link to={`/tournaments/${tournament.tournament_id}`} className="tournament-name">
                                {tournament.tournament_name}
                            </Link>
                            <span className="tournament-game">{tournament.game}</span>
                        </div>
                        
                        <div className="achievements-badges">
                            {tournament.achievements.map((achievement) => (
                                <AchievementBadge 
                                    key={achievement.id}
                                    achievement={achievement}
                                    size="medium"
                                    showTooltip={true}
                                />
                            ))}
                        </div>
                    </div>
                ))}
            </div>

            {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ª–∏–¥–µ—Ä–±–æ—Ä–¥ */}
            <div className="leaderboard-cta">
                <Link to="/leaderboard" className="btn btn-primary">
                    üåç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥
                </Link>
            </div>
        </div>
    );
};

export default UserAchievementsPanel;

