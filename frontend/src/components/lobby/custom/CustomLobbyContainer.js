// üéÆ CustomLobbyContainer - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ª–æ–±–±–∏
import React, { useState, useEffect, useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import useCustomLobby from './useCustomLobby';
import useLobbySocket from '../shared/useLobbySocket';
import LobbyHeader from '../shared/LobbyHeader';
import MapSelectionBoard from '../shared/MapSelectionBoard';
import ConnectionBlock from '../shared/ConnectionBlock';
import ObserverZone from '../shared/ObserverZone';
import FormatSelector from './FormatSelector';
import InvitePanel from './InvitePanel';
import api from '../../../axios';
import './CustomLobby.css';

function CustomLobbyContainer() {
    const navigate = useNavigate();
    const [user, setUser] = useState(null);
    const [isAdmin, setIsAdmin] = useState(false);
    const [isInvited, setIsInvited] = useState(false);
    const [checkingAccess, setCheckingAccess] = useState(true);
    const [invitePanelOpen, setInvitePanelOpen] = useState(false);
    const [invitePanelTeam, setInvitePanelTeam] = useState(null);

    const {
        lobbyId,
        lobby,
        availableMaps,
        selections,
        team1Users,
        team2Users,
        unassignedUsers,
        playerReady,
        loading,
        canInvite,
        ensureAdminLobby,
        loadInvitedLobby,
        inviteUserToTeam,
        removeUserFromLobby,
        setMatchFormat,
        togglePlayerReady,
        handleMapAction,
        createMatch,
        clearLobby,
        updateLobbyState,
        makeCaptain
    } = useCustomLobby(user, isAdmin);

    // WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    const handleLobbyUpdate = useCallback((data) => {
        console.log('[CustomLobby] WebSocket –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–±–±–∏:', data);
        if (data.lobby && updateLobbyState) {
            updateLobbyState(data);
        }
    }, [updateLobbyState]);

    useLobbySocket({
        lobbyId,
        user,
        onLobbyState: handleLobbyUpdate,
        onLobbyUpdate: handleLobbyUpdate,
        onError: (error) => console.error('[CustomLobby] WebSocket –æ—à–∏–±–∫–∞:', error),
        lobbyType: 'custom'
    });

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    useEffect(() => {
        const token = localStorage.getItem('token');
        if (!token) {
            navigate('/login');
            return;
        }
        
        api.get('/api/users/me', { headers: { Authorization: `Bearer ${token}` } })
            .then(r => {
                setUser(r.data);
                setIsAdmin(r.data?.role === 'admin');
            })
            .catch(() => navigate('/login'));
    }, [navigate]);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞: –∞–¥–º–∏–Ω –∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω
    useEffect(() => {
        if (!user) return;
        
        const checkAccess = async () => {
            // –ê–¥–º–∏–Ω—ã –≤—Å–µ–≥–¥–∞ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø
            if (isAdmin) {
                setIsInvited(true);
                setCheckingAccess(false);
                return;
            }
            
            // –î–ª—è –Ω–µ–∞–¥–º–∏–Ω–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ –ø–æ–ø—ã—Ç–∫—É –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
            try {
                const token = localStorage.getItem('token');
                const { data } = await api.get('/api/admin/match-lobbies/my-invites', {
                    headers: { Authorization: `Bearer ${token}` }
                });
                
                console.log('[CustomLobby] –ú–æ–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', data);
                
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ (–ø—Ä–∏–Ω—è—Ç–æ–µ –∏–ª–∏ –Ω–µ–ø—Ä–∏–Ω—è—Ç–æ–µ) - –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω
                if (data?.success && data.invites?.length > 0) {
                    setIsInvited(true);
                } else {
                    setIsInvited(false);
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:', error);
                setIsInvited(false);
            } finally {
                setCheckingAccess(false);
            }
        };
        
        checkAccess();
    }, [user, isAdmin]);

    // –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–±–±–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
    useEffect(() => {
        if (isAdmin && !lobbyId) {
            ensureAdminLobby();
        }
    }, [isAdmin, lobbyId, ensureAdminLobby]);

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–±–±–∏ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    useEffect(() => {
        if (!isAdmin && isInvited && !lobbyId) {
            loadInvitedLobby();
        }
    }, [isAdmin, isInvited, lobbyId, loadInvitedLobby]);

    const openInvitePanel = useCallback((team) => {
        setInvitePanelTeam(team);
        setInvitePanelOpen(true);
    }, []);

    const closeInvitePanel = useCallback(() => {
        setInvitePanelOpen(false);
        setInvitePanelTeam(null);
    }, []);

    const handleDragStart = (e, user) => {
        e.dataTransfer.setData('text/plain', String(user.id));
    };

    const handleDrop = (targetTeam) => (e) => {
        e.preventDefault();
        const draggedUserId = Number(e.dataTransfer.getData('text/plain'));
        
        if (!draggedUserId) return;
        
        console.log('[CustomLobby] Drop:', { draggedUserId, targetTeam });
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∑ –∫–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –ø—Ä–∏—à–µ–ª –∏–≥—Ä–æ–∫
        const fromTeam1 = team1Users.find(u => u.id === draggedUserId);
        const fromTeam2 = team2Users.find(u => u.id === draggedUserId);
        const fromUnassigned = unassignedUsers.find(u => u.id === draggedUserId);
        
        const sourceTeam = fromTeam1 ? 1 : fromTeam2 ? 2 : null;
        
        // –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É - –ø—Ä–æ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–∞–µ–º
        if (sourceTeam !== targetTeam) {
            inviteUserToTeam(draggedUserId, targetTeam);
        }
        // –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤–Ω—É—Ç—Ä–∏ —Ç–æ–π –∂–µ –∫–æ–º–∞–Ω–¥—ã - —ç—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–Ω—Å—Ç–≤–∞
        // (–ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤–∏–∑—É–∞–ª—å–Ω–æ, –Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å)
    };

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
    if (checkingAccess) {
        return (
            <div className="custom-lobby-container">
                <div className="lobby-loading">
                    <span className="loading-icon">‚è≥</span>
                    <span>–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞...</span>
                </div>
            </div>
        );
    }

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω –∏ –Ω–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω - –∑–∞–ø—Ä–µ—â–∞–µ–º –¥–æ—Å—Ç—É–ø
    if (!isAdmin && !isInvited) {
        return (
            <div className="custom-lobby-container">
                <div className="lobby-access-denied">
                    <span className="error-icon">üö´</span>
                    <span>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</span>
                    <p>–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –ª–æ–±–±–∏</p>
                    <p className="access-hint">
                        –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                    </p>
                    <button onClick={() => navigate('/')} className="btn-back">
                        –ù–∞ –≥–ª–∞–≤–Ω—É—é
                    </button>
                </div>
            </div>
        );
    }

    if (loading && !lobbyId && isAdmin) {
        return (
            <div className="custom-lobby-container">
                <div className="lobby-loading">
                    <span className="loading-icon">‚è≥</span>
                    <span>–°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–±–±–∏...</span>
                </div>
            </div>
        );
    }

    return (
        <div className="custom-lobby-container">
            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–µ–∂–∏–º–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–ª—è –Ω–µ–∞–¥–º–∏–Ω–æ–≤ */}
            {!isAdmin && (
                <div className="lobby-viewer-mode">
                    <span className="viewer-icon">üëÅÔ∏è</span>
                    <span className="viewer-text">–†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</span>
                    <span className="viewer-hint">–í—ã –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –≤ —ç—Ç–æ –ª–æ–±–±–∏</span>
                </div>
            )}
            
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <LobbyHeader
                team1Name={lobby?.team1_name || '–ö–æ–º–∞–Ω–¥–∞ 1'}
                team2Name={lobby?.team2_name || '–ö–æ–º–∞–Ω–¥–∞ 2'}
                matchFormat={lobby?.match_format}
                lobbyType="custom"
            />

            {/* –í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ */}
            {lobby?.status === 'waiting' && (
                <FormatSelector
                    currentFormat={lobby?.match_format}
                    onFormatChange={setMatchFormat}
                    disabled={!isAdmin}
                />
            )}

            {/* –°–æ—Å—Ç–∞–≤—ã –∫–æ–º–∞–Ω–¥ */}
            <div className="custom-lobby-teams">
                {/* –ö–æ–º–∞–Ω–¥–∞ 1 */}
                <div 
                    className="custom-team-section"
                    onDragOver={isAdmin ? (e) => e.preventDefault() : undefined}
                    onDrop={isAdmin ? handleDrop(1) : undefined}
                >
                    <div className="custom-team-header">
                        <h3>–ö–æ–º–∞–Ω–¥–∞ 1</h3>
                        {isAdmin && (
                            <button 
                                className="btn-add-player"
                                onClick={() => openInvitePanel(1)}
                            >
                                + –î–æ–±–∞–≤–∏—Ç—å
                            </button>
                        )}
                    </div>
                    <div className="custom-team-players">
                        {team1Users.map((u, idx) => (
                            <div 
                                key={u.id} 
                                className="custom-player-card" 
                                draggable={isAdmin}
                                onDragStart={isAdmin ? (e) => handleDragStart(e, u) : undefined}
                            >
                                <div className="custom-player-card-content">
                                    <img src={u.avatar || '/default-avatar.png'} alt={u.username} onError={(e) => { e.target.src = '/default-avatar.png'; }} />
                                <span className="custom-player-card-name">
                                    {u.username || u.display_name}
                                    {idx === 0 && <span className="captain-badge" title="–ö–∞–ø–∏—Ç–∞–Ω">üëë</span>}
                                </span>
                                </div>
                                <div className="custom-player-card-actions">
                                {/* –ö–Ω–æ–ø–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: –∞–¥–º–∏–Ω –¥–ª—è –≤—Å–µ—Ö, –Ω–µ–∞–¥–º–∏–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–µ–±—è */}
                                {(isAdmin || u.id === user?.id) && (
                                    <button 
                                        className="btn-ready-toggle"
                                        onClick={() => togglePlayerReady(u.id, 1)}
                                        title={u.id === user?.id ? '–ò–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å' : '–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫–∞'}
                                    >
                                        {playerReady[u.id] ? '‚úÖ' : '‚ùå'}
                                    </button>
                                )}
                                {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–∞–ø–∏—Ç–∞–Ω–æ–º */}
                                {isAdmin && idx !== 0 && (
                                    <button 
                                        className="btn-make-captain"
                                        onClick={() => makeCaptain(u.id, 1)}
                                        title="–°–¥–µ–ª–∞—Ç—å –∫–∞–ø–∏—Ç–∞–Ω–æ–º"
                                    >
                                        üëë
                                    </button>
                                )}
                                {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞ */}
                                {isAdmin && (
                                    <button 
                                        className="btn-remove"
                                        onClick={() => removeUserFromLobby(u.id)}
                                    >
                                        ‚úï
                                    </button>
                                )}
                                </div>
                            </div>
                        ))}
                    </div>
                </div>

                {/* –ö–æ–º–∞–Ω–¥–∞ 2 */}
                <div 
                    className="custom-team-section"
                    onDragOver={isAdmin ? (e) => e.preventDefault() : undefined}
                    onDrop={isAdmin ? handleDrop(2) : undefined}
                >
                    <div className="custom-team-header">
                        <h3>–ö–æ–º–∞–Ω–¥–∞ 2</h3>
                        {isAdmin && (
                            <button 
                                className="btn-add-player"
                                onClick={() => openInvitePanel(2)}
                            >
                                + –î–æ–±–∞–≤–∏—Ç—å
                            </button>
                        )}
                    </div>
                    <div className="custom-team-players">
                        {team2Users.map((u, idx) => (
                            <div 
                                key={u.id} 
                                className="custom-player-card" 
                                draggable={isAdmin}
                                onDragStart={isAdmin ? (e) => handleDragStart(e, u) : undefined}
                            >
                                <img src={u.avatar || '/default-avatar.png'} alt={u.username} onError={(e) => { e.target.src = '/default-avatar.png'; }} />
                                <span className="player-name-with-badge">
                                    {u.username || u.display_name}
                                    {idx === 0 && <span className="captain-badge" title="–ö–∞–ø–∏—Ç–∞–Ω">üëë</span>}
                                </span>
                                {/* –ö–Ω–æ–ø–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: –∞–¥–º–∏–Ω –¥–ª—è –≤—Å–µ—Ö, –Ω–µ–∞–¥–º–∏–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–µ–±—è */}
                                {(isAdmin || u.id === user?.id) && (
                                    <button 
                                        className="btn-ready-toggle"
                                        onClick={() => togglePlayerReady(u.id, 2)}
                                        title={u.id === user?.id ? '–ò–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å' : '–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫–∞'}
                                    >
                                        {playerReady[u.id] ? '‚úÖ' : '‚ùå'}
                                    </button>
                                )}
                                {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–∞–ø–∏—Ç–∞–Ω–æ–º */}
                                {isAdmin && idx !== 0 && (
                                    <button 
                                        className="btn-make-captain"
                                        onClick={() => makeCaptain(u.id, 2)}
                                        title="–°–¥–µ–ª–∞—Ç—å –∫–∞–ø–∏—Ç–∞–Ω–æ–º"
                                    >
                                        üëë
                                    </button>
                                )}
                                {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞ */}
                                {isAdmin && (
                                    <button 
                                        className="btn-remove"
                                        onClick={() => removeUserFromLobby(u.id)}
                                    >
                                        ‚úï
                                    </button>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </div>

            {/* –ü–∏–∫/–±–∞–Ω –∫–∞—Ä—Ç */}
            {(lobby?.status === 'ready' || lobby?.status === 'picking') && (
                <MapSelectionBoard
                    maps={availableMaps}
                    selections={selections}
                    currentTurn={lobby?.current_turn_team_id}
                    myTeamId={null} // –í custom –∞–¥–º–∏–Ω —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º
                    format={lobby?.match_format}
                    status={lobby?.status}
                    onMapAction={isAdmin ? handleMapAction : () => {}} // –ù–µ–∞–¥–º–∏–Ω—ã –Ω–µ –º–æ–≥—É—Ç –¥–µ–ª–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è
                    teamNames={{
                        1: lobby?.team1_name || '–ö–æ–º–∞–Ω–¥–∞ 1',
                        2: lobby?.team2_name || '–ö–æ–º–∞–Ω–¥–∞ 2'
                    }}
                    isCaptain={isAdmin} // –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å –≤ –∫–∞—Å—Ç–æ–º–Ω–æ–º –ª–æ–±–±–∏
                />
            )}

            {/* –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É */}
            {lobby?.status === 'ready_to_create' && isAdmin && (
                <div className="custom-match-actions">
                    <button className="btn-create-match" onClick={createMatch}>
                        üéÆ –°–æ–∑–¥–∞—Ç—å –º–∞—Ç—á
                    </button>
                </div>
            )}

            {lobby?.status === 'match_created' && (
                <ConnectionBlock
                    connectUrl={lobby?.connect_url}
                    gotvUrl={lobby?.gotv_url}
                    status="active"
                    matchPageUrl={lobby?.match_id ? `/matches/custom/${lobby.match_id}` : null}
                />
            )}

            {/* –ó–æ–Ω–∞ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–π —Å –Ω–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ */}
            {isAdmin && (
                <ObserverZone
                    observers={[]}
                    unassignedPlayers={unassignedUsers}
                    showUnassigned={true}
                    onDragStart={handleDragStart}
                />
            )}

            {/* –î–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞ */}
            {isAdmin && (
                <div className="custom-lobby-admin-actions">
                    <button className="btn-clear-lobby" onClick={clearLobby}>
                        üîÑ –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–±–±–∏
                    </button>
                </div>
            )}

            {/* –ü–∞–Ω–µ–ª—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π */}
            <InvitePanel
                isOpen={invitePanelOpen}
                onClose={closeInvitePanel}
                targetTeam={invitePanelTeam}
                onInvite={inviteUserToTeam}
                lobbyId={lobbyId}
            />
        </div>
    );
}

export default CustomLobbyContainer;

