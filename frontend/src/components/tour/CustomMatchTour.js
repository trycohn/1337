import React, { useState, useCallback, useEffect } from 'react';
import Joyride, { STATUS, ACTIONS, EVENTS } from 'react-joyride';
import './CustomMatchTour.css';

const TOUR_STORAGE_KEY = 'customMatch_tourCompleted';
const STEP_SKIP_PREFIX = 'customMatch_skipStep_';

const CustomMatchTour = ({ run, onTourEnd }) => {
    const [stepIndex, setStepIndex] = useState(0);
    const [skippedSteps, setSkippedSteps] = useState(() => {
        const skipped = {};
        for (let i = 0; i < 5; i++) {
            skipped[i] = localStorage.getItem(`${STEP_SKIP_PREFIX}${i}`) === 'true';
        }
        return skipped;
    });

    // Debug –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    useEffect(() => {
        if (run) {
            console.log('[TOUR] Starting tour, run:', run);
            console.log('[TOUR] Target elements check:');
            console.log('  .custom-match-format-tabs:', document.querySelector('.custom-match-format-tabs'));
            console.log('  .custom-match-team-column:', document.querySelector('.custom-match-team-column'));
        }
    }, [run]);

    const steps = [
        {
            target: 'body',
            content: (
                <div className="tour-step-content">
                    <h4>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞—Å—Ç–æ–º–Ω—ã–π –º–∞—Ç—á!</h4>
                    <p>–≠—Ç–æ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π —Ç—É—Ä –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.</p>
                    <p className="tour-tip">üí° –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ª—é–±–æ–π —à–∞–≥ –≥–∞–ª–æ—á–∫–æ–π –Ω–∏–∂–µ</p>
                </div>
            ),
            placement: 'center',
            disableBeacon: true,
        },
        {
            target: '.custom-match-format-tabs',
            content: (
                <div className="tour-step-content">
                    <h4>–í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ –º–∞—Ç—á–∞</h4>
                    <p>–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏–≥—Ä—ã:</p>
                    <ul>
                        <li><strong>BO1</strong> ‚Äî –æ–¥–Ω–∞ –∫–∞—Ä—Ç–∞</li>
                        <li><strong>BO3</strong> ‚Äî –¥–æ 2 –ø–æ–±–µ–¥ (–º–∞–∫—Å. 3 –∫–∞—Ä—Ç—ã)</li>
                        <li><strong>BO5</strong> ‚Äî –¥–æ 3 –ø–æ–±–µ–¥ (–º–∞–∫—Å. 5 –∫–∞—Ä—Ç)</li>
                    </ul>
                    <p className="tour-tip">üí° –ü—Ä–∏ —Å–º–µ–Ω–µ —Ñ–æ—Ä–º–∞—Ç–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ BAN/PICK —Å–±—Ä–æ—Å–∏—Ç—Å—è</p>
                </div>
            ),
            placement: 'bottom',
            disableBeacon: true,
        },
        {
            target: '.custom-match-team-column',
            content: (
                <div className="tour-step-content">
                    <h4>–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥</h4>
                    <p>–î–æ–±–∞–≤—å—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥—ã:</p>
                    <ul>
                        <li>–ù–∞–∂–º–∏—Ç–µ <strong>+</strong> –≤ –ø—É—Å—Ç–æ–º —Å–ª–æ—Ç–µ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è</li>
                        <li>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–∞–º–∏ (Drag & Drop)</li>
                        <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—å —Å–ø—Ä–∞–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π</li>
                    </ul>
                    <p className="tour-tip">üëë –ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –≤ –∫–æ–º–∞–Ω–¥–µ ‚Äî –∫–∞–ø–∏—Ç–∞–Ω (–∑–æ–ª–æ—Ç–∞—è —Ä–∞–º–∫–∞)</p>
                </div>
            ),
            placement: 'right',
        },
        {
            target: '.custom-match-ready-toggle',
            content: (
                <div className="tour-step-content">
                    <h4>–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫–æ–≤</h4>
                    <p>–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –º–∞—Ç—á–∞:</p>
                    <ul>
                        <li>–ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –æ—Ç–º–µ—á–∞–µ—Ç —Å–≤–æ—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å</li>
                        <li>–ö–æ–º–∞–Ω–¥–∞ –≥–æ—Ç–æ–≤–∞, –∫–æ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏</li>
                        <li>–ê–¥–º–∏–Ω –º–æ–∂–µ—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≥–æ—Ç–æ–≤–æ–π</li>
                    </ul>
                    <p className="tour-tip">‚ö†Ô∏è –§–æ—Ä–º–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω –¥–æ –Ω–∞—á–∞–ª–∞ BAN/PICK</p>
                </div>
            ),
            placement: 'left',
        },
        {
            target: '.custom-match-format-actions button',
            content: (
                <div className="tour-step-content">
                    <h4>–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ Pick/Ban</h4>
                    <p>–ü–æ—Å–ª–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥:</p>
                    <ul>
                        <li><strong>–ö–∞–ø–∏—Ç–∞–Ω—ã</strong> –ø–æ –æ—á–µ—Ä–µ–¥–∏ –±–∞–Ω—è—Ç –∏ –ø–∏–∫–∞—é—Ç –∫–∞—Ä—Ç—ã</li>
                        <li>–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞</li>
                        <li>–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—è–≤—è—Ç—Å—è —Å—Å—ã–ª–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</li>
                    </ul>
                    <p className="tour-tip">üéÆ –í—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –±—É–¥—É—Ç –ø–æ–¥—Å–≤–µ—á–µ–Ω—ã –∑–µ–ª—ë–Ω—ã–º</p>
                </div>
            ),
            placement: 'top',
        },
    ];

    const handleJoyrideCallback = useCallback((data) => {
        const { action, index, status, type, lifecycle } = data;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–≥–∞
        if (action === ACTIONS.NEXT || action === ACTIONS.SKIP) {
            const currentStepSkipped = skippedSteps[index];
            if (currentStepSkipped) {
                localStorage.setItem(`${STEP_SKIP_PREFIX}${index}`, 'true');
            }
        }

        // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫ —Ç—É—Ä–∞
        if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {
            localStorage.setItem(TOUR_STORAGE_KEY, 'true');
            if (onTourEnd) onTourEnd();
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞
        if (type === EVENTS.STEP_AFTER || type === EVENTS.TARGET_NOT_FOUND) {
            setStepIndex(index + (action === ACTIONS.PREV ? -1 : 1));
        }
    }, [skippedSteps, onTourEnd]);

    const handleSkipStepToggle = (stepIdx) => {
        setSkippedSteps(prev => {
            const newSkipped = { ...prev, [stepIdx]: !prev[stepIdx] };
            // –°—Ä–∞–∑—É —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
            if (newSkipped[stepIdx]) {
                localStorage.setItem(`${STEP_SKIP_PREFIX}${stepIdx}`, 'true');
            } else {
                localStorage.removeItem(`${STEP_SKIP_PREFIX}${stepIdx}`);
            }
            return newSkipped;
        });
    };

    // –ö–∞—Å—Ç–æ–º–Ω—ã–π Tooltip —Å –≥–∞–ª–æ—á–∫–æ–π
    const CustomTooltip = ({
        continuous,
        index,
        step,
        backProps,
        closeProps,
        primaryProps,
        tooltipProps,
        skipProps,
    }) => {
        const isLastStep = index === steps.length - 1;
        const isSkipped = skippedSteps[index];

        return (
            <div {...tooltipProps} className="joyride-tooltip">
                <div className="joyride-content">
                    {step.content}
                </div>
                
                <div className="joyride-skip-checkbox">
                    <label>
                        <input
                            type="checkbox"
                            checked={isSkipped}
                            onChange={() => handleSkipStepToggle(index)}
                        />
                        <span>–ë–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —ç—Ç–æ—Ç —à–∞–≥</span>
                    </label>
                </div>

                <div className="joyride-footer">
                    <button {...skipProps} className="joyride-btn joyride-btn-skip">
                        –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç—É—Ä
                    </button>
                    <div className="joyride-nav">
                        {index > 0 && (
                            <button {...backProps} className="joyride-btn joyride-btn-back">
                                –ù–∞–∑–∞–¥
                            </button>
                        )}
                        {!isLastStep ? (
                            <button {...primaryProps} className="joyride-btn joyride-btn-next">
                                –î–∞–ª–µ–µ ({index + 1}/{steps.length})
                            </button>
                        ) : (
                            <button {...closeProps} className="joyride-btn joyride-btn-finish">
                                –ó–∞–≤–µ—Ä—à–∏—Ç—å
                            </button>
                        )}
                    </div>
                </div>
            </div>
        );
    };

    // –§–∏–ª—å—Ç—Ä—É–µ–º —à–∞–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–º–µ—Ç–∏–ª –∫–∞–∫ "–Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å"
    const activeSteps = steps.filter((step, idx) => !skippedSteps[idx]);

    return (
        <Joyride
            steps={activeSteps.length > 0 ? activeSteps : steps}
            run={run}
            continuous
            showProgress={false}
            showSkipButton={false}
            disableOverlayClose
            disableCloseOnEsc={false}
            stepIndex={stepIndex}
            callback={handleJoyrideCallback}
            tooltipComponent={CustomTooltip}
            styles={{
                options: {
                    primaryColor: '#ff0000',
                    backgroundColor: '#111',
                    textColor: '#fff',
                    overlayColor: 'rgba(0, 0, 0, 0.7)',
                    zIndex: 10000,
                    arrowColor: '#111',
                },
                tooltip: {
                    borderRadius: '8px',
                    padding: 0,
                },
                tooltipContainer: {
                    textAlign: 'left',
                },
                buttonNext: {
                    backgroundColor: '#ff0000',
                    borderRadius: '4px',
                    color: '#fff',
                },
                buttonBack: {
                    color: '#999',
                    marginRight: '10px',
                },
                buttonSkip: {
                    color: '#999',
                },
            }}
            locale={{
                back: '–ù–∞–∑–∞–¥',
                close: '–ó–∞–∫—Ä—ã—Ç—å',
                last: '–ó–∞–≤–µ—Ä—à–∏—Ç—å',
                next: '–î–∞–ª–µ–µ',
                skip: '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å',
            }}
        />
    );
};

export default CustomMatchTour;

