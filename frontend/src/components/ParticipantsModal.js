import React from 'react';
import { ensureHttps } from '../utils/userHelpers';

function ParticipantsModal({ 
    show, 
    onClose, 
    participants, 
    chatInfo 
}) {
    if (!show) return null;

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const formatLastSeen = (joinedAt) => {
        if (!joinedAt) return '–¥–∞–≤–Ω–æ –∑–∞—Ö–æ–¥–∏–ª(–∞)';
        
        const now = new Date();
        const joined = new Date(joinedAt);
        const diffInMinutes = Math.floor((now - joined) / 60000);
        
        if (diffInMinutes < 1) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
        if (diffInMinutes < 60) return `${diffInMinutes} –º–∏–Ω –Ω–∞–∑–∞–¥`;
        if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)} —á –Ω–∞–∑–∞–¥`;
        return `${Math.floor(diffInMinutes / 1440)} –¥–Ω –Ω–∞–∑–∞–¥`;
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞ (–ø–æ–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞)
    const isUserOnline = (joinedAt) => {
        if (!joinedAt) return false;
        const now = new Date();
        const joined = new Date(joinedAt);
        const diffInMinutes = Math.floor((now - joined) / 60000);
        // –°—á–∏—Ç–∞–µ–º –æ–Ω–ª–∞–π–Ω –µ—Å–ª–∏ –∑–∞—Ö–æ–¥–∏–ª –º–µ–Ω–µ–µ 5 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥
        return diffInMinutes < 5;
    };

    return (
        <div className="participants-modal-overlay" onClick={onClose}>
            <div className="participants-modal" onClick={(e) => e.stopPropagation()}>
                <div className="modal-header">
                    <h3>–£—á–∞—Å—Ç–Ω–∏–∫–∏ ‚Äî {chatInfo?.name}</h3>
                    <button className="close-button" onClick={onClose}>√ó</button>
                </div>
                <div className="modal-content">
                    <div className="participants-count">
                        {chatInfo?.totalCount} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                    </div>
                    <div className="participants-list">
                        {participants.map((participant) => (
                            <div key={participant.user_id} className="participant-item">
                                <div className="participant-avatar">
                                    <img 
                                        src={ensureHttps(participant.avatar_url) || '/default-avatar.png'} 
                                        alt={participant.username}
                                        onError={(e) => {e.target.src = '/default-avatar.png'}}
                                    />
                                    <div className={`online-indicator ${isUserOnline(participant.joined_at) ? 'online' : 'offline'}`}></div>
                                </div>
                                <div className="participant-info">
                                    <div className="participant-name-line">
                                        <span className="participant-name">{participant.username}</span>
                                        <div className="participant-badges">
                                            {participant.is_creator && (
                                                <span className="badge creator-badge">üõ°Ô∏è</span>
                                            )}
                                            {participant.is_admin && !participant.is_creator && (
                                                <span className="badge admin-badge">‚öôÔ∏è</span>
                                            )}
                                        </div>
                                    </div>
                                    <div className="participant-status">
                                        {isUserOnline(participant.joined_at) ? '–í —Å–µ—Ç–∏' : formatLastSeen(participant.joined_at)}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </div>
        </div>
    );
}

export default ParticipantsModal; 