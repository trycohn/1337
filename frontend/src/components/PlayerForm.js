import React from 'react';
import './PlayerForm.css';

/**
 * PlayerForm - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ä–º—ã –∏–≥—Ä–æ–∫–∞
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –º–∞—Ç—á–∏ –∏ —Å—Ç—Ä–∏–∫–∏
 */
function PlayerForm({ recentMatches = [], stats }) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç—Ä–∏–∫
    const getCurrentStreak = (matches) => {
        if (!matches || matches.length === 0) return { type: null, count: 0 };
        
        let streakType = matches[0].won ? 'win' : 'loss';
        let count = 0;
        
        for (const match of matches) {
            const matchType = match.won ? 'win' : 'loss';
            if (matchType === streakType) {
                count++;
            } else {
                break;
            }
        }
        
        return { type: streakType, count };
    };

    // –í—ã—á–∏—Å–ª—è–µ–º —Ç—Ä–µ–Ω–¥ –≤–∏–Ω—Ä–µ–π—Ç–∞ (—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ 10 –º–∞—Ç—á–µ–π)
    const getWinrateTrend = (stats) => {
        if (!stats) return { direction: 'neutral', change: 0 };
        
        // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ–±—â–∏–π –≤–∏–Ω—Ä–µ–π—Ç —Å 60%
        const totalWins = (stats.solo?.wins || 0) + (stats.team?.wins || 0);
        const totalMatches = totalWins + (stats.solo?.losses || 0) + (stats.team?.losses || 0);
        const currentWinrate = totalMatches > 0 ? (totalWins / totalMatches) * 100 : 0;
        
        if (currentWinrate > 60) {
            return { direction: 'up', change: Math.round(currentWinrate - 60) };
        } else if (currentWinrate < 40) {
            return { direction: 'down', change: Math.round(40 - currentWinrate) };
        }
        
        return { direction: 'neutral', change: 0 };
    };

    const streak = getCurrentStreak(recentMatches);
    const trend = getWinrateTrend(stats);
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∞—Ç—á–µ–π
    const displayMatches = recentMatches.slice(0, 10);

    if (displayMatches.length === 0 && !stats) {
        return null;
    }

    return (
        <div className="player-form">
            <div className="player-form-header">
                <h4 className="form-title">–¢–µ–∫—É—â–∞—è —Ñ–æ—Ä–º–∞</h4>
                {trend.direction !== 'neutral' && (
                    <div className={`trend-indicator trend-${trend.direction}`}>
                        <span className="trend-icon">
                            {trend.direction === 'up' ? '‚ÜóÔ∏è' : '‚ÜòÔ∏è'}
                        </span>
                        <span className="trend-text">
                            {trend.direction === 'up' ? '–í–∏–Ω—Ä–µ–π—Ç —Ä–∞—Å—Ç–µ—Ç' : '–í–∏–Ω—Ä–µ–π—Ç –ø–∞–¥–∞–µ—Ç'}
                        </span>
                        <span className="trend-value">
                            {trend.change > 0 ? `+${trend.change}%` : `${trend.change}%`}
                        </span>
                    </div>
                )}
            </div>

            {/* –°—Ç—Ä–∏–∫ */}
            {streak.count > 2 && (
                <div className={`streak-banner streak-${streak.type}`}>
                    <div className="streak-icon">
                        {streak.type === 'win' ? 'üî•' : '‚ùÑÔ∏è'}
                    </div>
                    <div className="streak-content">
                        <div className="streak-label">
                            {streak.type === 'win' ? '–°–µ—Ä–∏—è –ø–æ–±–µ–¥' : '–°–µ—Ä–∏—è –ø–æ—Ä–∞–∂–µ–Ω–∏–π'}
                        </div>
                        <div className="streak-count">{streak.count} –ø–æ–¥—Ä—è–¥</div>
                    </div>
                </div>
            )}

            {/* –ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –º–∞—Ç—á–µ–π */}
            {displayMatches.length > 0 && (
                <div className="recent-matches-visual">
                    <div className="matches-label">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –º–∞—Ç—á–∏:</div>
                    <div className="matches-indicators">
                        {displayMatches.map((match, index) => (
                            <div
                                key={index}
                                className={`match-indicator ${match.won ? 'win' : 'loss'}`}
                                title={`${match.won ? '–ü–æ–±–µ–¥–∞' : '–ü–æ—Ä–∞–∂–µ–Ω–∏–µ'} - ${match.map_name || 'Unknown'}`}
                            >
                                {match.won ? 'W' : 'L'}
                            </div>
                        ))}
                    </div>
                </div>
            )}
        </div>
    );
}

export default PlayerForm;

