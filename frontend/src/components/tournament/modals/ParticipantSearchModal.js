import React, { useState, useEffect, useCallback, useMemo } from 'react';
import { Link } from 'react-router-dom';
import { ensureHttps } from '../../../utils/userHelpers';
import './ParticipantSearchModal.css';

/**
 * ParticipantSearchModal v3.0 - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * 
 * @version 3.0 (–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏)
 * @updated 2025-01-22
 * @author 1337 Community Development Team
 * @purpose –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
 * @features –î–≤–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã, —É–ª—É—á—à–µ–Ω–Ω—ã–π UI, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
 */
const ParticipantSearchModal = ({
    isOpen,
    onClose,
    onInvite,
    onInviteAdmin, // üÜï –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
    searchQuery,
    setSearchQuery,
    searchResults,
    isSearching,
    onSearch,
    mode = 'participant', // üÜï –†–µ–∂–∏–º: 'participant' –∏–ª–∏ 'admin'
    existingParticipants = [], // –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    existingAdmins = [] // üÜï –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
}) => {
    // üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ª–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–ø—Å—ã –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    console.log('üîç [ParticipantSearchModal] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:', {
        isOpen,
        mode,
        hasOnInvite: !!onInvite,
        hasOnInviteAdmin: !!onInviteAdmin,
        existingParticipantsCount: existingParticipants.length,
        existingAdminsCount: existingAdmins.length,
        searchResultsCount: searchResults?.length || 0
    });

    // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
    const [localQuery, setLocalQuery] = useState('');
    const [debounceTimeout, setDebounceTimeout] = useState(null);

    // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
    const modalConfig = useMemo(() => {
        switch (mode) {
            case 'admin':
                return {
                    title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
                    placeholder: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞...',
                    emptyStateIcon: 'üëë',
                    emptyStateTitle: '–ü–æ–∏—Å–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤',
                    emptyStateText: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Ç—É—Ä–Ω–∏—Ä–∞',
                    noResultsIcon: 'üîç',
                    noResultsTitle: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
                    noResultsText: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å',
                    cssClass: 'admin-mode'
                };
            case 'participant':
            default:
                return {
                    title: '–î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞',
                    placeholder: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞...',
                    emptyStateIcon: 'üë•',
                    emptyStateTitle: '–ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
                    emptyStateText: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–∞',
                    noResultsIcon: 'üîç',
                    noResultsTitle: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
                    noResultsText: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å',
                    cssClass: 'participant-mode'
                };
        }
    }, [mode]);

    // –§–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const filteredResults = useMemo(() => {
        if (!searchResults || !Array.isArray(searchResults)) return [];

        const existingIds = mode === 'admin' 
            ? existingAdmins.map(admin => admin.id || admin.user_id)
            : existingParticipants.map(participant => participant.user_id || participant.id);

        return searchResults.filter(user => !existingIds.includes(user.id));
    }, [searchResults, existingParticipants, existingAdmins, mode]);

    // –°–±—Ä–æ—Å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏/–∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    useEffect(() => {
        if (isOpen) {
            setLocalQuery(searchQuery || '');
        } else {
            setLocalQuery('');
            if (debounceTimeout) {
                clearTimeout(debounceTimeout);
                setDebounceTimeout(null);
            }
        }
    }, [isOpen, searchQuery]);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —Å –¥–µ–±–∞—É–Ω—Å–æ–º
    const handleSearchChange = useCallback((e) => {
        const value = e.target.value;
        setLocalQuery(value);

        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–∞—É—Ç
        if (debounceTimeout) {
            clearTimeout(debounceTimeout);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        const newTimeout = setTimeout(() => {
            setSearchQuery(value);
            if (onSearch) {
                console.log('üîç [ParticipantSearchModal] –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫:', value);
                onSearch(value);
            } else {
                console.warn('üîç [ParticipantSearchModal] onSearch –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω!');
            }
        }, 300); // 300ms –∑–∞–¥–µ—Ä–∂–∫–∞

        setDebounceTimeout(newTimeout);
    }, [debounceTimeout, setSearchQuery, onSearch]);

    // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    useEffect(() => {
        return () => {
            if (debounceTimeout) {
                clearTimeout(debounceTimeout);
            }
        };
    }, [debounceTimeout]);

    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    const isUserAlreadyAdded = useCallback((userId) => {
        if (mode === 'admin') {
            return existingAdmins.some(admin => 
                (admin.id || admin.user_id) === userId
            );
        } else {
            return existingParticipants.some(participant => 
                (participant.user_id || participant.id) === userId
            );
        }
    }, [existingParticipants, existingAdmins, mode]);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const handleInvite = useCallback(async (userId, userName) => {
        console.log('üéØ [ParticipantSearchModal] handleInvite –≤—ã–∑–≤–∞–Ω:', { userId, userName, mode });
        console.log('üéØ [ParticipantSearchModal] onInvite:', typeof onInvite);
        console.log('üéØ [ParticipantSearchModal] onInviteAdmin:', typeof onInviteAdmin);
        
        try {
            if (mode === 'admin' && onInviteAdmin) {
                console.log('üëë [ParticipantSearchModal] –í—ã–∑—ã–≤–∞–µ–º onInviteAdmin');
                await onInviteAdmin(userId, userName);
            } else if (mode === 'participant' && onInvite) {
                console.log('üë• [ParticipantSearchModal] –í—ã–∑—ã–≤–∞–µ–º onInvite');
                await onInvite(userId, userName);
            } else {
                console.error('‚ùå [ParticipantSearchModal] –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫!', {
                    mode,
                    hasOnInvite: !!onInvite,
                    hasOnInviteAdmin: !!onInviteAdmin
                });
            }
        } catch (error) {
            console.error('‚ùå [ParticipantSearchModal] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        }
    }, [mode, onInvite, onInviteAdmin]);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const handleClose = useCallback(() => {
        if (debounceTimeout) {
            clearTimeout(debounceTimeout);
            setDebounceTimeout(null);
        }
        setLocalQuery('');
        onClose();
    }, [debounceTimeout, onClose]);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Escape
    useEffect(() => {
        const handleEscapeKey = (event) => {
            if (event.key === 'Escape' && isOpen) {
                handleClose();
            }
        };

        if (isOpen) {
            document.addEventListener('keydown', handleEscapeKey);
            return () => document.removeEventListener('keydown', handleEscapeKey);
        }
    }, [isOpen, handleClose]);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ overlay
    const handleOverlayClick = useCallback((e) => {
        if (e.target === e.currentTarget) {
            handleClose();
        }
    }, [handleClose]);

    if (!isOpen) return null;

    return (
        <div className="search-modal-overlay" onClick={handleOverlayClick}>
            <div className={`search-modal-content ${modalConfig.cssClass}`} onClick={(e) => e.stopPropagation()}>
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
                <div className="search-modal-header">
                    <h3>{modalConfig.title}</h3>
                    <button 
                        className="close-search-modal"
                        onClick={handleClose}
                        aria-label="–ó–∞–∫—Ä—ã—Ç—å"
                    >
                        ‚úï
                    </button>
                </div>

                {/* –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ */}
                <div className="search-input-container">
                    <input
                        type="text"
                        className="search-input-field"
                        placeholder={modalConfig.placeholder}
                        value={localQuery}
                        onChange={handleSearchChange}
                        autoFocus
                    />
                </div>

                {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
                <div className="search-results-container">
                    {/* –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ */}
                    {isSearching && (
                        <div className="search-loading">
                            <div className="search-loading-icon">‚è≥</div>
                            <h4>–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...</h4>
                            <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ</p>
                        </div>
                    )}

                    {/* –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∞) */}
                    {!isSearching && !localQuery && (
                        <div className="search-placeholder">
                            <div className="search-placeholder-icon">{modalConfig.emptyStateIcon}</div>
                            <h4>{modalConfig.emptyStateTitle}</h4>
                            <p>{modalConfig.emptyStateText}</p>
                        </div>
                    )}

                    {/* –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
                    {!isSearching && localQuery && localQuery.length >= 2 && filteredResults.length === 0 && (
                        <div className="search-no-results">
                            <div className="search-no-results-icon">{modalConfig.noResultsIcon}</div>
                            <h4>{modalConfig.noResultsTitle}</h4>
                            <p>{modalConfig.noResultsText}</p>
                            {localQuery.length < 3 && (
                                <p><small>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: 2 —Å–∏–º–≤–æ–ª–∞</small></p>
                            )}
                        </div>
                    )}

                    {/* –°–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
                    {!isSearching && filteredResults.length > 0 && (
                        <div className="search-results-list">
                            {filteredResults.map((user) => {
                                const isAlreadyAdded = isUserAlreadyAdded(user.id);
                                
                                return (
                                    <div key={user.id} className="search-result-item">
                                        <div className="user-info">
                                            {/* –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                                            <div className="user-avatar">
                                                {user.avatar_url ? (
                                                    <img 
                                                        src={ensureHttps(user.avatar_url)} 
                                                        alt={user.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                                                        onError={(e) => {
                                                            e.target.style.display = 'none';
                                                            e.target.nextSibling.style.display = 'flex';
                                                        }}
                                                    />
                                                ) : null}
                                                <div 
                                                    className="avatar-placeholder"
                                                    style={{
                                                        display: user.avatar_url ? 'none' : 'flex'
                                                    }}
                                                >
                                                    {(user.username || 'U').charAt(0).toUpperCase()}
                                                </div>
                                            </div>

                                            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
                                            <div className="user-details">
                                                <div className="user-name">
                                                    {user.username || `User #${user.id}`}
                                                </div>
                                                {(user.faceit_elo || user.cs2_premier_rank) && (
                                                    <div className="user-rating">
                                                        {user.faceit_elo && `${user.faceit_elo} ELO`}
                                                        {user.faceit_elo && user.cs2_premier_rank && ' ‚Ä¢ '}
                                                        {user.cs2_premier_rank && `Premier ${user.cs2_premier_rank}`}
                                                    </div>
                                                )}
                                            </div>
                                        </div>

                                        {/* –î–µ–π—Å—Ç–≤–∏—è */}
                                        <div className="user-actions">
                                            {/* –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è */}
                                            <Link 
                                                to={`/user/${user.id}`}
                                                className="action-button view-profile-btn"
                                                target="_blank"
                                                rel="noopener noreferrer"
                                            >
                                                üë§ –ü—Ä–æ—Ñ–∏–ª—å
                                            </Link>

                                            {/* –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è */}
                                            {isAlreadyAdded ? (
                                                <button 
                                                    className="action-button already-participant-btn"
                                                    disabled
                                                >
                                                    {mode === 'admin' ? '–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–£–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç'}
                                                </button>
                                            ) : (
                                                <button 
                                                    className={`action-button ${mode === 'admin' ? 'admin-invite-btn' : 'add-participant-btn'}`}
                                                    onClick={() => {
                                                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ username —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                                                        const userName = user.username || `User${user.id}`;
                                                        console.log('üîò [ParticipantSearchModal] –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è!', {
                                                            userId: user.id,
                                                            userName: userName,
                                                            mode,
                                                            isAlreadyAdded
                                                        });
                                                        handleInvite(user.id, userName);
                                                    }}
                                                >
                                                    {mode === 'admin' ? '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∞–¥–º–∏–Ω–æ–º' : '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ —Ç—É—Ä–Ω–∏—Ä'}
                                                </button>
                                            )}
                                        </div>
                                    </div>
                                );
                            })}
                        </div>
                    )}

                    {/* –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–ª–∏–º–∏—Ç) */}
                    {!isSearching && filteredResults.length >= 50 && (
                        <div className="search-too-many-results">
                            <p>–ü–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 50 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. –£—Ç–æ—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞.</p>
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default ParticipantSearchModal; 