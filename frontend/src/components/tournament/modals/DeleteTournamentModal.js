import React, { useState, useEffect } from 'react';
import './DeleteTournamentModal.css';

/**
 * DeleteTournamentModal - –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞
 * 
 * @param {boolean} isOpen - –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 * @param {function} onClose - –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 * @param {function} onConfirm - –§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
 * @param {object} tournament - –î–∞–Ω–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
 * @param {boolean} isLoading - –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
 */
const DeleteTournamentModal = ({ 
    isOpen, 
    onClose, 
    onConfirm, 
    tournament, 
    isLoading = false 
}) => {
    const [confirmationText, setConfirmationText] = useState('');
    const [isConfirmEnabled, setIsConfirmEnabled] = useState(false);
    
    const requiredText = '—É–¥–∞–ª–∏—Ç—å';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    useEffect(() => {
        setIsConfirmEnabled(confirmationText.toLowerCase().trim() === requiredText);
    }, [confirmationText]);
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏/–æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    useEffect(() => {
        if (isOpen) {
            setConfirmationText('');
            setIsConfirmEnabled(false);
        }
    }, [isOpen]);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const handleClose = () => {
        if (isLoading) return; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
        setConfirmationText('');
        setIsConfirmEnabled(false);
        onClose();
    };
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    const handleConfirm = () => {
        if (isConfirmEnabled && !isLoading) {
            onConfirm();
        }
    };
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Escape
    useEffect(() => {
        const handleEscapeKey = (event) => {
            if (event.key === 'Escape' && isOpen && !isLoading) {
                handleClose();
            }
        };
        
        if (isOpen) {
            document.addEventListener('keydown', handleEscapeKey);
            return () => document.removeEventListener('keydown', handleEscapeKey);
        }
    }, [isOpen, isLoading]);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ overlay
    const handleOverlayClick = (e) => {
        if (e.target === e.currentTarget && !isLoading) {
            handleClose();
        }
    };
    
    if (!isOpen) return null;
    
    return (
        <div className="delete-tournament-modal-overlay__deletetournament" onClick={handleOverlayClick}>
            <div className="delete-tournament-modal__deletetournament">
                <div className="delete-tournament-modal-header__deletetournament">
                    <h3>üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞</h3>
                    <button 
                        className="delete-tournament-modal-close__deletetournament"
                        onClick={handleClose}
                        disabled={isLoading}
                        aria-label="–ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ"
                    >
                        ‚úï
                    </button>
                </div>
                
                <div className="delete-tournament-modal-content__deletetournament">
                    <div className="delete-tournament-warning__deletetournament">
                        <div className="warning-icon__deletetournament">‚ö†Ô∏è</div>
                        <div className="warning-text__deletetournament">
                            <h4>–í–Ω–∏–º–∞–Ω–∏–µ! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!</h4>
                            <p>–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä:</p>
                            <div className="tournament-info__deletetournament">
                                <strong>"{tournament?.name}"</strong>
                                {tournament?.participants?.length > 0 && (
                                    <span className="participants-count__deletetournament">
                                        ‚Ä¢ {tournament.participants.length} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                                    </span>
                                )}
                            </div>
                        </div>
                    </div>
                    
                    <div className="delete-tournament-consequences__deletetournament">
                        <h5>–ß—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ:</h5>
                        <ul>
                            <li>üèÜ –¢—É—Ä–Ω–∏—Ä –∏ –≤—Å–µ –µ–≥–æ –¥–∞–Ω–Ω—ã–µ</li>
                            <li>üë• –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∏ –∫–æ–º–∞–Ω–¥—ã</li>
                            <li>‚öîÔ∏è –í—Å–µ –º–∞—Ç—á–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</li>
                            <li>üí¨ –ß–∞—Ç —Ç—É—Ä–Ω–∏—Ä–∞</li>
                            <li>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏—Å—Ç–æ—Ä–∏—è</li>
                        </ul>
                    </div>
                    
                    <div className="delete-tournament-confirmation__deletetournament">
                        <label htmlFor="confirmation-input">
                            –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞ –ø—Ä–æ–ø–∏—à–∏—Ç–µ –ø–∏—Å—å–º–µ–Ω–Ω–æ –≤ –ø–æ–ª–µ –Ω–∏–∂–µ —Ñ—Ä–∞–∑—É <strong>"{requiredText}"</strong>, –∞ –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é":
                        </label>
                        <input
                            id="confirmation-input"
                            type="text"
                            value={confirmationText}
                            onChange={(e) => setConfirmationText(e.target.value)}
                            placeholder={`–í–≤–µ–¥–∏—Ç–µ "${requiredText}"`}
                            disabled={isLoading}
                            className={`confirmation-input__deletetournament ${isConfirmEnabled ? 'confirmed' : ''}`}
                            autoComplete="off"
                        />
                        <div className="confirmation-hint__deletetournament">
                            {confirmationText.length > 0 && (
                                <span className={isConfirmEnabled ? 'hint-success__deletetournament' : 'hint-error__deletetournament'}>
                                    {isConfirmEnabled ? '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–æ –≤–µ—Ä–Ω–æ' : '‚ùå –í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ "—É–¥–∞–ª–∏—Ç—å"'}
                                </span>
                            )}
                        </div>
                    </div>
                </div>
                
                <div className="delete-tournament-modal-footer__deletetournament">
                    <button 
                        className="btn btn-secondary"
                        onClick={handleClose}
                        disabled={isLoading}
                    >
                        –û—Ç–º–µ–Ω–∞
                    </button>
                    <button 
                        className={`delete-tournament-confirm-btn__deletetournament ${isConfirmEnabled ? 'enabled' : 'disabled'}`}
                        onClick={handleConfirm}
                        disabled={!isConfirmEnabled || isLoading}
                    >
                        {isLoading ? (
                            <>
                                <span className="loading-spinner__deletetournament"></span>
                                –£–¥–∞–ª–µ–Ω–∏–µ...
                            </>
                        ) : (
                            '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é'
                        )}
                    </button>
                </div>
            </div>
        </div>
    );
};

export default DeleteTournamentModal; 