import React, { useState, useEffect } from 'react';
import { useMatchDetailsModal } from '../../../hooks/useModalSystem';
import { ensureHttps } from '../../../utils/userHelpers';
import '../../../styles/modal-system.css';
import './MatchShareModal.css';

/**
 * üîó MatchShareModal - –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —à–µ–π—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–∞
 * –°–æ–∑–¥–∞–Ω–æ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏ (VK, Telegram, Discord)
 * 
 * @version 1.0
 * @features –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–æ–∫, –ø—Ä–µ–≤—å—é –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä
 */
const MatchShareModal = ({
    isOpen,
    onClose,
    selectedMatch,
    tournament = null
}) => {
    const [copiedUrl, setCopiedUrl] = useState('');
    const [shareStats, setShareStats] = useState({
        copies: 0,
        shares: 0
    });

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ö—É–∫ –º–æ–¥–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    const modalSystem = useMatchDetailsModal({
        onClose: () => {
            setCopiedUrl('');
            onClose();
        }
    });

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–µ–π—Ä–∏–Ω–≥–∞
    const shareData = React.useMemo(() => {
        if (!selectedMatch || !tournament) return null;

        const baseUrl = window.location.origin;
        const shareUrl = `${baseUrl}/tournaments/${tournament.id}/match/${selectedMatch.id}`;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã
        const team1 = selectedMatch.team1_name || '–ö–æ–º–∞–Ω–¥–∞ 1';
        const team2 = selectedMatch.team2_name || '–ö–æ–º–∞–Ω–¥–∞ 2';
        const winner = selectedMatch.winner_team_id === selectedMatch.team1_id ? team1 : team2;
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—á–µ—Ç
        let score = `${selectedMatch.score1 || 0}:${selectedMatch.score2 || 0}`;
        if (selectedMatch.maps_data && Array.isArray(selectedMatch.maps_data) && selectedMatch.maps_data.length === 1) {
            const mapData = selectedMatch.maps_data[0];
            if (mapData.team1_score !== undefined && mapData.team2_score !== undefined) {
                score = selectedMatch.winner_team_id === selectedMatch.team1_id 
                    ? `${mapData.team1_score}:${mapData.team2_score}`
                    : `${mapData.team2_score}:${mapData.team1_score}`;
            }
        }

        const title = `üèÜ ${winner} –ø–æ–±–µ–¥–∏–ª–∞ ${score}`;
        const description = `–†–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ç—á–∞ –≤ —Ç—É—Ä–Ω–∏—Ä–µ "${tournament.name}" –Ω–∞ 1337 Community`;
        const hashtags = ['1337Community', 'Esports', 'Tournament'];

        return {
            url: shareUrl,
            title,
            description,
            team1,
            team2,
            winner,
            score,
            hashtags,
            tournamentName: tournament.name,
            matchNumber: selectedMatch.match_number || selectedMatch.id
        };
    }, [selectedMatch, tournament]);

    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —à–µ–π—Ä–∏–Ω–≥–∞ –≤ —Ä–∞–∑–Ω—ã–µ —Å–æ—Ü—Å–µ—Ç–∏
    const shareToTelegram = () => {
        if (!shareData) return;
        
        const text = `üéÆ ${shareData.title}\n\nüèÜ –¢—É—Ä–Ω–∏—Ä: ${shareData.tournamentName}\nüìä –ú–∞—Ç—á #${shareData.matchNumber}\n\n${shareData.description}`;
        const url = `https://t.me/share/url?url=${encodeURIComponent(shareData.url)}&text=${encodeURIComponent(text)}`;
        window.open(url, '_blank');
        
        setShareStats(prev => ({ ...prev, shares: prev.shares + 1 }));
    };

    const shareToVK = () => {
        if (!shareData) return;
        
        const url = `https://vk.com/share.php?url=${encodeURIComponent(shareData.url)}&title=${encodeURIComponent(shareData.title)}&description=${encodeURIComponent(shareData.description)}`;
        window.open(url, '_blank');
        
        setShareStats(prev => ({ ...prev, shares: prev.shares + 1 }));
    };

    const shareToDiscord = () => {
        if (!shareData) return;
        
        // –î–ª—è Discord –∫–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤ –±—É—Ñ–µ—Ä —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
        const discordText = `üéÆ ${shareData.title}\n\nüèÜ **${shareData.tournamentName}**\nüìä –ú–∞—Ç—á #${shareData.matchNumber}\n\n${shareData.url}`;
        
        navigator.clipboard.writeText(discordText).then(() => {
            setCopiedUrl('discord');
            setTimeout(() => setCopiedUrl(''), 2000);
        });
        
        setShareStats(prev => ({ ...prev, copies: prev.copies + 1 }));
    };

    const copyToClipboard = () => {
        if (!shareData) return;
        
        navigator.clipboard.writeText(shareData.url).then(() => {
            setCopiedUrl('direct');
            setTimeout(() => setCopiedUrl(''), 2000);
        });
        
        setShareStats(prev => ({ ...prev, copies: prev.copies + 1 }));
    };

    if (!isOpen || !selectedMatch || !shareData) return null;

    return (
        <div className="modal-system-overlay" onClick={modalSystem.handleOverlayClick}>
            <div className={modalSystem.getModalClasses('medium')} onClick={(e) => e.stopPropagation()}>
                
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                <div className="modal-system-header">
                    <div>
                        <h2 className="modal-system-title">
                            üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –º–∞—Ç—á–∞
                        </h2>
                        <p className="modal-system-subtitle">
                            –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å –¥—Ä—É–∑—å—è–º–∏ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö
                        </p>
                    </div>
                    <button 
                        className="modal-system-close" 
                        onClick={onClose}
                        aria-label="–ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ"
                    >
                        ‚úï
                    </button>
                </div>

                {/* –¢–µ–ª–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
                <div className="modal-system-body">
                    
                    {/* –ü—Ä–µ–≤—å—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ */}
                    <div className="match-share-preview">
                        <div className="match-share-result">
                            <div className="match-share-teams">
                                <div className="match-share-team">
                                    <span className="team-name">{shareData.team1}</span>
                                </div>
                                <div className="match-share-score">
                                    <span className="score">{shareData.score}</span>
                                    {shareData.winner && (
                                        <span className="winner-indicator">
                                            üëë {shareData.winner}
                                        </span>
                                    )}
                                </div>
                                <div className="match-share-team">
                                    <span className="team-name">{shareData.team2}</span>
                                </div>
                            </div>
                            <div className="match-share-meta">
                                <span className="tournament-name">{shareData.tournamentName}</span>
                                <span className="match-number">–ú–∞—Ç—á #{shareData.matchNumber}</span>
                            </div>
                        </div>
                    </div>

                    {/* –ö–Ω–æ–ø–∫–∏ —à–µ–π—Ä–∏–Ω–≥–∞ */}
                    <div className="match-share-buttons">
                        <h3 className="share-section-title">üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö</h3>
                        
                        <div className="social-share-grid">
                            <button 
                                className="social-share-btn telegram"
                                onClick={shareToTelegram}
                                title="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram"
                            >
                                <div className="social-icon">üì±</div>
                                <span>Telegram</span>
                            </button>
                            
                            <button 
                                className="social-share-btn vk"
                                onClick={shareToVK}
                                title="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"
                            >
                                <div className="social-icon">üåê</div>
                                <span>–í–ö–æ–Ω—Ç–∞–∫—Ç–µ</span>
                            </button>
                            
                            <button 
                                className="social-share-btn discord"
                                onClick={shareToDiscord}
                                title="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è Discord"
                            >
                                <div className="social-icon">üí¨</div>
                                <span>Discord</span>
                                {copiedUrl === 'discord' && <span className="copied-indicator">–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!</span>}
                            </button>
                        </div>
                    </div>

                    {/* –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ */}
                    <div className="direct-link-section">
                        <h3 className="share-section-title">üîó –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞</h3>
                        
                        <div className="direct-link-container">
                            <input 
                                type="text" 
                                value={shareData.url} 
                                readOnly 
                                className="direct-link-input"
                                onClick={(e) => e.target.select()}
                            />
                            <button 
                                className="copy-link-btn"
                                onClick={copyToClipboard}
                                title="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É"
                            >
                                {copiedUrl === 'direct' ? '‚úì' : 'üìã'}
                            </button>
                        </div>
                        
                        {copiedUrl === 'direct' && (
                            <p className="copy-success">‚úÖ –°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!</p>
                        )}
                    </div>

                    {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) */}
                    {(shareStats.copies > 0 || shareStats.shares > 0) && (
                        <div className="share-stats">
                            <small className="stats-text">
                                üìä –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–π: {shareStats.copies} | –†–µ–ø–æ—Å—Ç–æ–≤: {shareStats.shares}
                            </small>
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default MatchShareModal;