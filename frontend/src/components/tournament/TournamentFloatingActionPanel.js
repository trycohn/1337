/**
 * TournamentFloatingActionPanel v1.0.1 - –ü–ª–∞–≤–∞—é—â–∞—è –ø–∞–Ω–µ–ª—å –¥–µ–π—Å—Ç–≤–∏–π
 * 
 * @version 1.0.1 (–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª React Hooks)
 * @created 2025-01-22
 * @author 1337 Community Development Team
 * @purpose –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –ø–ª–∞–≤–∞—é—â–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–æ–º
 * @features –°–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ, —É–º–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫, –∞–Ω–∏–º–∞—Ü–∏–∏
 */

import React, { useState, useMemo } from 'react';
import './TournamentFloatingActionPanel.css';

const TournamentFloatingActionPanel = ({
    tournament,
    user,
    hasAccess,
    onStartTournament,
    onEndTournament,
    onGenerateBracket,
    onRegenerateBracket,
    onClearResults,
    hasMatches = false,
    hasBracket = false
}) => {
    const [isExpanded, setIsExpanded] = useState(false);
    const [isAnimating, setIsAnimating] = useState(false);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    const isAdminOrCreator = hasAccess || (user && tournament && 
        (tournament.creator_id === user.id || tournament.created_by === user.id || user.role === 'admin'));

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ç—É—Å–∞ —Ç—É—Ä–Ω–∏—Ä–∞
    const availableActions = useMemo(() => {
        if (!tournament) return [];
        
        const actions = [];
        const status = tournament.status;

        // "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Å–µ—Ç–∫—É" - –ø—Ä–∏ —Å—Ç–∞—Ç—É—Å–µ "–ê–∫—Ç–∏–≤–Ω—ã–π", –µ—Å–ª–∏ —Å–µ—Ç–∫–∏ –Ω–µ—Ç
        if (status === 'active' && !hasBracket) {
            actions.push({
                id: 'generate-bracket',
                icon: '‚ö°',
                title: '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Å–µ—Ç–∫—É',
                description: '–°–æ–∑–¥–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Å–µ—Ç–∫—É –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞',
                onClick: onGenerateBracket,
                color: 'primary',
                priority: 1
            });
        }

        // "–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Å–µ—Ç–∫–∏" - –ø—Ä–∏ —Å—Ç–∞—Ç—É—Å–µ "–ê–∫—Ç–∏–≤–Ω—ã–π", –µ—Å–ª–∏ —Å–µ—Ç–∫–∞ –µ—Å—Ç—å
        if (status === 'active' && hasBracket) {
            actions.push({
                id: 'regenerate-bracket',
                icon: 'üîÑ',
                title: '–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ç–∫—É',
                description: '–ó–∞–Ω–æ–≤–æ —Å–æ–∑–¥–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Å–µ—Ç–∫—É',
                onClick: onRegenerateBracket,
                color: 'warning',
                priority: 2
            });
        }

        // "–ù–∞—á–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä" - –ø—Ä–∏ —Å—Ç–∞—Ç—É—Å–µ "–ê–∫—Ç–∏–≤–Ω—ã–π", –µ—Å–ª–∏ —Å–µ—Ç–∫–∞ –µ—Å—Ç—å
        if (status === 'active' && hasBracket) {
            actions.push({
                id: 'start-tournament',
                icon: 'üöÄ',
                title: '–ù–∞—á–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä',
                description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞',
                onClick: onStartTournament,
                color: 'success',
                priority: 1
            });
        }

        // "–û—á–∏—Å—Ç–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π" - –ø—Ä–∏ —Å—Ç–∞—Ç—É—Å–µ "–ò–¥–µ—Ç", –µ—Å–ª–∏ –µ—Å—Ç—å –º–∞—Ç—á–∏
        if (status === 'in_progress' && hasMatches) {
            actions.push({
                id: 'clear-results',
                icon: 'üóëÔ∏è',
                title: '–û—á–∏—Å—Ç–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã',
                description: '–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π',
                onClick: onClearResults,
                color: 'danger',
                priority: 3
            });
        }

        // "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä" - –ø—Ä–∏ —Å—Ç–∞—Ç—É—Å–µ "–ò–¥–µ—Ç"
        if (status === 'in_progress') {
            actions.push({
                id: 'end-tournament',
                icon: 'üèÅ',
                title: '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä',
                description: '–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞',
                onClick: onEndTournament,
                color: 'primary',
                priority: 1
            });
        }

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É (–º–µ–Ω—å—à–µ–µ —á–∏—Å–ª–æ = –≤—ã—à–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
        return actions.sort((a, b) => a.priority - b.priority);
    }, [tournament, hasBracket, hasMatches, onStartTournament, onEndTournament, 
        onGenerateBracket, onRegenerateBracket, onClearResults]);

    // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –∏–ª–∏ —Ç—É—Ä–Ω–∏—Ä–∞ - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –≤–æ–æ–±—â–µ
    if (!isAdminOrCreator || !tournament) {
        return null;
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å
    if (availableActions.length === 0) {
        return null;
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–∞–Ω–µ–ª–∏
    const handleToggle = () => {
        if (isAnimating) return;
        
        setIsAnimating(true);
        setIsExpanded(!isExpanded);
        
        // –£–±–∏—Ä–∞–µ–º —Ñ–ª–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        setTimeout(() => setIsAnimating(false), 300);
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –¥–µ–π—Å—Ç–≤–∏—é
    const handleActionClick = (action) => {
        if (action.onClick && typeof action.onClick === 'function') {
            action.onClick();
        }
    };

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞
    const getStatusIndicatorColor = () => {
        switch (tournament.status) {
            case 'active': return '#4CAF50';
            case 'in_progress': return '#FF9800';
            case 'completed': return '#9E9E9E';
            default: return '#2196F3';
        }
    };

    // –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ —Ç—É—Ä–Ω–∏—Ä–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    const getStatusText = () => {
        switch (tournament.status) {
            case 'active': return '–ê–∫—Ç–∏–≤–Ω—ã–π';
            case 'in_progress': return '–ò–¥–µ—Ç';
            case 'completed': return '–ó–∞–≤–µ—Ä—à–µ–Ω';
            default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        }
    };

    return (
        <div className={`tournament-floating-panel ${isExpanded ? 'expanded' : 'collapsed'} ${isAnimating ? 'animating' : ''}`}>
            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞-–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å */}
            <div className="floating-panel-toggle" onClick={handleToggle}>
                <div className="toggle-icon">
                    {isExpanded ? '‚úï' : '‚öôÔ∏è'}
                </div>
                <div className="status-indicator" style={{ backgroundColor: getStatusIndicatorColor() }}>
                    <div className="status-text">{getStatusText()}</div>
                </div>
                <div className="actions-count">
                    {availableActions.length}
                </div>
            </div>

            {/* –†–∞–∑–≤–µ—Ä–Ω—É—Ç–∞—è –ø–∞–Ω–µ–ª—å —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ */}
            {isExpanded && (
                <div className="floating-panel-content">
                    <div className="panel-header">
                        <h4>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–æ–º</h4>
                        <span className="tournament-name">{tournament.name}</span>
                    </div>
                    
                    <div className="panel-actions">
                        {availableActions.map((action) => (
                            <div 
                                key={action.id}
                                className={`floating-action-item ${action.color}`}
                                onClick={() => handleActionClick(action)}
                                title={action.description}
                            >
                                <div className="action-icon">
                                    {action.icon}
                                </div>
                                <div className="action-content">
                                    <div className="action-title">
                                        {action.title}
                                    </div>
                                    <div className="action-description">
                                        {action.description}
                                    </div>
                                </div>
                                <div className="action-arrow">
                                    ‚Üí
                                </div>
                            </div>
                        ))}
                    </div>

                    <div className="panel-footer">
                        <div className="panel-info">
                            üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞: <strong>{getStatusText()}</strong>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default TournamentFloatingActionPanel; 