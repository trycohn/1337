/**
 * TournamentAdminPanel v2.0.0 - –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 * 
 * @version 2.0.0 (–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
 * @updated 2025-01-22
 * @author 1337 Community Development Team
 * @purpose –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–æ–º —Å —É–º–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
 * @features –ê–≤–∞—Ç–∞—Ä—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, ELO —Ä–µ–π—Ç–∏–Ω–≥–∏, –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ, –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å
 */

import React, { useState, useEffect, useCallback, useMemo } from 'react';
import axios from 'axios';
import ManualBracketEditor from './ManualBracketEditor';
import { Link } from 'react-router-dom';
import { ensureHttps } from '../../utils/userHelpers';
import TournamentSettingsPanel from './TournamentSettingsPanel';
import './TournamentAdminPanel.css';

const TournamentAdminPanel = ({
    tournament,
    participants,
    matches,
    isCreatorOrAdmin,
    isLoading,
    onStartTournament,
    onEndTournament,
    onRegenerateBracket,
    onShowAddParticipantModal,
    onShowParticipantSearchModal,
    onRemoveParticipant,
    onEditMatchResult,
    onGenerateBracket,
    onClearResults,
    // üÜï –ù–û–í–´–ï –ü–†–û–ü–°–´ –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê–ú–ò
    onInviteAdmin,
    onRemoveAdmin,
    onShowAdminSearchModal,
    // üÜï –ù–û–í–´–ô –ü–†–û–ü–° –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ù–ê–°–¢–†–û–ô–ö–ê–ú–ò –¢–£–†–ù–ò–†–ê
    onUpdateTournamentSetting,
    // üóëÔ∏è –ù–û–í–´–ô –ü–†–û–ü–° –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø –¢–£–†–ù–ò–†–ê
    onDeleteTournament,
    // üÜï –î–û–ë–ê–í–õ–ï–ù –ü–†–û–ü–° USER –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –°–û–ó–î–ê–¢–ï–õ–Ø
    user,
    // üÜï –ù–û–í–´–ô –ü–†–û–ü–° –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –õ–û–ë–ë–ò –ú–ê–¢–ß–ê
    onCreateMatchLobby
}) => {
    // üÜï –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä—É—á–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ç–∫–∏
    const [showManualBracketEditor, setShowManualBracketEditor] = useState(false);
    
    // ‚úèÔ∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ç–∫–∏
    const handleManualBracketSave = useCallback(async (result) => {
        try {
            console.log('‚úÖ –†—É—á–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:', result);
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            alert(`–†–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!\n–û–±–Ω–æ–≤–ª–µ–Ω–æ –º–∞—Ç—á–µ–π: ${result.updatedMatches}\n–û—á–∏—â–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${result.clearedResults}`);
            
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
            window.location.reload();
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä—É—á–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π: ' + (error.response?.data?.message || error.message));
        }
    }, []);

    const handleCloseManualBracketEditor = useCallback(() => {
        setShowManualBracketEditor(false);
    }, []);

    const [qualifiers, setQualifiers] = useState([]);
    const [qualifiersLoading, setQualifiersLoading] = useState(false);
    const [allTournaments, setAllTournaments] = useState([]);
    const [tournamentsLoading, setTournamentsLoading] = useState(false);
    const [statusFilter, setStatusFilter] = useState('all');
    const [searchQuery, setSearchQuery] = useState('');
    const hasFinalControls = !!tournament?.is_series_final && isCreatorOrAdmin;

    const fetchQualifiers = async () => {
        if (!tournament?.id) return;
        setQualifiersLoading(true);
        try {
            const res = await axios.get(`/api/tournaments/${tournament.id}/qualifiers`);
            setQualifiers(res.data || []);
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–±–æ—Ä–æ—á–Ω—ã—Ö:', e);
        } finally {
            setQualifiersLoading(false);
        }
    };

    useEffect(() => {
        const fetchAllTournaments = async () => {
            setTournamentsLoading(true);
            try {
                const res = await axios.get('/api/tournaments');
                const list = Array.isArray(res.data) ? res.data : [];
                setAllTournaments(list);
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ —Ç—É—Ä–Ω–∏—Ä–æ–≤:', e);
                setAllTournaments([]);
            } finally {
                setTournamentsLoading(false);
            }
        };

        if (hasFinalControls) {
            fetchQualifiers();
            fetchAllTournaments();
        }
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [tournament?.id, hasFinalControls]);

    const filteredTournaments = useMemo(() => {
        const q = (searchQuery || '').toLowerCase();
        return (allTournaments || [])
            .filter(t => t.id !== tournament.id)
            .filter(t => statusFilter === 'all' ? true : (t.status === statusFilter))
            .filter(t => q ? (String(t.name || '').toLowerCase().includes(q) || String(t.id).includes(q)) : true);
    }, [allTournaments, tournament.id, statusFilter, searchQuery]);

    async function handleSaveQualifiers(nextQualifiers) {
        if (!tournament?.id) return;
        try {
            const token = localStorage.getItem('token');
            await axios.put(`/api/tournaments/${tournament.id}/qualifiers`, { qualifiers: nextQualifiers }, {
                headers: { Authorization: `Bearer ${token}` }
            });
            await fetchQualifiers();
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–±–æ—Ä–æ—á–Ω—ã—Ö:', e);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–±–æ—Ä–æ—á–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã');
        }
    }

    async function handleSyncQualifiers() {
        if (!tournament?.id) return;
        try {
            const token = localStorage.getItem('token');
            const res = await axios.post(`/api/tournaments/${tournament.id}/qualifiers/sync`, {}, {
                headers: { Authorization: `Bearer ${token}` }
            });
            alert(`–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${res.data?.promotions?.length || 0}`);
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π:', e);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π');
        }
    }

    if (!isCreatorOrAdmin) {
        return null;
    }

    const getStatusDisplay = () => {
        const statusMap = {
            'registration': { icon: 'üìã', text: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', class: 'status-registration' },
            'active': { icon: 'üéÆ', text: '–ê–∫—Ç–∏–≤–Ω—ã–π', class: 'status-active' },
            'in_progress': { icon: '‚öîÔ∏è', text: '–í –ø—Ä–æ—Ü–µ—Å—Å–µ', class: 'status-in-progress' },
            'completed': { icon: 'üèÜ', text: '–ó–∞–≤–µ—Ä—à–µ–Ω', class: 'status-completed' }
        };
        
        return statusMap[tournament?.status] || { icon: '‚ùì', text: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', class: 'status-unknown' };
    };

    // üéØ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –°–õ–ï–î–£–Æ–©–ï–ì–û –≠–¢–ê–ü–ê
    const getNextStageAction = () => {
        const hasMatches = matches && matches.length > 0;
        const hasBracket = hasMatches;
        const participantsCount = participants?.length || 0;

        switch (tournament?.status) {
            case 'registration':
            case 'active':
                if (hasBracket) {
                    // –ï—Å–ª–∏ —Å–µ—Ç–∫–∞ –µ—Å—Ç—å - –º–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä
                    return {
                        action: 'start',
                        label: 'üöÄ –ù–∞—á–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä',
                        className: 'next-stage-btn start-stage',
                        handler: onStartTournament
                    };
                } else {
                    // –ï—Å–ª–∏ —Å–µ—Ç–∫–∏ –Ω–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞—á–∞–ª–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
                    if (participantsCount >= 2) {
                        return {
                            action: 'start_warning',
                            label: 'üöÄ –ù–∞—á–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä',
                            className: 'next-stage-btn start-stage',
                            handler: () => handleStartWithWarning()
                        };
                    } else {
                        return {
                            action: 'waiting',
                            label: '‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
                            className: 'next-stage-btn waiting-stage',
                            disabled: true
                        };
                    }
                }

            case 'in_progress':
                return {
                    action: 'end',
                    label: 'üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä',
                    className: 'next-stage-btn end-stage',
                    handler: onEndTournament
                };

            case 'completed':
                return {
                    action: 'completed',
                    label: '‚úÖ –¢—É—Ä–Ω–∏—Ä –∑–∞–≤–µ—Ä—à–µ–Ω',
                    className: 'next-stage-btn completed-stage',
                    disabled: true
                };

            default:
                return null;
        }
    };

    // üéØ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –û–ë–†–ê–ë–û–¢–ö–ò –ù–ê–ß–ê–õ–ê –¢–£–†–ù–ò–†–ê –ë–ï–ó –°–ï–¢–ö–ò
    const handleStartWithWarning = () => {
        const confirmed = window.confirm(
            '‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ!\n\n' +
            '–°–µ—Ç–∫–∞ —Ç—É—Ä–Ω–∏—Ä–∞ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞. –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ç—É—Ä–Ω–∏—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Å–µ—Ç–∫—É.\n\n' +
            '–í—ã –º–æ–∂–µ—Ç–µ:\n' +
            '1. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ç–∫—É –≤ —Ä–∞–∑–¥–µ–ª–µ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ç–∫–æ–π"\n' +
            '2. –ó–∞—Ç–µ–º –Ω–∞–∂–∞—Ç—å "–ù–∞—á–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä"\n\n' +
            '–•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ç–∫—É —Å–µ–π—á–∞—Å?'
        );
        
        if (confirmed && onGenerateBracket) {
            onGenerateBracket();
        }
    };

    const statusDisplay = getStatusDisplay();
    const nextStageAction = getNextStageAction();
    const hasMatches = matches && matches.length > 0;
    const hasBracket = hasMatches;
    const hasNoResults = matches?.some(m => m.status === 'completed') || matches?.some(m => m.status === 'ready');

    return (
        <div className="tournament-admin-panel-v2">
            {/* üéØ –ó–ê–ì–û–õ–û–í–û–ö –° –°–¢–ê–¢–£–°–û–ú –ò –ö–ù–û–ü–ö–û–ô –°–õ–ï–î–£–Æ–©–ï–ì–û –≠–¢–ê–ü–ê */}
            <div className="admin-panel-header-v2">
                <div className="header-main-info">
                    <h3>‚öôÔ∏è –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–æ–º</h3>
                    <div className="status-and-action">
                        <div className={`tournament-status-v2 ${statusDisplay.class}`}>
                            <span className="status-icon-v2">{statusDisplay.icon}</span>
                            <span className="status-text-v2">{statusDisplay.text}</span>
                        </div>
                        
                        {/* üéØ –ö–ù–û–ü–ö–ê –°–õ–ï–î–£–Æ–©–ï–ì–û –≠–¢–ê–ü–ê */}
                        {nextStageAction && (
                            <button 
                                className={nextStageAction.className}
                                onClick={nextStageAction.handler}
                                disabled={nextStageAction.disabled || isLoading}
                                title={nextStageAction.label}
                            >
                                {nextStageAction.label}
                            </button>
                        )}
                    </div>
                </div>

                {/* üéØ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ö–ù–û–ü–ö–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø (–ï–°–õ–ò –ù–£–ñ–ù–´) */}
                <div className="header-controls">
                    {/* –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç–∫–∏ */}
                    {tournament?.status === 'active' && hasBracket && (
                        <button 
                            className="header-control-btn secondary-btn-v2"
                            onClick={onRegenerateBracket}
                            disabled={isLoading}
                            title="–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Å–µ—Ç–∫—É"
                        >
                            üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                    )}
                </div>
            </div>

            <div className="admin-panel-content-v2">
                {/* üéØ –ö–†–ê–¢–ö–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –¢–£–†–ù–ò–†–ï */}
                <div className="tournament-info-compact">
                    <div className="info-stats">
                        <div className="stat-item">
                            <span className="stat-value">{participants?.length || 0}</span>
                            <span className="stat-label">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</span>
                        </div>
                        <div className="stat-item">
                            <span className="stat-value">{matches?.length || 0}</span>
                            <span className="stat-label">–ú–∞—Ç—á–µ–π</span>
                        </div>
                        <div className="stat-item">
                            <span className="stat-value">{tournament?.game || 'N/A'}</span>
                            <span className="stat-label">–ò–≥—Ä–∞</span>
                        </div>
                        <div className="stat-item">
                            <span className="stat-value">{tournament?.format || 'N/A'}</span>
                            <span className="stat-label">–§–æ—Ä–º–∞—Ç</span>
                        </div>
                    </div>
                </div>

                {/* üéØ –ú–ò–ù–ò–ú–ê–õ–ò–°–¢–ò–ß–ù–´–ô –°–ü–ò–°–û–ö –£–ß–ê–°–¢–ù–ò–ö–û–í */}
                {participants && participants.length > 0 && (
                    <div className="participants-section-v2">
                        <div className="section-header">
                            <h4>üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ ({participants.length})</h4>
                            {tournament?.status === 'active' && !hasBracket && (
                                <div className="section-controls">
                                    <button 
                                        className="add-btn-compact"
                                        onClick={onShowParticipantSearchModal}
                                        disabled={isLoading}
                                        title="–ù–∞–π—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞"
                                    >
                                        üîç
                                    </button>
                                    <button 
                                        className="add-btn-compact"
                                        onClick={onShowAddParticipantModal}
                                        disabled={isLoading}
                                        title="–î–æ–±–∞–≤–∏—Ç—å –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ"
                                    >
                                        üë§
                                    </button>
                                </div>
                            )}
                        </div>

                        <div className="participants-grid-v2">
                            {participants.map((participant, index) => (
                                <div key={participant.id || index} className="participant-card-v2">
                                    <div className="participant-info-v2">
                                        {/* –ê–í–ê–¢–ê–† –£–ß–ê–°–¢–ù–ò–ö–ê */}
                                        <div className="participant-avatar-v2">
                                            {participant.avatar_url ? (
                                                <img 
                                                    src={ensureHttps(participant.avatar_url)} 
                                                    alt={participant.name || participant.username || '–£—á–∞—Å—Ç–Ω–∏–∫'}
                                                    onError={(e) => {e.target.src = '/default-avatar.png'}}
                                                />
                                            ) : (
                                                <div className="avatar-placeholder-v2">
                                                    {(participant.name || participant.username || '–£').charAt(0).toUpperCase()}
                                                </div>
                                            )}
                                        </div>

                                        {/* –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –£–ß–ê–°–¢–ù–ò–ö–ï */}
                                        <div className="participant-details-v2">
                                            {participant.user_id ? (
                                                <Link 
                                                    to={`/user/${participant.user_id}`}
                                                    className="participant-name-v2"
                                                >
                                                    {participant.name || participant.username || '–£—á–∞—Å—Ç–Ω–∏–∫'}
                                                </Link>
                                            ) : (
                                                <span className="participant-name-v2 unregistered">
                                                    {participant.name || '–ù–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫'}
                                                </span>
                                            )}
                                            
                                            {/* ELO –†–ï–ô–¢–ò–ù–ì */}
                                            {participant.faceit_elo && (
                                                <div className="participant-elo-v2">
                                                    {participant.faceit_elo} ELO
                                                </div>
                                            )}
                                        </div>
                                    </div>

                                    {/* –ö–ù–û–ü–ö–ê –£–î–ê–õ–ï–ù–ò–Ø */}
                                    {tournament?.status === 'active' && !hasBracket && (
                                        <button
                                            className="remove-participant-btn-v2"
                                            onClick={() => onRemoveParticipant(participant.id)}
                                            disabled={isLoading}
                                            title="–£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"
                                        >
                                            üóëÔ∏è
                                        </button>
                                    )}
                                </div>
                            ))}
                        </div>
                    </div>
                )}

                {/* üÜï –£–ü–†–ê–í–õ–ï–ù–ò–ï –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê–ú–ò –¢–£–†–ù–ò–†–ê */}
                <div className="admins-section-v2">
                    <div className="section-header">
                        <h4>üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Ç—É—Ä–Ω–∏—Ä–∞</h4>
                        <div className="section-controls">
                            <button 
                                className="btn btn-secondary"
                                onClick={onShowAdminSearchModal}
                                disabled={isLoading}
                                title="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
                            >
                                ‚ûï –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å
                            </button>
                        </div>
                    </div>

                    <div className="current-admins-list">
                        {/* –°–æ–∑–¥–∞—Ç–µ–ª—å —Ç—É—Ä–Ω–∏—Ä–∞ */}
                        <div className="admin-item creator">
                            <div className="admin-info">
                                <div className="admin-name">
                                    {tournament?.creator_username || 
                                     (tournament?.created_by ? `User ID: ${tournament.created_by}` : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–æ–∑–¥–∞—Ç–µ–ª—å')}
                                </div>
                                <div className="admin-role">–°–æ–∑–¥–∞—Ç–µ–ª—å —Ç—É—Ä–Ω–∏—Ä–∞</div>
                            </div>
                            <div className="admin-actions">
                                <span className="creator-badge">üëë –°–æ–∑–¥–∞—Ç–µ–ª—å</span>
                            </div>
                        </div>

                        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã */}
                        {tournament?.admins && tournament.admins.length > 0 && tournament.admins.map(admin => (
                            <div key={admin.id} className="admin-item">
                                <div className="admin-info">
                                    <div className="admin-name">{admin.username}</div>
                                    <div className="admin-role">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</div>
                                </div>
                                <div className="admin-actions">
                                    <button
                                        className="remove-admin-btn"
                                        onClick={() => onRemoveAdmin(admin.user_id)}
                                        title="–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
                                    >
                                        üóëÔ∏è
                                    </button>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>

                {/* üéØ –£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–£–†–ù–ò–†–ù–û–ô –°–ï–¢–ö–û–ô */}
                <div className="bracket-section-v2">
                    <h4>üèÜ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ç–∫–æ–π</h4>
                    <div className="bracket-actions">
                        {/* –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç–∫–∏ */}
                        {tournament?.status === 'active' && !hasBracket && participants?.length >= 2 && (
                            <button 
                                className="action-btn-v2 generate-btn"
                                onClick={() => onGenerateBracket()}
                                disabled={isLoading}
                                title="–°–æ–∑–¥–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Å–µ—Ç–∫—É"
                            >
                                üé≤ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ç–∫—É
                            </button>
                        )}
                        
                        {/* –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç–∫–∏ */}
                        {tournament?.status === 'active' && hasBracket && hasNoResults && (
                            <button 
                                className="action-btn-v2 regenerate-btn"
                                onClick={() => onRegenerateBracket()}
                                disabled={isLoading}
                                title="–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Å–µ—Ç–∫—É"
                            >
                                üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ç–∫—É
                            </button>
                        )}
                    </div>

                    {participants?.length < 2 && (
                        <div className="warning-message-v2">
                            ‚ö†Ô∏è –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ç–∫–∏ –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 —É—á–∞—Å—Ç–Ω–∏–∫–∞
                        </div>
                    )}
                </div>

                {/* üéÆ –£–ü–†–ê–í–õ–ï–ù–ò–ï –õ–û–ë–ë–ò –ú–ê–¢–ß–ï–ô (–¥–ª—è CS2) */}
                {tournament?.lobby_enabled && tournament?.status === 'in_progress' && (
                    <div className="lobby-section-v2">
                        <h4>üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–±–±–∏ –º–∞—Ç—á–µ–π</h4>
                        <div className="lobby-info">
                            <p>–õ–æ–±–±–∏ –º–∞—Ç—á–µ–π –≤–∫–ª—é—á–µ–Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞</p>
                            <small>–£—á–∞—Å—Ç–Ω–∏–∫–∏ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –º–∞—Ç—á–∞</small>
                        </div>
                        <div className="lobby-actions">
                            {matches?.filter(m => m.status === 'ready' && !m.lobby_created).map(match => (
                                <button
                                    key={match.id}
                                    className="action-btn-v2 create-lobby-btn"
                                    onClick={() => onCreateMatchLobby && onCreateMatchLobby(match.id)}
                                    disabled={isLoading}
                                    title={`–°–æ–∑–¥–∞—Ç—å –ª–æ–±–±–∏ –¥–ª—è –º–∞—Ç—á–∞ ${match.team1_name} vs ${match.team2_name}`}
                                >
                                    üéÆ –°–æ–∑–¥–∞—Ç—å –ª–æ–±–±–∏: {match.team1_name} vs {match.team2_name}
                                </button>
                            ))}
                        </div>
                    </div>
                )}

                {/* üÜï –£–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê–°–¢–†–û–ô–ö–ê–ú–ò –¢–£–†–ù–ò–†–ê */}
                {tournament?.status === 'active' && (
                    <TournamentSettingsPanel 
                        tournament={tournament}
                        isLoading={isLoading}
                        isCreator={user?.id === tournament?.created_by}
                        onUpdateSetting={onUpdateTournamentSetting}
                    />
                )}

                {/* üèÅ –§–∏–Ω–∞–ª —Å–µ—Ä–∏–∏: –≤—ã–±–æ—Ä –æ—Ç–±–æ—Ä–æ—á–Ω—ã—Ö –∏ top-N */}
                {hasFinalControls && (
                    <div className="final-series-section">
                        <h4>üèÅ –§–∏–Ω–∞–ª —Å–µ—Ä–∏–∏: –æ—Ç–±–æ—Ä–æ—á–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã</h4>
                        {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
                        <div className="qualifiers-filters">
                            <input
                                type="text"
                                className="qualifier-search-input"
                                placeholder="–ü–æ–∏—Å–∫ —Ç—É—Ä–Ω–∏—Ä–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ #id"
                                value={searchQuery}
                                onChange={(e) => setSearchQuery(e.target.value)}
                            />
                            <select
                                className="qualifier-status-filter"
                                value={statusFilter}
                                onChange={(e) => setStatusFilter(e.target.value)}
                            >
                                <option value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                                <option value="registration">Registration</option>
                                <option value="active">Active</option>
                                <option value="in_progress">In progress</option>
                                <option value="completed">Completed</option>
                            </select>
                            <span className="qualifier-count">–ù–∞–π–¥–µ–Ω–æ: {filteredTournaments.length}</span>
                        </div>

                        {qualifiersLoading || tournamentsLoading ? (
                            <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
                        ) : (
                            <div className="qualifiers-editor">
                                {(qualifiers || []).map((q, idx) => (
                                    <div key={q.qualifier_tournament_id || idx} className="qualifier-row">
                                        <select
                                            className="qualifier-select"
                                            value={q.qualifier_tournament_id || ''}
                                            onChange={(e) => {
                                                const v = parseInt(e.target.value || 0);
                                                const next = qualifiers.slice();
                                                next[idx] = { ...next[idx], qualifier_tournament_id: v };
                                                setQualifiers(next);
                                            }}
                                        >
                                            <option value="" disabled>–í—ã–±–µ—Ä–∏—Ç–µ —Ç—É—Ä–Ω–∏—Ä‚Äë–æ—Ç–±–æ—Ä–æ—á–Ω—ã–π</option>
                                            {filteredTournaments.map(t => (
                                                    <option key={t.id} value={t.id}>
                                                        {t.name} (#{t.id}) ‚Äî {t.status}
                                                    </option>
                                                ))}
                                        </select>
                                        <select
                                            className="qualifier-slots-select"
                                            value={q.slots || 1}
                                            onChange={(e) => {
                                                const v = parseInt(e.target.value || 1);
                                                const next = qualifiers.slice();
                                                next[idx] = { ...next[idx], slots: v };
                                                setQualifiers(next);
                                            }}
                                        >
                                            <option value={1}>top 1</option>
                                            <option value={2}>top 2</option>
                                            <option value={3}>top 3</option>
                                        </select>
                                        <button
                                            className="action-btn-v2"
                                            onClick={() => {
                                                const next = qualifiers.filter((_, i) => i !== idx);
                                                setQualifiers(next);
                                            }}
                                            title="–£–¥–∞–ª–∏—Ç—å –æ—Ç–±–æ—Ä–æ—á–Ω—ã–π"
                                        >
                                            ‚ùå
                                        </button>
                                    </div>
                                ))}

                                <div className="qualifier-row">
                                    <button
                                        className="action-btn-v2"
                                        onClick={() => setQualifiers([...(qualifiers || []), { qualifier_tournament_id: 0, slots: 1 }])}
                                    >
                                        ‚ûï –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–±–æ—Ä–æ—á–Ω—ã–π
                                    </button>
                                    <button
                                        className="action-btn-v2"
                                        onClick={() => handleSaveQualifiers(qualifiers)}
                                    >
                                        üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–≤—è–∑–∏
                                    </button>
                                    <button
                                        className="action-btn-v2"
                                        onClick={handleSyncQualifiers}
                                        title="–î–æ–±–∞–≤–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –≤ —Ñ–∏–Ω–∞–ª"
                                    >
                                        üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
                                    </button>
                                </div>
                            </div>
                        )}
                        <small>–£–∫–∞–∂–∏—Ç–µ ID —Ç—É—Ä–Ω–∏—Ä–æ–≤‚Äë–æ—Ç–±–æ—Ä–æ—á–Ω—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1, 4, 6, 7) –∏ —á–∏—Å–ª–æ –ø—Ä–∏–∑–æ–≤—ã—Ö —Å–ª–æ—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ (top1..top3).</small>
                    </div>
                )}

                {/* üéØ –£–ü–†–ê–í–õ–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú–ò */}
                {tournament?.status === 'in_progress' && matches?.some(m => m.status === 'completed') && (
                    <div className="results-section-v2">
                        <h4>üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏</h4>
                        <div className="results-actions">
                            <button 
                                className="action-btn-v2 clear-btn"
                                onClick={onClearResults}
                                disabled={isLoading}
                                title="–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π"
                            >
                                üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                            </button>
                            <button 
                                className="action-btn-v2 reset-btn"
                                onClick={onClearResults}
                                disabled={isLoading}
                                title="–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π –∏ –≤–µ—Ä–Ω—É—Ç—å –∏—Ö –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ"
                            >
                                üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                            </button>
                        </div>
                    </div>
                )}

                {/* üéØ –£–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ê–¢–ß–ê–ú–ò */}
                {tournament?.status === 'in_progress' && matches?.some(m => m.status === 'completed') && (
                    <div className="matches-section-v2">
                        <h4>‚öîÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç—á–∞–º–∏</h4>
                        <div className="matches-actions">
                            <button 
                                className="btn btn-secondary"
                                onClick={() => onEditMatchResult()}
                                disabled={isLoading}
                            >
                                ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                            </button>
                        </div>
                    </div>
                )}

                {/* üö® –û–ü–ê–°–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø */}
                <div className="danger-zone-section-v2">
                    <h4>üö® –û–ø–∞—Å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h4>
                    <div className="danger-zone-warning">
                        <p>‚ö†Ô∏è –î–µ–π—Å—Ç–≤–∏—è –≤ —ç—Ç–æ–π —Å–µ–∫—Ü–∏–∏ –Ω–µ–æ–±—Ä–∞—Ç–∏–º—ã. –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã!</p>
                    </div>
                    <div className="danger-actions">
                        {/* ‚úèÔ∏è –†–£–ß–ù–û–ï –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –°–ï–¢–ö–ò - –¢–û–õ–¨–ö–û –î–õ–Ø –°–û–ó–î–ê–¢–ï–õ–Ø */}
                        {tournament?.created_by === user?.id && matches && matches.length > 0 && (
                            <button 
                                className="action-btn-v2 danger-btn manual-bracket-btn"
                                onClick={() => setShowManualBracketEditor(true)}
                                disabled={isLoading}
                                title="–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤—Ä—É—á–Ω—É—é (–≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–±—Ä–æ—à–µ–Ω—ã)"
                            >
                                ‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫—É
                            </button>
                        )}
                        
                        {/* üóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –¢–£–†–ù–ò–†–ê - –¢–û–õ–¨–ö–û –î–õ–Ø –°–û–ó–î–ê–¢–ï–õ–Ø */}
                        {tournament?.created_by === user?.id && (
                            <button 
                                className="action-btn-v2 danger-btn delete-tournament-btn"
                                onClick={onDeleteTournament}
                                disabled={isLoading}
                                title="–£–¥–∞–ª–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è)"
                            >
                                üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä
                            </button>
                        )}
                        
                        {tournament?.created_by !== user?.id && (
                            <div className="creator-only-warning">
                                <p>‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é —Ç—É—Ä–Ω–∏—Ä–∞</p>
                            </div>
                        )}
                    </div>
                </div>
            </div>

            {/* üéØ –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –†–£–ß–ù–û–ì–û –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø –°–ï–¢–ö–ò */}
            {showManualBracketEditor && (
                <ManualBracketEditor
                    tournament={tournament}
                    participants={participants}
                    matches={matches}
                    onSave={handleManualBracketSave}
                    onClose={handleCloseManualBracketEditor}
                    isLoading={isLoading}
                />
            )}
        </div>
    );
};

export default TournamentAdminPanel; 