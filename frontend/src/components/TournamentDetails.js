// –ò–º–ø–æ—Ä—Ç—ã React –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ
import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import api from '../utils/api';
import './TournamentDetails.css';

// üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
console.log('üîç [TournamentDetails] –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª—è');
console.log('‚úÖ [TournamentDetails] –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç...');

function TournamentDetails() {
    console.log('üîç [TournamentDetails] –§—É–Ω–∫—Ü–∏—è TournamentDetails –≤—ã–∑–≤–∞–Ω–∞, –Ω–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...');
    
    const { id } = useParams();
    console.log('üîç [TournamentDetails] –ü–æ–ª—É—á–µ–Ω ID —Ç—É—Ä–Ω–∏—Ä–∞ –∏–∑ URL:', id);
    
    // –ü—Ä–æ—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const [tournament, setTournament] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    
    console.log('üîç [TournamentDetails] –°–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    
    // –ü—Ä–æ—Å—Ç–æ–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    useEffect(() => {
        console.log('üîç [TournamentDetails] useEffect –∑–∞–ø—É—â–µ–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—É—Ä–Ω–∏—Ä–∞');
        
        const fetchTournament = async () => {
            try {
                console.log('üîç [TournamentDetails] –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ç—É—Ä–Ω–∏—Ä–∞ —Å ID:', id);
                setLoading(true);
                setError(null);
                
                const response = await api.get(`/api/tournaments/${id}`);
                console.log('‚úÖ [TournamentDetails] –¢—É—Ä–Ω–∏—Ä –∑–∞–≥—Ä—É–∂–µ–Ω:', response.data);
                
                setTournament(response.data);
                setLoading(false);
            } catch (error) {
                console.error('‚ùå [TournamentDetails] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—É—Ä–Ω–∏—Ä–∞:', error);
                setError(error.message);
                setLoading(false);
            }
        };
        
        if (id) {
            fetchTournament();
        }
    }, [id]);
    
    console.log('üîç [TournamentDetails] –†–µ–Ω–¥–µ—Ä–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç...');
    
    if (loading) {
        console.log('üîç [TournamentDetails] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...');
        return (
            <div className="tournament-details">
                <div style={{ padding: '40px', textAlign: 'center' }}>
                    <h2>üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—É—Ä–Ω–∏—Ä–∞...</h2>
                    <p>ID —Ç—É—Ä–Ω–∏—Ä–∞: {id}</p>
                    <div style={{ marginTop: '20px' }}>
                        <div className="loading-spinner" style={{
                            border: '4px solid #f3f3f3',
                            borderTop: '4px solid #3498db',
                            borderRadius: '50%',
                            width: '40px',
                            height: '40px',
                            animation: 'spin 2s linear infinite',
                            margin: '0 auto'
                        }}></div>
                    </div>
                </div>
            </div>
        );
    }
    
    if (error) {
        console.log('üîç [TournamentDetails] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É:', error);
        return (
            <div className="tournament-details">
                <div style={{ padding: '40px', textAlign: 'center', color: 'red' }}>
                    <h2>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—É—Ä–Ω–∏—Ä–∞</h2>
                    <p>ID —Ç—É—Ä–Ω–∏—Ä–∞: {id}</p>
                    <p>–û—à–∏–±–∫–∞: {error}</p>
                    <button 
                        onClick={() => window.location.reload()}
                        style={{
                            padding: '10px 20px',
                            background: '#007bff',
                            color: 'white',
                            border: 'none',
                            borderRadius: '5px',
                            cursor: 'pointer',
                            marginTop: '20px'
                        }}
                    >
                        –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                    </button>
                </div>
            </div>
        );
    }
    
    if (!tournament) {
        console.log('üîç [TournamentDetails] –¢—É—Ä–Ω–∏—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω...');
        return (
            <div className="tournament-details">
                <div style={{ padding: '40px', textAlign: 'center' }}>
                    <h2>üîç –¢—É—Ä–Ω–∏—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
                    <p>ID —Ç—É—Ä–Ω–∏—Ä–∞: {id}</p>
                </div>
            </div>
        );
    }
    
    console.log('üîç [TournamentDetails] –†–µ–Ω–¥–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä–∞...');
    
    return (
        <div className="tournament-details">
            <div style={{ padding: '20px' }}>
                <h1>{tournament.name}</h1>
                <div style={{ marginBottom: '20px' }}>
                    <p><strong>ID —Ç—É—Ä–Ω–∏—Ä–∞:</strong> {id}</p>
                    <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {tournament.status}</p>
                    <p><strong>–ò–≥—Ä–∞:</strong> {tournament.game_name}</p>
                    <p><strong>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</strong> {tournament.participants?.length || 0}</p>
                    <p><strong>–ú–∞–∫—Å–∏–º—É–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</strong> {tournament.max_participants}</p>
                    <p><strong>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</strong> {new Date(tournament.created_at).toLocaleString()}</p>
                </div>
                
                {/* –†–µ–∂–∏–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ */}
                <div style={{ 
                    padding: '20px', 
                    background: '#e8f5e8', 
                    border: '2px solid #4caf50',
                    borderRadius: '8px',
                    margin: '20px 0' 
                }}>
                    <h3>‚úÖ –†–µ–∂–∏–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ - –£—Å–ø–µ—à–Ω–æ!</h3>
                    <p>–ö–æ–º–ø–æ–Ω–µ–Ω—Ç TournamentDetails —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ.</p>
                    <p>–û—à–∏–±–∫–∞ Temporal Dead Zone —É—Å—Ç—Ä–∞–Ω–µ–Ω–∞!</p>
                    <p>–í—Å–µ –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.</p>
                </div>
                
                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö */}
                {tournament.participants && tournament.participants.length > 0 && (
                    <div style={{ marginTop: '30px' }}>
                        <h3>üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ —Ç—É—Ä–Ω–∏—Ä–∞</h3>
                        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', gap: '10px' }}>
                            {tournament.participants.map((participant, index) => (
                                <div key={participant.id || index} style={{
                                    padding: '10px',
                                    background: '#f8f9fa',
                                    border: '1px solid #dee2e6',
                                    borderRadius: '5px'
                                }}>
                                    <strong>{participant.name}</strong>
                                    {participant.faceit_elo && (
                                        <div style={{ fontSize: '0.9em', color: '#666' }}>
                                            FACEIT: {participant.faceit_elo}
                                        </div>
                                    )}
                                </div>
                            ))}
                        </div>
                    </div>
                )}
            </div>
        </div>
    );
}

console.log('üîç [TournamentDetails] –ö–æ–º–ø–æ–Ω–µ–Ω—Ç TournamentDetails —Å–æ–∑–¥–∞–Ω, –≥–æ—Ç–æ–≤ –∫ —ç–∫—Å–ø–æ—Ä—Ç—É');

export default TournamentDetails;

console.log('‚úÖ [TournamentDetails] –ú–æ–¥—É–ª—å TournamentDetails –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
