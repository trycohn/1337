/**
 * TournamentDetails v4.0.0 - Graceful Degradation Architecture
 * 
 * @version 4.0.0 (Graceful Degradation & Error Resilient)
 * @created 2025-01-22
 * @author 1337 Community Development Team
 * @purpose –£—Å—Ç–æ–π—á–∏–≤–∞—è –∫ —Å–±–æ—è–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å graceful degradation
 */

import React, { useState, useEffect, useCallback, useMemo } from 'react';
import { useParams, Link } from 'react-router-dom';
import { io } from 'socket.io-client';
import api from '../utils/api';
import './TournamentDetails.css';
import TeamGenerator from './TeamGenerator';
import BracketRenderer from './BracketRenderer';
import { ensureHttps } from '../utils/userHelpers';

// Error Boundary –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
class TournamentErrorBoundary extends React.Component {
    constructor(props) {
        super(props);
        this.state = { hasError: false, errorInfo: null };
    }

    static getDerivedStateFromError(error) {
        return { hasError: true };
    }

    componentDidCatch(error, errorInfo) {
        console.error('üö® TournamentDetails Critical Error:', error, errorInfo);
        this.setState({ errorInfo });
    }

    render() {
        if (this.state.hasError) {
            return (
                <div className="tournament-critical-error">
                    <h2>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞</h2>
                    <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>
                    <button onClick={() => window.location.reload()}>
                        –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    </button>
                </div>
            );
        }
        return this.props.children;
    }
}

function TournamentDetails() {
    const { id } = useParams();
    
    // üéØ –û–°–ù–û–í–ù–´–ï –°–û–°–¢–û–Ø–ù–ò–Ø (Simplified State Management)
    const [tournament, setTournament] = useState(null);
    const [user, setUser] = useState(null);
    const [matches, setMatches] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [activeTab, setActiveTab] = useState('info');
    
    // üéØ UI –°–û–°–¢–û–Ø–ù–ò–Ø
    const [message, setMessage] = useState('');
    const [wsConnected, setWsConnected] = useState(false);
    const [dataLoadingStates, setDataLoadingStates] = useState({
        tournament: false,
        matches: false,
        user: false
    });
    
    // üéØ –ü–†–ê–í–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø (Computed from data)
    const userPermissions = useMemo(() => {
        if (!user || !tournament) {
            return {
                isParticipating: false,
                isCreator: false,
                isAdminOrCreator: false,
                canEdit: false
            };
        }

        const isCreator = tournament.creator_id === user.id;
        const isParticipating = tournament.participants?.some(
            p => p.user_id === user.id || p.id === user.id
        ) || false;

        return {
            isParticipating,
            isCreator,
            isAdminOrCreator: isCreator,
            canEdit: isCreator
        };
    }, [user, tournament]);

    // üéØ GRACEFUL –ó–ê–ì–†–£–ó–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø (Independent)
    const loadUser = useCallback(async () => {
        const token = localStorage.getItem('token');
        if (!token) return;

        try {
            setDataLoadingStates(prev => ({ ...prev, user: true }));
            const response = await api.get('/api/users/me');
            setUser(response.data);
        } catch (error) {
            console.warn('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω:', error.message);
            // Graceful: –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        } finally {
            setDataLoadingStates(prev => ({ ...prev, user: false }));
        }
    }, []); // –ù–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑

    // üéØ GRACEFUL –ó–ê–ì–†–£–ó–ö–ê –¢–£–†–ù–ò–†–ê (Primary Data)
    const loadTournamentData = useCallback(async () => {
        if (!id) return;

        try {
            setLoading(true);
            setError(null);
            setDataLoadingStates(prev => ({ ...prev, tournament: true }));

            // –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—Ä–æ—Å —Ç—É—Ä–Ω–∏—Ä–∞
            const tournamentResponse = await api.get(`/api/tournaments/${id}`);
            const tournamentData = tournamentResponse.data;
            
            setTournament(tournamentData);

            // GRACEFUL: –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Ç—á–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            let matchesData = [];
            
            // –ò—Å—Ç–æ—á–Ω–∏–∫ 1: –ú–∞—Ç—á–∏ –≤–∫–ª—é—á–µ–Ω—ã –≤ –æ—Ç–≤–µ—Ç —Ç—É—Ä–Ω–∏—Ä–∞ (–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ)
            if (tournamentData.matches && Array.isArray(tournamentData.matches)) {
                matchesData = tournamentData.matches;
                console.log('‚úÖ –ú–∞—Ç—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —Ç—É—Ä–Ω–∏—Ä–∞');
            } 
            // –ò—Å—Ç–æ—á–Ω–∏–∫ 2: –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Ç—á–∏ –æ—Ç–¥–µ–ª—å–Ω–æ (graceful degradation)
            else {
                try {
                    console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Ç—á–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º...');
                    setDataLoadingStates(prev => ({ ...prev, matches: true }));
                    
                    const matchesResponse = await api.get(`/api/tournaments/${id}/matches`);
                    matchesData = matchesResponse.data || [];
                    console.log('‚úÖ –ú–∞—Ç—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º');
                } catch (matchesError) {
                    console.warn('‚ö†Ô∏è –ú–∞—Ç—á–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ:', matchesError.message);
                    // Graceful: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç—É—Ä–Ω–∏—Ä –±–µ–∑ –º–∞—Ç—á–µ–π
                    matchesData = [];
                }
            }

            setMatches(matchesData);
            console.log(`üéØ –¢—É—Ä–Ω–∏—Ä –∑–∞–≥—Ä—É–∂–µ–Ω. –ú–∞—Ç—á–µ–π: ${matchesData.length}`);

        } catch (tournamentError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—É—Ä–Ω–∏—Ä–∞:', tournamentError);
            setError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—É—Ä–Ω–∏—Ä–∞: ${tournamentError.message}`);
        } finally {
            setLoading(false);
            setDataLoadingStates(prev => ({ 
                ...prev, 
                tournament: false, 
                matches: false 
            }));
        }
    }, [id]); // –¢–æ–ª—å–∫–æ ID –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö

    // üéØ WEBSOCKET –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï (Optional Enhancement)
    const setupWebSocket = useCallback(() => {
        if (!user?.id || !tournament?.id) return null;

        const token = localStorage.getItem('token');
        if (!token) return null;

        try {
            console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–∞', tournament.id);
            
            const socket = io(process.env.REACT_APP_API_URL || 'http://localhost:3000', {
                auth: { token },
                transports: ['websocket', 'polling'],
                timeout: 10000
            });

            socket.on('connect', () => {
                console.log('‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω');
                setWsConnected(true);
                socket.emit('join-tournament', tournament.id);
            });

            socket.on('disconnect', () => {
                console.log('üîå WebSocket –æ—Ç–∫–ª—é—á–µ–Ω');
                setWsConnected(false);
            });

            socket.on('tournament-update', (data) => {
                console.log('üì° –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞ —á–µ—Ä–µ–∑ WebSocket:', data);
                setTournament(prev => ({ ...prev, ...data }));
                
                if (data.message) {
                    setMessage(data.message);
                    setTimeout(() => setMessage(''), 3000);
                }
            });

            socket.on('connect_error', (error) => {
                console.warn('‚ö†Ô∏è WebSocket –æ—à–∏–±–∫–∞:', error.message);
                setWsConnected(false);
            });

            return socket;
        } catch (error) {
            console.warn('‚ö†Ô∏è WebSocket –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å:', error.message);
            return null;
        }
    }, [user?.id, tournament?.id]); // –¢–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è

    // üéØ –£–ü–†–ê–í–õ–Ø–ï–ú–´–ï –≠–§–§–ï–ö–¢–´ (Controlled Side Effects)
    
    // –≠—Ñ—Ñ–µ–∫—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–¥–∏–Ω —Ä–∞–∑)
    useEffect(() => {
        loadUser();
    }, []); // –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

    // –≠—Ñ—Ñ–µ–∫—Ç 2: –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—É—Ä–Ω–∏—Ä–∞ (–ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ ID)
    useEffect(() => {
        if (id) {
            loadTournamentData();
        }
    }, [id, loadTournamentData]); // –¢–æ–ª—å–∫–æ ID –∏ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏

    // –≠—Ñ—Ñ–µ–∫—Ç 3: WebSocket (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π, –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö)
    useEffect(() => {
        const socket = setupWebSocket();
        
        return () => {
            if (socket) {
                console.log('üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ WebSocket');
                socket.disconnect();
            }
        };
    }, [setupWebSocket]);

    // üéØ –î–ï–ô–°–¢–í–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø (User Actions)
    
    const handleParticipate = useCallback(async () => {
        if (!user || !tournament) return;

        try {
            const token = localStorage.getItem('token');
            await api.post(`/api/tournaments/${id}/participate`, {}, {
                headers: { Authorization: `Bearer ${token}` }
            });
            
            setMessage('‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ —Ç—É—Ä–Ω–∏—Ä–µ!');
            setTimeout(() => setMessage(''), 3000);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç—É—Ä–Ω–∏—Ä
            loadTournamentData();
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —É—á–∞—Å—Ç–∏—è:', error);
            setMessage(`‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${error.message}`);
            setTimeout(() => setMessage(''), 3000);
        }
    }, [user, tournament, id, loadTournamentData]);

    const handleWithdraw = useCallback(async () => {
        if (!user || !tournament) return;

        try {
            const token = localStorage.getItem('token');
            await api.delete(`/api/tournaments/${id}/participate`, {
                headers: { Authorization: `Bearer ${token}` }
            });
            
            setMessage('‚úÖ –í—ã –ø–æ–∫–∏–Ω—É–ª–∏ —Ç—É—Ä–Ω–∏—Ä');
            setTimeout(() => setMessage(''), 3000);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç—É—Ä–Ω–∏—Ä
            loadTournamentData();
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
            setMessage(`‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞: ${error.message}`);
            setTimeout(() => setMessage(''), 3000);
        }
    }, [user, tournament, id, loadTournamentData]);

    const handleGenerateBracket = useCallback(async () => {
        if (!userPermissions.canEdit) return;

        try {
            const token = localStorage.getItem('token');
            await api.post(`/api/tournaments/${id}/generate-bracket`, {}, {
                headers: { Authorization: `Bearer ${token}` }
            });
            
            setMessage('‚úÖ –°–µ—Ç–∫–∞ —Ç—É—Ä–Ω–∏—Ä–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!');
            setTimeout(() => setMessage(''), 3000);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç—É—Ä–Ω–∏—Ä
            loadTournamentData();
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ç–∫–∏:', error);
            setMessage(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${error.message}`);
            setTimeout(() => setMessage(''), 3000);
        }
    }, [userPermissions.canEdit, id, loadTournamentData]);

    const handleStartTournament = useCallback(async () => {
        if (!userPermissions.canEdit) return;

        try {
            const token = localStorage.getItem('token');
            await api.post(`/api/tournaments/${id}/start`, {}, {
                headers: { Authorization: `Bearer ${token}` }
            });
            
            setMessage('‚úÖ –¢—É—Ä–Ω–∏—Ä –∑–∞–ø—É—â–µ–Ω!');
            setTimeout(() => setMessage(''), 3000);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç—É—Ä–Ω–∏—Ä
            loadTournamentData();
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç—É—Ä–Ω–∏—Ä–∞:', error);
            setMessage(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: ${error.message}`);
            setTimeout(() => setMessage(''), 3000);
        }
    }, [userPermissions.canEdit, id, loadTournamentData]);

    // üéØ –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û –í–ö–õ–ê–î–ö–ê–ú
    const tabs = useMemo(() => [
        { id: 'info', label: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', icon: '‚ÑπÔ∏è' },
        { id: 'participants', label: '–£—á–∞—Å—Ç–Ω–∏–∫–∏', icon: 'üë•' },
        { id: 'bracket', label: '–°–µ—Ç–∫–∞', icon: 'üèÜ' },
        { id: 'results', label: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã', icon: 'üìä' },
        { id: 'admin', label: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', icon: '‚öôÔ∏è', adminOnly: true }
    ], []);

    const visibleTabs = useMemo(() => 
        tabs.filter(tab => !tab.adminOnly || userPermissions.isAdminOrCreator),
        [tabs, userPermissions.isAdminOrCreator]
    );

    // üéØ –°–û–°–¢–û–Ø–ù–ò–Ø –ó–ê–ì–†–£–ó–ö–ò
    if (loading) {
        return (
            <div className="tournament-loading">
                <div className="loading-spinner"></div>
                <h2>–ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—É—Ä–Ω–∏—Ä...</h2>
                <div className="loading-details">
                    {dataLoadingStates.tournament && <p>üìÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–∞...</p>}
                    {dataLoadingStates.matches && <p>üèÜ –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ç—á–µ–π...</p>}
                    {dataLoadingStates.user && <p>üë§ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</p>}
                </div>
            </div>
        );
    }

    if (error) {
        return (
            <div className="tournament-error">
                <h2>‚ùå –û—à–∏–±–∫–∞</h2>
                <p>{error}</p>
                <div className="error-actions">
                    <button onClick={() => {
                        setError(null);
                        loadTournamentData();
                    }}>
                        üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                    </button>
                    <Link to="/tournaments">
                        ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç—É—Ä–Ω–∏—Ä–∞–º
                    </Link>
                </div>
            </div>
        );
    }

    if (!tournament) {
        return (
            <div className="tournament-not-found">
                <h2>üîç –¢—É—Ä–Ω–∏—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
                <p>–¢—É—Ä–Ω–∏—Ä —Å ID {id} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω.</p>
                <Link to="/tournaments">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ç—É—Ä–Ω–∏—Ä–æ–≤</Link>
            </div>
        );
    }

    return (
        <TournamentErrorBoundary>
            <section className="tournament-details-v4">
                {/* üéØ –ó–ê–ì–û–õ–û–í–û–ö –¢–£–†–ù–ò–†–ê */}
                <div className="tournament-header">
                    <div className="tournament-title-section">
                        <h1>{tournament.name}</h1>
                        <div className="tournament-meta">
                            <span className={`status-badge ${tournament.status?.toLowerCase()}`}>
                                {tournament.status || '–ê–∫—Ç–∏–≤–Ω—ã–π'}
                            </span>
                            {wsConnected && (
                                <span className="websocket-indicator connected" title="–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏">
                                    üü¢ Online
                                </span>
                            )}
                            <span className="participants-count">
                                üë• {tournament.participants?.length || 0}
                                {tournament.max_participants && ` / ${tournament.max_participants}`}
                            </span>
                        </div>
                    </div>
                </div>

                {/* üéØ –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û –í–ö–õ–ê–î–ö–ê–ú */}
                <nav className="tournament-navigation">
                    {visibleTabs.map(tab => (
                        <button
                            key={tab.id}
                            className={`nav-tab ${activeTab === tab.id ? 'active' : ''}`}
                            onClick={() => setActiveTab(tab.id)}
                        >
                            <span className="tab-icon">{tab.icon}</span>
                            <span className="tab-label">{tab.label}</span>
                        </button>
                    ))}
                </nav>

                {/* üéØ –°–û–î–ï–†–ñ–ò–ú–û–ï –í–ö–õ–ê–î–û–ö */}
                <div className="tournament-content">
                    {/* –í–ö–õ–ê–î–ö–ê: –ò–ù–§–û–†–ú–ê–¶–ò–Ø */}
                    {activeTab === 'info' && (
                        <div className="tab-content">
                            <div className="tournament-info-grid">
                                <div className="info-section">
                                    <h3>üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                                    <div className="info-list">
                                        <div className="info-item">
                                            <strong>üéÆ –ò–≥—Ä–∞:</strong> {tournament.game || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
                                        </div>
                                        <div className="info-item">
                                            <strong>üèÜ –§–æ—Ä–º–∞—Ç:</strong> {tournament.format || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                                        </div>
                                        <div className="info-item">
                                            <strong>üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</strong> {tournament.participants?.length || 0}
                                            {tournament.max_participants && ` –∏–∑ ${tournament.max_participants}`}
                                        </div>
                                        <div className="info-item">
                                            <strong>üìÖ –°–æ–∑–¥–∞–Ω:</strong> {new Date(tournament.created_at).toLocaleString('ru-RU')}
                                        </div>
                                        {tournament.start_date && (
                                            <div className="info-item">
                                                <strong>üïê –ù–∞—á–∞–ª–æ:</strong> {new Date(tournament.start_date).toLocaleString('ru-RU')}
                                            </div>
                                        )}
                                    </div>
                                </div>

                                {tournament.description && (
                                    <div className="info-section">
                                        <h3>üìù –û–ø–∏—Å–∞–Ω–∏–µ</h3>
                                        <p className="tournament-description">{tournament.description}</p>
                                    </div>
                                )}
                            </div>

                            {/* –ö–ù–û–ü–ö–ò –£–ß–ê–°–¢–ò–Ø */}
                            {user && tournament.status === 'registration' && (
                                <div className="participation-section">
                                    {!userPermissions.isParticipating ? (
                                        <button 
                                            className="btn btn-primary participate-btn"
                                            onClick={handleParticipate}
                                        >
                                            üéØ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ç—É—Ä–Ω–∏—Ä–µ
                                        </button>
                                    ) : (
                                        <button 
                                            className="btn btn-secondary withdraw-btn"
                                            onClick={handleWithdraw}
                                        >
                                            ‚ùå –ü–æ–∫–∏–Ω—É—Ç—å —Ç—É—Ä–Ω–∏—Ä
                                        </button>
                                    )}
                                </div>
                            )}
                        </div>
                    )}

                    {/* –í–ö–õ–ê–î–ö–ê: –£–ß–ê–°–¢–ù–ò–ö–ò */}
                    {activeTab === 'participants' && (
                        <div className="tab-content">
                            <h3>üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ —Ç—É—Ä–Ω–∏—Ä–∞ ({tournament.participants?.length || 0})</h3>
                            
                            {tournament.participants && tournament.participants.length > 0 ? (
                                <div className="participants-grid">
                                    {tournament.participants.map((participant, index) => (
                                        <div key={participant.id || index} className="participant-card">
                                            <div className="participant-avatar">
                                                {participant.avatar_url ? (
                                                    <img 
                                                        src={ensureHttps(participant.avatar_url)} 
                                                        alt={participant.name || '–£—á–∞—Å—Ç–Ω–∏–∫'}
                                                        onError={(e) => {e.target.src = '/default-avatar.png'}}
                                                    />
                                                ) : (
                                                    <div className="avatar-placeholder">
                                                        {(participant.name || '–£').charAt(0).toUpperCase()}
                                                    </div>
                                                )}
                                            </div>
                                            <div className="participant-info">
                                                <div className="participant-name">
                                                    {participant.name || '–£—á–∞—Å—Ç–Ω–∏–∫'}
                                                </div>
                                                {participant.faceit_elo && (
                                                    <div className="participant-elo">
                                                        FACEIT: {participant.faceit_elo}
                                                    </div>
                                                )}
                                            </div>
                                        </div>
                                    ))}
                                </div>
                            ) : (
                                <div className="empty-state">
                                    <p>üë§ –ü–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
                                    {user && tournament.status === 'registration' && !userPermissions.isParticipating && (
                                        <button 
                                            className="btn btn-primary"
                                            onClick={handleParticipate}
                                        >
                                            –°—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º
                                        </button>
                                    )}
                                </div>
                            )}

                            {/* MIX –¢–£–†–ù–ò–†–´: –ì–ï–ù–ï–†–ê–¶–ò–Ø –ö–û–ú–ê–ù–î */}
                            {tournament.format === 'mix' && userPermissions.isAdminOrCreator && (
                                <div className="team-generator-section">
                                    <h3>‚ö° –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥</h3>
                                    <TeamGenerator 
                                        tournament={tournament}
                                        participants={tournament.participants || []}
                                        onTeamsGenerated={() => {
                                            console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã');
                                            loadTournamentData();
                                        }}
                                    />
                                </div>
                            )}
                        </div>
                    )}

                    {/* –í–ö–õ–ê–î–ö–ê: –°–ï–¢–ö–ê */}
                    {activeTab === 'bracket' && (
                        <div className="tab-content">
                            <h3>üèÜ –¢—É—Ä–Ω–∏—Ä–Ω–∞—è —Å–µ—Ç–∫–∞</h3>
                            
                            {matches && matches.length > 0 ? (
                                <div className="bracket-section">
                                    <BracketRenderer 
                                        tournament={tournament}
                                        matches={matches}
                                        canEdit={userPermissions.canEdit}
                                        onMatchUpdate={() => loadTournamentData()}
                                    />
                                </div>
                            ) : (
                                <div className="empty-state">
                                    <p>üèÜ –°–µ—Ç–∫–∞ —Ç—É—Ä–Ω–∏—Ä–∞ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞</p>
                                    {userPermissions.isAdminOrCreator && (
                                        <button 
                                            className="btn btn-primary"
                                            onClick={handleGenerateBracket}
                                        >
                                            ‚ö° –°–æ–∑–¥–∞—Ç—å —Å–µ—Ç–∫—É
                                        </button>
                                    )}
                                </div>
                            )}
                        </div>
                    )}

                    {/* –í–ö–õ–ê–î–ö–ê: –†–ï–ó–£–õ–¨–¢–ê–¢–´ */}
                    {activeTab === 'results' && (
                        <div className="tab-content">
                            <h3>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π</h3>
                            
                            {matches && matches.length > 0 ? (
                                <div className="results-list">
                                    {matches.map(match => (
                                        <div key={match.id} className="match-result-card">
                                            <div className="match-info">
                                                <span className="match-round">–†–∞—É–Ω–¥ {match.round || 1}</span>
                                                <span className={`match-status ${match.status?.toLowerCase()}`}>
                                                    {match.status || '–û–∂–∏–¥–∞–µ—Ç'}
                                                </span>
                                            </div>
                                            <div className="match-teams">
                                                <div className={`team ${match.winner_id === match.team1_id ? 'winner' : ''}`}>
                                                    <span className="team-name">{match.team1_name || '–ö–æ–º–∞–Ω–¥–∞ 1'}</span>
                                                    <span className="team-score">{match.team1_score || 0}</span>
                                                </div>
                                                <div className="vs">VS</div>
                                                <div className={`team ${match.winner_id === match.team2_id ? 'winner' : ''}`}>
                                                    <span className="team-name">{match.team2_name || '–ö–æ–º–∞–Ω–¥–∞ 2'}</span>
                                                    <span className="team-score">{match.team2_score || 0}</span>
                                                </div>
                                            </div>
                                        </div>
                                    ))}
                                </div>
                            ) : (
                                <div className="empty-state">
                                    <p>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>
                                    <p>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ —Ç—É—Ä–Ω–∏—Ä–∞</p>
                                </div>
                            )}
                        </div>
                    )}

                    {/* –í–ö–õ–ê–î–ö–ê: –£–ü–†–ê–í–õ–ï–ù–ò–ï */}
                    {activeTab === 'admin' && userPermissions.isAdminOrCreator && (
                        <div className="tab-content">
                            <h3>‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–æ–º</h3>
                            
                            <div className="admin-controls">
                                <div className="admin-section">
                                    <h4>üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h4>
                                    <div className="admin-buttons">
                                        {tournament.status === 'registration' && (
                                            <>
                                                <button 
                                                    className="btn btn-primary"
                                                    onClick={handleGenerateBracket}
                                                >
                                                    ‚ö° –°–æ–∑–¥–∞—Ç—å —Å–µ—Ç–∫—É
                                                </button>
                                                
                                                <button 
                                                    className="btn btn-success"
                                                    onClick={handleStartTournament}
                                                >
                                                    üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç—É—Ä–Ω–∏—Ä
                                                </button>
                                            </>
                                        )}
                                        
                                        <button 
                                            className="btn btn-secondary"
                                            onClick={loadTournamentData}
                                        >
                                            üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
                                        </button>
                                    </div>
                                </div>

                                <div className="admin-section">
                                    <h4>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h4>
                                    <div className="stats-grid">
                                        <div className="stat-item">
                                            <span className="stat-label">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</span>
                                            <span className="stat-value">{tournament.participants?.length || 0}</span>
                                        </div>
                                        <div className="stat-item">
                                            <span className="stat-label">–ú–∞—Ç—á–µ–π:</span>
                                            <span className="stat-value">{matches?.length || 0}</span>
                                        </div>
                                        <div className="stat-item">
                                            <span className="stat-label">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö:</span>
                                            <span className="stat-value">
                                                {matches?.filter(m => m.status === 'completed')?.length || 0}
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    )}
                </div>

                {/* üéØ –°–û–û–ë–©–ï–ù–ò–Ø */}
                {message && (
                    <div className={`message-notification ${message.includes('‚úÖ') ? 'success' : 'error'}`}>
                        {message}
                    </div>
                )}
            </section>
        </TournamentErrorBoundary>
    );
}

export default TournamentDetails;