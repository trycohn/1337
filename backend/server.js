const dotenv = require('dotenv');
const result = dotenv.config({ path: __dirname + '/.env' });

if (result.error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env —Ñ–∞–π–ª–∞:', result.error);
} else {
  console.log('‚úÖ –§–∞–π–ª .env —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω');
}

console.log("üîç –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π JWT_SECRET:", process.env.JWT_SECRET ? '[–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω]' : '[–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç]');
console.log("üîç NODE_ENV:", process.env.NODE_ENV || '[–ù–µ —É–∫–∞–∑–∞–Ω–æ]');
console.log("üîç FACEIT_CLIENT_ID:", process.env.FACEIT_CLIENT_ID ? '[–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω]' : '[–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç]');
console.log("üîç FACEIT_CLIENT_SECRET:", process.env.FACEIT_CLIENT_SECRET ? '[–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω]' : '[–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç]');
console.log("üîç FACEIT_REDIRECT_URI:", process.env.FACEIT_REDIRECT_URI ? '[–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω]' : '[–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç]');

// –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ –º–æ–¥—É–ª–∏
const express = require('express');
const cors = require('cors');
const path = require('path');
const http = require('http');
const helmet = require('helmet');
const morgan = require('morgan');
const cookieParser = require('cookie-parser');
const { Server: SocketIOServer } = require('socket.io');
const pool = require('./db');
const { setupChatSocketIO } = require('./chat-socketio');
const nodemailer = require('nodemailer');
const rateLimiter = require('express-rate-limit');
const { authenticateToken } = require('./middleware/auth');
const { updateActivity } = require('./middleware/activity');
const { broadcastTournamentUpdate } = require('./notifications');
const multer = require('multer');
const fs = require('fs');

// –°–æ–∑–¥–∞–µ–º Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
const app = express();
// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
global.app = app;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ trust proxy –¥–ª—è —Ä–∞–±–æ—Ç—ã –∑–∞ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–æ–º (Nginx)
// –î–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–º—É –ø—Ä–æ–∫—Å–∏ (Nginx –Ω–∞ —Ç–æ–º –∂–µ —Å–µ—Ä–≤–µ—Ä–µ)
app.set('trust proxy', 1);

// –°–æ–∑–¥–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ Express-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const server = http.createServer(app);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ middleware –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
app.use(helmet()); // –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –Ω–∞—á–∞–ª–µ
app.use(morgan('dev')); // –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use(express.json()); // –ü–∞—Ä—Å–∏–Ω–≥ JSON
app.use(express.urlencoded({ extended: true })); // –ü–∞—Ä—Å–∏–Ω–≥ URL-encoded
app.use(cookieParser());

// Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
    console.log(`üîç –í—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å: ${req.method} ${req.originalUrl}`);
    next();
});

// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ CORS –≤—Ä—É—á–Ω—É—é
app.use((req, res, next) => {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ origins –Ω–∞ –æ—Å–Ω–æ–≤–µ NODE_ENV –∏ –¥–æ–º–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞
  const productionOrigins = ['https://1337community.com', 'https://www.1337community.com'];
  const developmentOrigins = ['http://localhost:3001', 'http://127.0.0.1:5500', 'http://localhost:3000'];
  
  // –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–∞–µ–º production origins –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  const allowedOrigins = [...productionOrigins, ...developmentOrigins];
  
  const origin = req.headers.origin;
  console.log(`üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ${req.method} ${req.path} –æ—Ç ${origin}`);
  console.log(`üîç NODE_ENV –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: ${process.env.NODE_ENV}`);
  console.log(`üîç –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ origins: ${allowedOrigins.join(',')}`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ origin
  if (allowedOrigins.includes(origin) || !origin) {
    res.setHeader('Access-Control-Allow-Origin', origin || '*');
    console.log(`‚úÖ Origin ${origin} —Ä–∞–∑—Ä–µ—à—ë–Ω`);
  } else {
    console.log(`‚ùå Origin ${origin} –ù–ï —Ä–∞–∑—Ä–µ—à—ë–Ω`);
    res.setHeader('Access-Control-Allow-Origin', 'https://1337community.com'); // fallback –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω
  }
  
  res.setHeader('Access-Control-Allow-Methods', 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
  res.setHeader('Access-Control-Allow-Credentials', 'true');
  
  if (req.method === 'OPTIONS') {
      console.log(`üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ preflight-–∑–∞–ø—Ä–æ—Å–∞ (OPTIONS) –¥–ª—è ${req.path}`);
      return res.status(200).end();
  }
  next();
});

// –ü—É–±–ª–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã API, –Ω–µ —Ç—Ä–µ–±—É—é—â–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
const publicRoutes = [
  /^\/api\/maps($|\/)/,  // –ú–∞—Ä—à—Ä—É—Ç—ã /api/maps –∏ /api/maps/:id
  /^\/api\/games($|\/)/,  // –ú–∞—Ä—à—Ä—É—Ç—ã /api/games –∏ /api/games/:id
  /^\/api\/tournaments($|\/\d+$)/,  // –ú–∞—Ä—à—Ä—É—Ç—ã /api/tournaments –∏ /api/tournaments/:id
  /^\/api\/tournaments\/\d+\/teams$/,  // –ö–æ–º–∞–Ω–¥—ã —Ç—É—Ä–Ω–∏—Ä–∞
  /^\/api\/tournaments\/\d+\/original-participants$/,  // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Ç—É—Ä–Ω–∏—Ä–∞
  /^\/api\/users\/login$/,  // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  /^\/api\/users\/register$/,  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  /^\/api\/users\/steam$/,  // Steam OAuth
  /^\/api\/users\/faceit-login$/,  // FACEIT OAuth
  /^\/api\/users\/steam\/callback$/,  // Steam callback
  /^\/api\/users\/faceit-callback$/,  // FACEIT callback
  /^\/api\/v4\/achievements($|\/)/,  // V4 API: –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  /^\/api\/v4\/enhanced-stats($|\/)/,  // V4 API: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  /^\/api\/v4\/leaderboards($|\/)/,  // V4 API: –õ–∏–¥–µ—Ä–±–æ—Ä–¥—ã
  /^\/api\/v4\/user-achievements($|\/)/,  // V4 API: –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  /^\/testdb$/  // –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–∞—Ä—à—Ä—É—Ç –ø—É–±–ª–∏—á–Ω—ã–º
function isPublicRoute(path) {
  return publicRoutes.some(pattern => pattern.test(path));
}

// –ú–∞—Ä—à—Ä—É—Ç—ã, –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –∏–∑ rate limiting
const excludedFromRateLimiting = [
  /^\/api\/tournaments($|\/)/  // –í—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã /api/tournaments, –≤–∫–ª—é—á–∞—è –ø–æ–¥–ø—É—Ç–∏
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏—Å–∫–ª—é—á–µ–Ω –ª–∏ –º–∞—Ä—à—Ä—É—Ç –∏–∑ rate limiting
function isExcludedFromRateLimiting(path) {
  return excludedFromRateLimiting.some(pattern => pattern.test(path));
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ - –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–π –ª–∏–º–∏—Ç –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
const strictLimiter = rateLimiter({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    max: 500, // –º–∞–∫—Å–∏–º—É–º 500 –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ IP
    validate: {
        trustProxy: true, // –†–∞–∑—Ä–µ—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–∫—Å–∏
        default: true, // –í–∫–ª—é—á–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    },
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∏ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –∏–∑ rate limiting
    skip: (req) => isPublicRoute(req.path) || isExcludedFromRateLimiting(req.path)
});
app.use(strictLimiter);

// –û—Ç–¥–µ–ª—å–Ω—ã–π rate limiter –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–º –ª–∏–º–∏—Ç–æ–º
const publicRoutesLimiter = rateLimiter({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    max: 1000, // –º–∞–∫—Å–∏–º—É–º 1000 –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ IP –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    validate: {
        trustProxy: true, // –†–∞–∑—Ä–µ—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–∫—Å–∏
        default: true, // –í–∫–ª—é—á–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    },
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã, –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –∏–∑ rate limiting
    skip: (req) => isExcludedFromRateLimiting(req.path)
});

// –ü—Ä–∏–º–µ–Ω—è–µ–º –ª–∏–º–∏—Ç–µ—Ä —Ç–æ–ª—å–∫–æ –∫ –ø—É–±–ª–∏—á–Ω—ã–º –º–∞—Ä—à—Ä—É—Ç–∞–º, –Ω–æ –Ω–µ –∫ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–º
app.use((req, res, next) => {
    if (isPublicRoute(req.path) && !isExcludedFromRateLimiting(req.path)) {
        return publicRoutesLimiter(req, res, next);
    }
    next();
});

// –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ frontend/build
app.use(express.static(path.join(__dirname, '../frontend/build'), { cacheControl: false }));

// –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ uploads
app.use('/uploads', express.static(path.join(__dirname, 'uploads')));

// –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
app.use((req, res, next) => {
  // –ï—Å–ª–∏ –º–∞—Ä—à—Ä—É—Ç –ø—É–±–ª–∏—á–Ω—ã–π –∏–ª–∏ –º–µ—Ç–æ–¥ OPTIONS, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  if (req.method === 'OPTIONS' || isPublicRoute(req.path)) {
    return next();
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization
  const authHeader = req.headers['authorization'];
  const token = authHeader && authHeader.split(' ')[1];
  if (token) {
    // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å, –≤—ã–∑—ã–≤–∞–µ–º middleware –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    return authenticateToken(req, res, () => {
      if (req.user) {
        updateActivity(req, res, next);
      } else {
        next();
      }
    });
  }
  next();
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –∏–∫–æ–Ω–æ–∫
app.get('/favicon.ico', (req, res) => res.status(204).end());
app.get('/favicon.png', (req, res) => res.status(204).end());

// –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
app.get('/testdb', async (req, res) => {
    try {
        const result = await pool.query('SELECT NOW()');
        res.json({ status: 'success', time: result.rows[0].now });
    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ:', err);
        res.status(500).json({ status: 'error', message: err.message });
    }
});

// –ì–ª–∞–≤–Ω—ã–π —Ä–æ—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã API
app.get('/', (req, res) => {
    res.json({ message: '–°–µ—Ä–≤–µ—Ä 1337 Community API —Ä–∞–±–æ—Ç–∞–µ—Ç!' });
});

// –ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤
const authRouter = require('./routes/auth');
const usersRouter = require('./routes/users');
const teamsRouter = require('./routes/teams');
const gamesRouter = require('./routes/games');
const mapsRouter = require('./routes/maps');
const tournamentsRouter = require('./routes/tournaments');
const tournamentsFixRouter = require('./routes/tournaments-fix'); // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö fix'–æ–≤
const tournamentPlayersRouter = require('./routes/tournamentPlayers');
const matchesRouter = require('./routes/matches');
const statisticsRouter = require('./routes/statistics');
const dotaStatsRouter = require('./routes/dotaStats');
const notificationsRouter = require('./routes/notifications');
const playerStatsRouter = require('./routes/playerStats');
const friendsRouter = require('./routes/friends');
const chatsRouter = require('./routes/chats');
const organizersRouter = require('./routes/organizers');
const adminRouter = require('./routes/admin');
// ‚ú® V4 ULTIMATE: –ò–º–ø–æ—Ä—Ç —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã—Ö API
const v4EnhancedStatsRouter = require('./routes/v4-enhanced-stats');

// –ú–∞—Ä—à—Ä—É—Ç—ã API
app.use('/api/auth', authRouter);
app.use('/api/users', usersRouter);
app.use('/api/teams', teamsRouter);
app.use('/api/tournaments', tournamentsFixRouter); // –ü–ï–†–í–´–ô –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ endpoint'—ã
app.use('/api/tournaments', tournamentsRouter); // –í–¢–û–†–û–ô –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –æ—Å–Ω–æ–≤–Ω—ã–µ endpoint'—ã
app.use('/api/tournamentPlayers', tournamentPlayersRouter);
app.use('/api/matches', matchesRouter);
app.use('/api/statistics', statisticsRouter);
app.use('/api/dota-stats', dotaStatsRouter);
app.use('/api/notifications', notificationsRouter);
app.use('/api/playerStats', playerStatsRouter);
app.use('/api/friends', friendsRouter);
app.use('/api/chats', chatsRouter);
app.use('/api/maps', mapsRouter);
app.use('/api/organizers', organizersRouter);
app.use('/api/admin', adminRouter);
// ‚ú® V4 ULTIMATE: –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–µ API endpoints
app.use('/api/v4', v4EnhancedStatsRouter);

// Catch-all –¥–ª—è SPA (React Router) - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ index.html
app.get(/^\/(?!api).*/, (req, res) => {
    res.sendFile(path.join(__dirname, '../frontend/build/index.html'));
});

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Socket.IO —Å–µ—Ä–≤–µ—Ä –¥–ª—è —á–∞—Ç–∞
const io = new SocketIOServer(server, {
  cors: {
    origin: [process.env.SERVER_URL || '*'],
    methods: ['GET', 'POST'],
    credentials: true
  }
});
setupChatSocketIO(io);
// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —ç–∫–∑–µ–º–ø–ª—è—Ä io –≤ app –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–∞—Ä—à—Ä—É—Ç–∞—Ö
app.set('io', io);

// –Ø –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ Socket.IO, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–∫–ª—é—á–∞–ª–∏—Å—å –∫ —Å–≤–æ–∏–º –∫–æ–º–Ω–∞—Ç–∞–º
io.on('connection', (socket) => {
  console.log('Socket.IO Notifications: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è, userId =', socket.userId);
  socket.join(`user_${socket.userId}`);
  console.log(`Socket.IO Notifications: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${socket.userId} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ user_${socket.userId}`);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞
  socket.on('watch_tournament', (tournamentId) => {
    socket.join(`tournament_${tournamentId}`);
    console.log(`Socket.IO Notifications: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${socket.userId} –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ —Ç—É—Ä–Ω–∏—Ä ${tournamentId}`);
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä–∞
  socket.on('unwatch_tournament', (tournamentId) => {
    socket.leave(`tournament_${tournamentId}`);
    console.log(`Socket.IO Notifications: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${socket.userId} –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —Ç—É—Ä–Ω–∏—Ä–∞ ${tournamentId}`);
  });
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
const mailTransporter = nodemailer.createTransport({
    host: process.env.SMTP_HOST,
    port: process.env.SMTP_PORT,
    secure: process.env.SMTP_PORT === '465',
    auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS
    }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å SMTP-—Å–µ—Ä–≤–µ—Ä–æ–º
if (process.env.NODE_ENV !== 'test') {
    mailTransporter.verify((error, success) => {
        if (error) {
            console.warn('–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ SMTP-—Å–µ—Ä–≤–µ—Ä—É:', error);
        } else {
            console.log('SMTP-—Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π');
        }
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404 –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ (–¥–æ–ª–∂–Ω–∞ –∏–¥—Ç–∏ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤)
app.use((req, res) => {
    console.log(`404 –¥–ª—è –ø—É—Ç–∏: ${req.path}`);
    res.status(404).json({ error: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
    console.error(err.stack);
    res.status(500).json({ message: "Internal Server Error" });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
const serverInstance = server.listen(PORT, async () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    try {
        await pool.query('SELECT NOW()');
        console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
        try {
            const { ensureSystemUser } = require('./utils/systemNotifications');
            await ensureSystemUser();
            console.log('‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1337community –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } catch (systemUserError) {
            console.error('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', systemUserError.message);
        }
        
    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err.message);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
serverInstance.on('error', (err) => {
    if (err.code === 'EADDRINUSE') {
        console.error(`‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ü–æ—Ä—Ç ${PORT} —É–∂–µ –∑–∞–Ω—è—Ç!`);
        console.error(`üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:`);
        console.error(`   1. –î—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä 1337-backend —É–∂–µ –∑–∞–ø—É—â–µ–Ω`);
        console.error(`   2. –î—Ä—É–≥–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–Ω–∏–º–∞–µ—Ç –ø–æ—Ä—Ç ${PORT}`);
        console.error(`   3. PM2 –∑–∞–ø—É—Å—Ç–∏–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞`);
        console.error(`üõ†Ô∏è –†–µ—à–µ–Ω–∏—è:`);
        console.error(`   1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã: pm2 stop all`);
        console.error(`   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–Ω—è—Ç—ã–µ –ø–æ—Ä—Ç—ã: netstat -tulpn | grep :${PORT}`);
        console.error(`   3. –£–±–µ–π—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É: sudo kill -9 $(sudo lsof -t -i:${PORT})`);
        console.error(`   4. –ò–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ PORT –≤ .env —Ñ–∞–π–ª–µ`);
        process.exit(1);
    } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
        process.exit(1);
    }
});