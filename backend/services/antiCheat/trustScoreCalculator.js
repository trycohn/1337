/**
 * üõ°Ô∏è TRUST SCORE CALCULATOR
 * –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ Trust Score –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö Steam –∞–∫–∫–∞—É–Ω—Ç–∞
 * 
 * @version 1.0.0
 * @date 2025-10-02
 */

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç Trust Score –¥–ª—è Steam –∞–∫–∫–∞—É–Ω—Ç–∞
 * 
 * @param {Object} steamUser - –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ Steam –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} steamUser.steam_id - Steam ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {number} steamUser.account_age_days - –í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –¥–Ω—è—Ö
 * @param {number} steamUser.steam_level - –£—Ä–æ–≤–µ–Ω—å Steam
 * @param {number} steamUser.cs2_hours - –ß–∞—Å—ã –≤ CS2
 * @param {boolean} steamUser.profile_public - –ü—É–±–ª–∏—á–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è
 * @param {number} steamUser.games_count - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä
 * @param {number} steamUser.vac_bans - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ VAC –±–∞–Ω–æ–≤
 * @param {number} steamUser.game_bans - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–≤—ã—Ö –±–∞–Ω–æ–≤
 * @param {number} steamUser.last_ban_days - –î–Ω–µ–π —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–∞–Ω–∞
 * @param {boolean} steamUser.is_community_banned - –ë–∞–Ω –≤ –∫–æ–º—å—é–Ω–∏—Ç–∏
 * @param {boolean} steamUser.is_trade_banned - –¢—Ä–µ–π–¥ –±–∞–Ω
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å trust_score, action –∏ details
 */
function calculateTrustScore(steamUser) {
  console.log('üîç [Trust Score] –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—á–µ—Ç –¥–ª—è Steam ID:', steamUser.steam_id);
  
  let score = 50; // –ë–∞–∑–æ–≤—ã–π –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Å—á–µ—Ç
  const reasons = []; // –ü—Ä–∏—á–∏–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞
  
  // ============================================================================
  // 1. –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–í–ï–†–ö–ò (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–∞–Ω)
  // ============================================================================
  
  // 1.1. –ê–∫—Ç–∏–≤–Ω—ã–π VAC –±–∞–Ω –≤ CS2 –∏–ª–∏ –Ω–µ–¥–∞–≤–Ω–∏–π –±–∞–Ω
  if (steamUser.vac_bans > 0) {
    if (steamUser.last_ban_days < 365) {
      console.log('‚ùå [Trust Score] –ö–†–ò–¢–ò–ß–ù–û: VAC –±–∞–Ω –º–µ–Ω–µ–µ –≥–æ–¥–∞ –Ω–∞–∑–∞–¥');
      return {
        score: 0,
        action: 'HARD_BAN',
        reason: 'Active VAC ban detected (less than 1 year)',
        details: {
          vac_bans: steamUser.vac_bans,
          last_ban_days: steamUser.last_ban_days,
          critical_check: 'vac_ban_recent'
        }
      };
    }
    
    // –°—Ç–∞—Ä—ã–µ VAC –±–∞–Ω—ã (>1 –≥–æ–¥–∞) - —Å–Ω–∏–∂–∞–µ–º —Å—á–µ—Ç, –Ω–æ –Ω–µ –±–∞–Ω–∏–º
    score -= 30;
    reasons.push(`Old VAC ban (${steamUser.last_ban_days} days ago): -30`);
    console.log(`‚ö†Ô∏è [Trust Score] –°—Ç–∞—Ä—ã–π VAC –±–∞–Ω: ${steamUser.last_ban_days} –¥–Ω–µ–π –Ω–∞–∑–∞–¥ (-30)`);
  }
  
  // 1.2. –ò–≥—Ä–æ–≤–æ–π –±–∞–Ω –æ—Ç Overwatch (–Ω–µ–¥–∞–≤–Ω–∏–π)
  if (steamUser.game_bans > 0 && steamUser.last_ban_days < 180) {
    console.log('‚ùå [Trust Score] –ö–†–ò–¢–ò–ß–ù–û: Game ban –º–µ–Ω–µ–µ 6 –º–µ—Å—è—Ü–µ–≤ –Ω–∞–∑–∞–¥');
    return {
      score: 0,
      action: 'HARD_BAN',
      reason: 'Recent game ban detected (Overwatch/Game ban)',
      details: {
        game_bans: steamUser.game_bans,
        last_ban_days: steamUser.last_ban_days,
        critical_check: 'game_ban_recent'
      }
    };
  }
  
  // 1.3. Community ban
  if (steamUser.is_community_banned) {
    score -= 40;
    reasons.push('Community banned: -40');
    console.log('‚ö†Ô∏è [Trust Score] Community ban (-40)');
  }
  
  // ============================================================================
  // 2. –í–û–ó–†–ê–°–¢ –ê–ö–ö–ê–£–ù–¢–ê
  // ============================================================================
  
  const accountAgeDays = steamUser.account_age_days || 0;
  
  if (accountAgeDays > 1825) { // 5+ –ª–µ—Ç
    score += 25;
    reasons.push('Account age 5+ years: +25');
    console.log('‚úÖ [Trust Score] –ê–∫–∫–∞—É–Ω—Ç 5+ –ª–µ—Ç (+25)');
  } else if (accountAgeDays > 730) { // 2+ –≥–æ–¥–∞
    score += 15;
    reasons.push('Account age 2+ years: +15');
    console.log('‚úÖ [Trust Score] –ê–∫–∫–∞—É–Ω—Ç 2+ –≥–æ–¥–∞ (+15)');
  } else if (accountAgeDays > 365) { // 1+ –≥–æ–¥
    score += 5;
    reasons.push('Account age 1+ year: +5');
    console.log('‚úÖ [Trust Score] –ê–∫–∫–∞—É–Ω—Ç 1+ –≥–æ–¥ (+5)');
  } else if (accountAgeDays < 90) { // –ú–µ–Ω–µ–µ 3 –º–µ—Å—è—Ü–µ–≤ - –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ
    score -= 10;
    reasons.push('Account age < 3 months: -10');
    console.log('‚ö†Ô∏è [Trust Score] –ù–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç < 3 –º–µ—Å—è—Ü–µ–≤ (-10)');
  } else if (accountAgeDays < 30) { // –ú–µ–Ω–µ–µ –º–µ—Å—è—Ü–∞ - –æ—á–µ–Ω—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ
    score -= 30;
    reasons.push('Account age < 1 month: -30');
    console.log('üî¥ [Trust Score] –û—á–µ–Ω—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç < 1 –º–µ—Å—è—Ü–∞ (-30)');
  }
  
  // ============================================================================
  // 3. STEAM LEVEL
  // ============================================================================
  
  const steamLevel = steamUser.steam_level || 0;
  
  if (steamLevel >= 50) {
    score += 20;
    reasons.push('Steam level 50+: +20');
    console.log('‚úÖ [Trust Score] Steam level 50+ (+20)');
  } else if (steamLevel >= 20) {
    score += 10;
    reasons.push('Steam level 20+: +10');
    console.log('‚úÖ [Trust Score] Steam level 20+ (+10)');
  } else if (steamLevel >= 5) {
    score += 5;
    reasons.push('Steam level 5+: +5');
    console.log('‚úÖ [Trust Score] Steam level 5+ (+5)');
  } else if (steamLevel === 0) {
    score -= 15;
    reasons.push('Steam level 0: -15');
    console.log('‚ö†Ô∏è [Trust Score] Steam level 0 (-15)');
  }
  
  // ============================================================================
  // 4. CS2 –ß–ê–°–´
  // ============================================================================
  
  const cs2Hours = steamUser.cs2_hours || 0;
  
  if (cs2Hours > 1000) {
    score += 20;
    reasons.push('CS2 hours 1000+: +20');
    console.log('‚úÖ [Trust Score] CS2 —á–∞—Å–æ–≤ 1000+ (+20)');
  } else if (cs2Hours > 500) {
    score += 10;
    reasons.push('CS2 hours 500+: +10');
    console.log('‚úÖ [Trust Score] CS2 —á–∞—Å–æ–≤ 500+ (+10)');
  } else if (cs2Hours > 100) {
    score += 5;
    reasons.push('CS2 hours 100+: +5');
    console.log('‚úÖ [Trust Score] CS2 —á–∞—Å–æ–≤ 100+ (+5)');
  } else if (cs2Hours < 10) {
    score -= 20;
    reasons.push('CS2 hours < 10: -20');
    console.log('‚ö†Ô∏è [Trust Score] CS2 —á–∞—Å–æ–≤ < 10 (-20)');
  }
  
  // ============================================================================
  // 5. –ü–†–ò–í–ê–¢–ù–û–°–¢–¨ –ü–†–û–§–ò–õ–Ø
  // ============================================================================
  
  if (steamUser.profile_public) {
    score += 15;
    reasons.push('Public profile: +15');
    console.log('‚úÖ [Trust Score] –ü—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å (+15)');
  } else {
    score -= 25;
    reasons.push('Private profile: -25');
    console.log('‚ö†Ô∏è [Trust Score] –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å (-25)');
  }
  
  // ============================================================================
  // 6. –ö–û–õ–ò–ß–ï–°–¢–í–û –ò–ì–†
  // ============================================================================
  
  const gamesCount = steamUser.games_count || 0;
  
  if (gamesCount > 100) {
    score += 15;
    reasons.push('Games owned 100+: +15');
    console.log('‚úÖ [Trust Score] –ò–≥—Ä 100+ (+15)');
  } else if (gamesCount > 50) {
    score += 10;
    reasons.push('Games owned 50+: +10');
    console.log('‚úÖ [Trust Score] –ò–≥—Ä 50+ (+10)');
  } else if (gamesCount > 10) {
    score += 5;
    reasons.push('Games owned 10+: +5');
    console.log('‚úÖ [Trust Score] –ò–≥—Ä 10+ (+5)');
  } else if (gamesCount === 1) {
    score -= 20;
    reasons.push('Only CS2 owned: -20');
    console.log('‚ö†Ô∏è [Trust Score] –¢–æ–ª—å–∫–æ CS2 –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ (-20)');
  }
  
  // ============================================================================
  // 7. TRADE BAN
  // ============================================================================
  
  if (steamUser.is_trade_banned) {
    score -= 30;
    reasons.push('Trade banned: -30');
    console.log('‚ö†Ô∏è [Trust Score] Trade ban (-30)');
  }
  
  // ============================================================================
  // –ù–û–†–ú–ê–õ–ò–ó–ê–¶–ò–Ø (0-100)
  // ============================================================================
  
  score = Math.max(0, Math.min(100, score));
  
  // ============================================================================
  // –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –î–ï–ô–°–¢–í–ò–Ø
  // ============================================================================
  
  let action;
  
  if (score < 20) {
    action = 'HARD_BAN'; // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  } else if (score < 40) {
    action = 'SOFT_BAN'; // –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
  } else if (score < 60) {
    action = 'WATCH_LIST'; // –ü–æ–≤—ã—à–µ–Ω–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ
  } else if (score < 80) {
    action = 'NORMAL'; // –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  } else {
    action = 'TRUSTED'; // –î–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  }
  
  console.log(`üìä [Trust Score] –ò—Ç–æ–≥–æ–≤—ã–π —Å—á–µ—Ç: ${score}/100, –î–µ–π—Å—Ç–≤–∏–µ: ${action}`);
  
  return {
    score,
    action,
    reason: action === 'HARD_BAN' ? 'Trust score too low' : null,
    details: {
      account_age_days: accountAgeDays,
      steam_level: steamLevel,
      cs2_hours: cs2Hours,
      profile_public: steamUser.profile_public,
      games_count: gamesCount,
      vac_bans: steamUser.vac_bans,
      game_bans: steamUser.game_bans,
      reasons: reasons
    }
  };
}

module.exports = {
  calculateTrustScore
};

