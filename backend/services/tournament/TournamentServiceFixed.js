/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ updateRules –¥–ª—è TournamentService
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è TournamentService.js
 * –ù—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –º–µ—Ç–æ–¥ updateRules –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ
 */

// üîß –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ú–ï–¢–û–î:
static async updateRules(tournamentId, rules, userId) {
    console.log(`‚öñÔ∏è TournamentService: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞ —Ç—É—Ä–Ω–∏—Ä–∞ ${tournamentId}`);

    await this._checkTournamentAccess(tournamentId, userId);

    // üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ç—É—Ä–Ω–∏—Ä–∞
    // –†–µ–≥–ª–∞–º–µ–Ω—Ç –º–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–º —Å—Ç–∞—Ç—É—Å–µ —Ç—É—Ä–Ω–∏—Ä–∞ (active, completed, in_progress)
    // –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    
    return await TournamentRepository.updateRules(tournamentId, rules);
}

// –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:
// –ó–∞–º–µ–Ω–∏—Ç–µ –º–µ—Ç–æ–¥ updateRules –≤ backend/services/tournament/TournamentService.js
// –Ω–∞ –∫–æ–¥ –≤—ã—à–µ, —É–±—Ä–∞–≤ —Å—Ç—Ä–æ–∫–∏:
// 
// const tournament = await TournamentRepository.getById(tournamentId);
// if (tournament.status !== 'active') {
//     throw new Error('–¢—É—Ä–Ω–∏—Ä –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω');
// } 