// üìù TournamentLogService - –°–µ—Ä–≤–∏—Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π —Ç—É—Ä–Ω–∏—Ä–∞
const pool = require('../../db');

class TournamentLogService {
    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è —Ç—É—Ä–Ω–∏—Ä–∞
     */
    static async logTournamentEvent(tournamentId, userId, eventType, eventData = {}) {
        try {
            console.log(`üìù [TournamentLogService] –°–æ–±—ã—Ç–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞ ${tournamentId}:`, {
                eventType,
                userId,
                eventData
            });
            
            // –ü—Ä–æ—Å—Ç–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–±–ª–∏—Ü–∞)
            // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å
            const query = `
                INSERT INTO tournament_events (tournament_id, user_id, event_type, event_data, created_at)
                VALUES ($1, $2, $3, $4, NOW())
            `;
            
            await pool.query(query, [tournamentId, userId, eventType, JSON.stringify(eventData)]);
            
        } catch (error) {
            // –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            console.warn(`‚ö†Ô∏è [TournamentLogService] –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è:`, error.message);
        }
    }
    
    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ
     */
    static async logAdvancement(tournamentId, teamId, fromRound, toRound, reason = '') {
        try {
            console.log(`üìù [TournamentLogService] –ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –≤ —Ç—É—Ä–Ω–∏—Ä–µ ${tournamentId}:`, {
                teamId,
                fromRound,
                toRound,
                reason
            });
            
            // –ü—Ä–æ—Å—Ç–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–±–ª–∏—Ü–∞)
            const query = `
                INSERT INTO tournament_advancements (tournament_id, team_id, from_round, to_round, reason, created_at)
                VALUES ($1, $2, $3, $4, $5, NOW())
            `;
            
            await pool.query(query, [tournamentId, teamId, fromRound, toRound, reason]);
            
        } catch (error) {
            // –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            console.warn(`‚ö†Ô∏è [TournamentLogService] –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è:`, error.message);
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
const logTournamentEvent = TournamentLogService.logTournamentEvent;
const logAdvancement = TournamentLogService.logAdvancement;

module.exports = { 
    logTournamentEvent, 
    logAdvancement,
    TournamentLogService 
}; 