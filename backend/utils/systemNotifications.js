const pool = require('../db');

// ID —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1337community
const SYSTEM_USER_ID = 1; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ

/**
 * –°–æ–∑–¥–∞–µ—Ç –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1337community
 */
async function ensureSystemUser() {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        const userCheck = await pool.query('SELECT id, avatar_url FROM users WHERE username = $1', ['1337community']);
        
        if (userCheck.rows.length === 0) {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –∞–≤–∞—Ç–∞—Ä–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const avatarUrl = process.env.NODE_ENV === 'production'
                ? 'https://1337community.com/uploads/avatars/1337-logo-chat.png'
                : 'http://localhost:3000/uploads/avatars/1337-logo-chat.png';
            
            // –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∞–≤–∞—Ç–∞—Ä–æ–º
            const result = await pool.query(
                'INSERT INTO users (username, email, password_hash, is_verified, avatar_url, created_at) VALUES ($1, $2, $3, $4, $5, NOW()) RETURNING id',
                ['1337community', 'system@1337community.com', 'system_user_no_login', true, avatarUrl]
            );
            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1337community —Å –∞–≤–∞—Ç–∞—Ä–æ–º: ${avatarUrl}`);
            return result.rows[0].id;
        } else {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –∞–≤–∞—Ç–∞—Ä —É —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const existingUser = userCheck.rows[0];
            if (!existingUser.avatar_url || !existingUser.avatar_url.includes('1337-logo-chat.png')) {
                // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const avatarUrl = process.env.NODE_ENV === 'production'
                    ? 'https://1337community.com/uploads/avatars/1337-logo-chat.png'
                    : 'http://localhost:3000/uploads/avatars/1337-logo-chat.png';
                
                await pool.query(
                    'UPDATE users SET avatar_url = $1 WHERE username = $2',
                    [avatarUrl, '1337community']
                );
                console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –∞–≤–∞—Ç–∞—Ä —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1337community: ${avatarUrl}`);
            }
            return existingUser.id;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        return SYSTEM_USER_ID; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π ID
    }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç —á–∞—Ç –º–µ–∂–¥—É —Å–∏—Å—Ç–µ–º–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–º
 */
async function getOrCreateSystemChat(recipientId) {
    try {
        const systemUserId = await ensureSystemUser();
        
        // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —á–∞—Ç
        const chatCheck = await pool.query(`
            SELECT c.id 
            FROM chats c
            JOIN chat_participants cp1 ON c.id = cp1.chat_id AND cp1.user_id = $1
            JOIN chat_participants cp2 ON c.id = cp2.chat_id AND cp2.user_id = $2
            WHERE c.type = 'private'
        `, [systemUserId, recipientId]);
        
        if (chatCheck.rows.length > 0) {
            return chatCheck.rows[0].id;
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —á–∞—Ç
        const chatResult = await pool.query(
            'INSERT INTO chats (name, type, created_by, created_at) VALUES ($1, $2, $3, NOW()) RETURNING id',
            [`–°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è`, 'private', systemUserId]
        );
        
        const chatId = chatResult.rows[0].id;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        await pool.query(
            'INSERT INTO chat_participants (chat_id, user_id, joined_at) VALUES ($1, $2, NOW()), ($1, $3, NOW())',
            [chatId, systemUserId, recipientId]
        );
        
        return chatId;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —á–∞—Ç–∞:', error);
        throw error;
    }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —á–∞—Ç
 */
async function sendSystemNotification(recipientId, message, type = 'system', metadata = null) {
    try {
        const systemUserId = await ensureSystemUser();
        const chatId = await getOrCreateSystemChat(recipientId);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
        const messageResult = await pool.query(
            'INSERT INTO messages (chat_id, sender_id, content, message_type, metadata, created_at) VALUES ($1, $2, $3, $4, $5, NOW()) RETURNING *',
            [chatId, systemUserId, message, type, metadata ? JSON.stringify(metadata) : null]
        );
        
        // –ü–æ–º–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ –¥–ª—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        await pool.query(
            'INSERT INTO message_status (message_id, user_id, is_read, read_at) VALUES ($1, $2, $3, NULL)',
            [messageResult.rows[0].id, recipientId, false]
        );
        
        console.log(`–°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${recipientId}: ${message}`);
        if (metadata) {
            console.log(`–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:`, metadata);
        }
        
        return messageResult.rows[0];
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
        throw error;
    }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –≤ —Ç—É—Ä–Ω–∏—Ä
 */
async function sendTournamentInviteNotification(recipientId, tournamentName, inviterUsername, tournamentId) {
    const tournamentUrl = process.env.NODE_ENV === 'production'
        ? `https://1337community.com/tournaments/${tournamentId}`
        : `http://localhost:3000/tournaments/${tournamentId}`;
        
    const message = `üèÜ –í—ã –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –≤ —Ç—É—Ä–Ω–∏—Ä **[${tournamentName}](${tournamentUrl})** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${inviterUsername}.\n\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ç—É—Ä–Ω–∏—Ä –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è.`;
    
    const metadata = {
        type: 'tournament_invitation',
        tournament_id: tournamentId,
        tournament_name: tournamentName,
        inviter_username: inviterUsername,
        actions: [
            {
                type: 'view_tournament',
                label: 'üèÜ –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç—É—Ä–Ω–∏—Ä—É',
                action: 'open_tournament',
                style: 'primary',
                url: tournamentUrl,
                target: '_blank'
            }
        ]
    };
    
    return await sendSystemNotification(recipientId, message, 'tournament_invite', metadata);
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä
 */
async function sendTournamentInviteAcceptedNotification(recipientId, username, tournamentName) {
    const message = `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${username} –ø—Ä–∏–Ω—è–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ —Ç—É—Ä–Ω–∏—Ä "${tournamentName}".`;
    return await sendSystemNotification(recipientId, message, 'tournament_accepted');
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä
 */
async function sendTournamentInviteRejectedNotification(recipientId, username, tournamentName) {
    const message = `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${username} –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ —Ç—É—Ä–Ω–∏—Ä "${tournamentName}".`;
    return await sendSystemNotification(recipientId, message, 'tournament_rejected');
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—è–≤–∫–µ –≤ –¥—Ä—É–∑—å—è
 */
async function sendFriendRequestNotification(recipientId, senderUsername) {
    const message = `üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${senderUsername} –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –∑–∞—è–≤–∫—É –≤ –¥—Ä—É–∑—å—è.\n\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–î—Ä—É–∑—å—è" –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–∫–∏.`;
    return await sendSystemNotification(recipientId, message, 'friend_request');
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏ –≤ –¥—Ä—É–∑—å—è
 */
async function sendFriendRequestAcceptedNotification(recipientId, username) {
    const message = `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${username} –ø—Ä–∏–Ω—è–ª –≤–∞—à—É –∑–∞—è–≤–∫—É –≤ –¥—Ä—É–∑—å—è.`;
    return await sendSystemNotification(recipientId, message, 'friend_accepted');
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞
 */
async function sendAdminRequestNotification(recipientId, requesterUsername, tournamentName, tournamentId) {
    const message = `üõ°Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${requesterUsername} –∑–∞–ø—Ä–æ—Å–∏–ª –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–∞ "${tournamentName}".\n\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ç—É—Ä–Ω–∏—Ä –¥–ª—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: /tournaments/${tournamentId}`;
    return await sendSystemNotification(recipientId, message, 'admin_request');
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
 */
async function sendAdminRequestAcceptedNotification(recipientId, tournamentName) {
    const message = `‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞ "${tournamentName}" –ø—Ä–∏–Ω—è—Ç.`;
    return await sendSystemNotification(recipientId, message, 'admin_accepted');
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
 */
async function sendAdminRequestRejectedNotification(recipientId, tournamentName) {
    const message = `‚ùå –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞ "${tournamentName}" –æ—Ç–∫–ª–æ–Ω—ë–Ω.`;
    return await sendSystemNotification(recipientId, message, 'admin_rejected');
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ç—É—Ä–Ω–∏—Ä–∞ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
 */
async function sendAdminInviteNotification(recipientId, tournamentName, inviterUsername, tournamentId, invitationId) {
    // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Ç—É—Ä–Ω–∏—Ä–∞
    const tournamentUrl = process.env.NODE_ENV === 'production'
        ? `https://1337community.com/tournaments/${tournamentId}`
        : `http://localhost:3000/tournaments/${tournamentId}`;
    
    // –°–æ–∑–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    const message = `üõ°Ô∏è –í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ç—É—Ä–Ω–∏—Ä–∞!

üèÜ **–¢—É—Ä–Ω–∏—Ä:** [${tournamentName}](${tournamentUrl})
üë§ **–ü—Ä–∏–≥–ª–∞—Å–∏–ª:** ${inviterUsername}

üíº **–ö–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—ã —Å–º–æ–∂–µ—Ç–µ:**
‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –º–∞—Ç—á–∞–º–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤  
‚Ä¢ –ú–æ–¥–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç —Ç—É—Ä–Ω–∏—Ä–∞
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–≥–∏—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

‚è∞ **–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:** 7 –¥–Ω–µ–π

üéØ **–î–µ–π—Å—Ç–≤–∏—è:**`;

    // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    const messageMetadata = {
        type: 'admin_invitation',
        tournament_id: tournamentId,
        invitation_id: invitationId,
        inviter_username: inviterUsername,
        actions: [
            {
                type: 'accept',
                label: '‚úÖ –ü—Ä–∏–Ω—è—Ç—å',
                action: 'accept_admin_invitation',
                style: 'success',
                endpoint: `/api/tournaments/admin-invitations/${invitationId}/accept`
            },
            {
                type: 'decline', 
                label: '‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å',
                action: 'decline_admin_invitation',
                style: 'danger',
                endpoint: `/api/tournaments/admin-invitations/${invitationId}/decline`
            },
            {
                type: 'view_tournament',
                label: 'üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç—É—Ä–Ω–∏—Ä–∞',
                action: 'open_tournament',
                style: 'info',
                url: tournamentUrl,
                target: '_blank'
            }
        ],
        expires_at: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString() // 7 –¥–Ω–µ–π
    };

    return await sendSystemNotification(recipientId, message, 'admin_invitation_interactive', messageMetadata);
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 */
async function sendAdminInviteAcceptedNotification(recipientId, username, tournamentName) {
    const message = `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${username} –ø—Ä–∏–Ω—è–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ç—É—Ä–Ω–∏—Ä–∞ "${tournamentName}".`;
    
    const metadata = {
        type: 'admin_invite_accepted',
        admin_username: username,
        tournament_name: tournamentName
    };
    
    return await sendSystemNotification(recipientId, message, 'tournament_accepted', metadata);
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 */
async function sendAdminInviteRejectedNotification(recipientId, username, tournamentName) {
    const message = `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${username} –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ç—É—Ä–Ω–∏—Ä–∞ "${tournamentName}".`;
    
    const metadata = {
        type: 'admin_invite_rejected',
        declined_username: username,
        tournament_name: tournamentName
    };
    
    return await sendSystemNotification(recipientId, message, 'tournament_rejected', metadata);
}

module.exports = {
    sendSystemNotification,
    sendTournamentInviteNotification,
    sendTournamentInviteAcceptedNotification,
    sendTournamentInviteRejectedNotification,
    sendFriendRequestNotification,
    sendFriendRequestAcceptedNotification,
    sendAdminRequestNotification,
    sendAdminRequestAcceptedNotification,
    sendAdminRequestRejectedNotification,
    sendAdminInviteNotification,
    sendAdminInviteAcceptedNotification,
    sendAdminInviteRejectedNotification,
    ensureSystemUser,
    getOrCreateSystemChat
}; 