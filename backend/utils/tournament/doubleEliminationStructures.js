/**
 * üèÜ –°–¢–†–£–ö–¢–£–†–´ DOUBLE ELIMINATION –¢–£–†–ù–ò–†–û–í
 * 
 * –ü—Ä–µ–¥—Ä–∞—Å—á–∏—Ç–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ —Ç—É—Ä–Ω–∏—Ä–æ–≤.
 * –ö–∞–∂–¥–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—á–µ–π –≤ –∫–∞–∂–¥–æ–º —Ä–∞—É–Ω–¥–µ
 * –¥–ª—è Winners Bracket –∏ Losers Bracket.
 * 
 * –õ–æ–≥–∏–∫–∞ Double Elimination:
 * - Winners Bracket: –∫–∞–∂–¥—ã–π —Ä–∞—É–Ω–¥ –¥–µ–ª–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ–ø–æ–ª–∞–º
 * - Losers Bracket: —Å–ª–æ–∂–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ–º –º–∞—Ç—á–µ–π
 * - –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ –∏–∑ Winners –ø–æ–ø–∞–¥–∞—é—Ç –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ä–∞—É–Ω–¥—ã Losers
 * - Grand Final: –æ—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ç—á + –≤–æ–∑–º–æ–∂–Ω—ã–π reset
 */

/**
 * üèóÔ∏è –¢–ê–ë–õ–ò–¶–´ –°–¢–†–£–ö–¢–£–† DOUBLE ELIMINATION
 */
const DOUBLE_ELIMINATION_STRUCTURES = {
    /**
     * üèÜ 4 –£–ß–ê–°–¢–ù–ò–ö–ê
     * 
     * Winners Bracket:
     * R1: A vs B, C vs D (2 –º–∞—Ç—á–∞) ‚Üí 2 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
     * R2: W1 vs W2 (1 –º–∞—Ç—á) ‚Üí 1 —Ñ–∏–Ω–∞–ª–∏—Å—Ç Winners
     * 
     * Losers Bracket:
     * L1: L1 vs L2 (1 –º–∞—Ç—á) ‚Üí 1 —É—á–∞—Å—Ç–Ω–∏–∫
     * L2: L(R2) vs W(L1) (1 –º–∞—Ç—á) ‚Üí 1 —Ñ–∏–Ω–∞–ª–∏—Å—Ç Losers
     * 
     * Grand Final: Winners vs Losers (+ reset –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
     */
    4: {
        participants: 4,
        winnersRounds: 2,
        winnersStructure: [2, 1], // R1: 2 –º–∞—Ç—á–∞, R2: 1 –º–∞—Ç—á
        losersRounds: 2,
        losersStructure: [1, 1],  // R1: 1 –º–∞—Ç—á, R2: 1 –º–∞—Ç—á
        
        // –°–≤—è–∑–∏ Winners ‚Üí Losers (–∫–∞–∫–∏–µ —Ä–∞—É–Ω–¥—ã Winners –∫–æ—Ä–º—è—Ç –∫–∞–∫–∏–µ —Ä–∞—É–Ω–¥—ã Losers)
        winnersToLosersMapping: {
            1: 1, // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W1 ‚Üí L1
            2: 2  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W2 ‚Üí L2 (—Ñ–∏–Ω–∞–ª Losers)
        },
        
        totalMatches: 7, // 3 Winners + 2 Losers + 2 Grand Final
        description: "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π DE —Ç—É—Ä–Ω–∏—Ä - –∫–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–≥—Ä–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 1 —Ä–∞–∑"
    },

    /**
     * üèÜ 8 –£–ß–ê–°–¢–ù–ò–ö–û–í  
     * 
     * Winners Bracket:
     * R1: 4 –º–∞—Ç—á–∞ (8‚Üí4)
     * R2: 2 –º–∞—Ç—á–∞ (4‚Üí2) 
     * R3: 1 –º–∞—Ç—á (2‚Üí1)
     * 
     * Losers Bracket:
     * L1: 2 –º–∞—Ç—á–∞ (4 –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö W1 ‚Üí 2)
     * L2: 2 –º–∞—Ç—á–∞ (2 –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö W2 + 2 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è L1 ‚Üí 2)
     * L3: 1 –º–∞—Ç—á (2 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è L2 ‚Üí 1)
     * L4: 1 –º–∞—Ç—á (1 –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏–π W3 + 1 –ø–æ–±–µ–¥–∏—Ç–µ–ª—å L3 ‚Üí 1) [–ú–∞–ª—ã–π —Ñ–∏–Ω–∞–ª]
     */
    8: {
        participants: 8,
        winnersRounds: 3,
        winnersStructure: [4, 2, 1], // R1: 4, R2: 2, R3: 1
        losersRounds: 4,
        losersStructure: [2, 2, 1, 1], // L1: 2, L2: 2, L3: 1, L4: 1
        
        winnersToLosersMapping: {
            1: 1, // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W1 ‚Üí L1
            2: 2, // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W2 ‚Üí L2  
            3: 4  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W3 ‚Üí L4 (–º–∞–ª—ã–π —Ñ–∏–Ω–∞–ª)
        },
        
        totalMatches: 15, // 7 Winners + 6 Losers + 2 Grand Final
        description: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–∞–ª—ã–π DE —Ç—É—Ä–Ω–∏—Ä —Å –º–∞–ª—ã–º —Ñ–∏–Ω–∞–ª–æ–º –ª—É–∑–µ—Ä–æ–≤"
    },

    /**
     * üèÜ 16 –£–ß–ê–°–¢–ù–ò–ö–û–í
     * 
     * Winners Bracket:
     * R1: 8 –º–∞—Ç—á–µ–π (16‚Üí8)
     * R2: 4 –º–∞—Ç—á–∞ (8‚Üí4)
     * R3: 2 –º–∞—Ç—á–∞ (4‚Üí2)
     * R4: 1 –º–∞—Ç—á (2‚Üí1)
     * 
     * Losers Bracket:
     * L1: 4 –º–∞—Ç—á–∞ (8 –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö W1 ‚Üí 4)
     * L2: 4 –º–∞—Ç—á–∞ (4 –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö W2 + 4 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è L1 ‚Üí 4)
     * L3: 2 –º–∞—Ç—á–∞ (4 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è L2 ‚Üí 2)
     * L4: 2 –º–∞—Ç—á–∞ (2 –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö W3 + 2 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è L3 ‚Üí 2)
     * L5: 1 –º–∞—Ç—á (2 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è L4 ‚Üí 1)
     * L6: 1 –º–∞—Ç—á (1 –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏–π W4 + 1 –ø–æ–±–µ–¥–∏—Ç–µ–ª—å L5 ‚Üí 1) [–ú–∞–ª—ã–π —Ñ–∏–Ω–∞–ª]
     */
    16: {
        participants: 16,
        winnersRounds: 4,
        winnersStructure: [8, 4, 2, 1], // R1: 8, R2: 4, R3: 2, R4: 1
        losersRounds: 6,
        losersStructure: [4, 4, 2, 2, 1, 1], // L1: 4, L2: 4, L3: 2, L4: 2, L5: 1, L6: 1
        
        winnersToLosersMapping: {
            1: 1, // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W1 ‚Üí L1
            2: 2, // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W2 ‚Üí L2
            3: 4, // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W3 ‚Üí L4
            4: 6  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W4 ‚Üí L6 (–º–∞–ª—ã–π —Ñ–∏–Ω–∞–ª)
        },
        
        totalMatches: 31, // 15 Winners + 14 Losers + 2 Grand Final
        description: "–°—Ä–µ–¥–Ω–∏–π DE —Ç—É—Ä–Ω–∏—Ä —Å —Ä–∞–∑–≤–∏—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ª—É–∑–µ—Ä–æ–≤"
    },

    /**
     * üèÜ 32 –£–ß–ê–°–¢–ù–ò–ö–ê
     * 
     * 5 —Ä–∞—É–Ω–¥–æ–≤ Winners, 8 —Ä–∞—É–Ω–¥–æ–≤ Losers
     */
    32: {
        participants: 32,
        winnersRounds: 5,
        winnersStructure: [16, 8, 4, 2, 1], // R1: 16, R2: 8, R3: 4, R4: 2, R5: 1
        losersRounds: 8,
        losersStructure: [8, 8, 4, 4, 2, 2, 1, 1], // L1: 8, L2: 8, L3: 4, L4: 4, L5: 2, L6: 2, L7: 1, L8: 1
        
        winnersToLosersMapping: {
            1: 1, // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W1 ‚Üí L1
            2: 2, // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W2 ‚Üí L2
            3: 4, // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W3 ‚Üí L4
            4: 6, // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W4 ‚Üí L6
            5: 8  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W5 ‚Üí L8 (–º–∞–ª—ã–π —Ñ–∏–Ω–∞–ª)
        },
        
        totalMatches: 63, // 31 Winners + 30 Losers + 2 Grand Final
        description: "–ë–æ–ª—å—à–æ–π DE —Ç—É—Ä–Ω–∏—Ä –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π"
    },

    /**
     * üèÜ 64 –£–ß–ê–°–¢–ù–ò–ö–ê
     * 
     * 6 —Ä–∞—É–Ω–¥–æ–≤ Winners, 10 —Ä–∞—É–Ω–¥–æ–≤ Losers
     */
    64: {
        participants: 64,
        winnersRounds: 6,
        winnersStructure: [32, 16, 8, 4, 2, 1], // R1: 32, R2: 16, R3: 8, R4: 4, R5: 2, R6: 1
        losersRounds: 10,
        losersStructure: [16, 16, 8, 8, 4, 4, 2, 2, 1, 1], // L1: 16, L2: 16, L3: 8, L4: 8, L5: 4, L6: 4, L7: 2, L8: 2, L9: 1, L10: 1
        
        winnersToLosersMapping: {
            1: 1,  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W1 ‚Üí L1
            2: 2,  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W2 ‚Üí L2
            3: 4,  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W3 ‚Üí L4
            4: 6,  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W4 ‚Üí L6
            5: 8,  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W5 ‚Üí L8
            6: 10  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W6 ‚Üí L10 (–º–∞–ª—ã–π —Ñ–∏–Ω–∞–ª)
        },
        
        totalMatches: 127, // 63 Winners + 62 Losers + 2 Grand Final
        description: "–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π DE —Ç—É—Ä–Ω–∏—Ä –¥–ª—è –º–µ–π–¥–∂–æ—Ä-—Ç—É—Ä–Ω–∏—Ä–æ–≤"
    },

    /**
     * üèÜ 128 –£–ß–ê–°–¢–ù–ò–ö–û–í
     * 
     * 7 —Ä–∞—É–Ω–¥–æ–≤ Winners, 12 —Ä–∞—É–Ω–¥–æ–≤ Losers
     */
    128: {
        participants: 128,
        winnersRounds: 7,
        winnersStructure: [64, 32, 16, 8, 4, 2, 1], // R1: 64, R2: 32, R3: 16, R4: 8, R5: 4, R6: 2, R7: 1
        losersRounds: 12,
        losersStructure: [32, 32, 16, 16, 8, 8, 4, 4, 2, 2, 1, 1], // L1: 32, L2: 32, ..., L11: 1, L12: 1
        
        winnersToLosersMapping: {
            1: 1,  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W1 ‚Üí L1
            2: 2,  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W2 ‚Üí L2
            3: 4,  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W3 ‚Üí L4
            4: 6,  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W4 ‚Üí L6
            5: 8,  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W5 ‚Üí L8
            6: 10, // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W6 ‚Üí L10
            7: 12  // –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ W7 ‚Üí L12 (–º–∞–ª—ã–π —Ñ–∏–Ω–∞–ª)
        },
        
        totalMatches: 255, // 127 Winners + 126 Losers + 2 Grand Final
        description: "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π DE —Ç—É—Ä–Ω–∏—Ä –¥–ª—è –∫—Ä—É–ø–Ω–µ–π—à–∏—Ö —á–µ–º–ø–∏–æ–Ω–∞—Ç–æ–≤"
    }
};

/**
 * üîç –ü–û–õ–£–ß–ï–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –ü–û –ö–û–õ–ò–ß–ï–°–¢–í–£ –£–ß–ê–°–¢–ù–ò–ö–û–í
 * @param {number} participantCount - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
 * @returns {Object} –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç—É—Ä–Ω–∏—Ä–∞
 */
function getDoubleEliminationStructure(participantCount) {
    // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ –±–ª–∏–∂–∞–π—à–µ–π —Å—Ç–µ–ø–µ–Ω–∏ –¥–≤–æ–π–∫–∏ (–≤–≤–µ—Ä—Ö)
    const powerOfTwo = Math.pow(2, Math.ceil(Math.log2(participantCount)));
    
    const structure = DOUBLE_ELIMINATION_STRUCTURES[powerOfTwo];
    
    if (!structure) {
        throw new Error(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ä–∞–∑–º–µ—Ä —Ç—É—Ä–Ω–∏—Ä–∞: ${participantCount} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (—Å—Ç–µ–ø–µ–Ω—å –¥–≤–æ–π–∫–∏: ${powerOfTwo})`);
    }
    
    return {
        ...structure,
        actualParticipants: participantCount,
        byesNeeded: powerOfTwo - participantCount
    };
}

/**
 * üßÆ –í–ê–õ–ò–î–ê–¶–ò–Ø –°–¢–†–£–ö–¢–£–†–´
 * @param {Object} structure - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 */
function validateStructure(structure) {
    const errors = [];
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ Winners Bracket
    const winnersTotal = structure.winnersStructure.reduce((a, b) => a + b, 0);
    const expectedWinners = structure.participants - 1;
    if (winnersTotal !== expectedWinners) {
        errors.push(`Winners Bracket: –æ–∂–∏–¥–∞–µ—Ç—Å—è ${expectedWinners} –º–∞—Ç—á–µ–π, –ø–æ–ª—É—á–µ–Ω–æ ${winnersTotal}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ Losers Bracket
    const losersTotal = structure.losersStructure.reduce((a, b) => a + b, 0);
    const expectedLosers = structure.participants - 2; // –í—Å–µ –∫—Ä–æ–º–µ —Ñ–∏–Ω–∞–ª–∏—Å—Ç–∞ Winners –∏ —á–µ–º–ø–∏–æ–Ω–∞
    if (losersTotal !== expectedLosers) {
        errors.push(`Losers Bracket: –æ–∂–∏–¥–∞–µ—Ç—Å—è ${expectedLosers} –º–∞—Ç—á–µ–π, –ø–æ–ª—É—á–µ–Ω–æ ${losersTotal}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    const calculatedTotal = winnersTotal + losersTotal + 2; // +2 –¥–ª—è Grand Final
    if (calculatedTotal !== structure.totalMatches) {
        errors.push(`–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: –æ–∂–∏–¥–∞–µ—Ç—Å—è ${structure.totalMatches}, —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ ${calculatedTotal}`);
    }
    
    return {
        isValid: errors.length === 0,
        errors,
        statistics: {
            participants: structure.participants,
            winnersMatches: winnersTotal,
            losersMatches: losersTotal,
            grandFinalMatches: 2,
            totalMatches: calculatedTotal
        }
    };
}

/**
 * üìä –ü–û–õ–£–ß–ï–ù–ò–ï –°–ü–ò–°–ö–ê –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–ú–´–• –†–ê–ó–ú–ï–†–û–í
 * @returns {Array} –ú–∞—Å—Å–∏–≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
 */
function getSupportedSizes() {
    return Object.keys(DOUBLE_ELIMINATION_STRUCTURES).map(Number).sort((a, b) => a - b);
}

/**
 * üéØ –†–ê–°–ß–ï–¢ –¶–ï–õ–ï–í–û–ì–û –†–ê–£–ù–î–ê LOSERS –î–õ–Ø –ü–†–û–ò–ì–†–ê–í–®–ò–• WINNERS
 * @param {number} winnersRound - –†–∞—É–Ω–¥ Winners Bracket
 * @param {Object} structure - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç—É—Ä–Ω–∏—Ä–∞
 * @returns {number} –ù–æ–º–µ—Ä —Ä–∞—É–Ω–¥–∞ Losers Bracket
 */
function calculateTargetLosersRound(winnersRound, structure) {
    return structure.winnersToLosersMapping[winnersRound] || null;
}

/**
 * üè∑Ô∏è –ü–û–õ–£–ß–ï–ù–ò–ï –û–ü–ò–°–ê–ù–ò–Ø –ú–ê–¢–ß–ê –í LOSERS BRACKET
 * @param {number} losersRound - –†–∞—É–Ω–¥ Losers Bracket
 * @param {Object} structure - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç—É—Ä–Ω–∏—Ä–∞
 * @returns {string} –û–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–∞ –º–∞—Ç—á–∞
 */
function getLosersRoundDescription(losersRound, structure) {
    if (losersRound === structure.losersRounds) {
        return "–ú–∞–ª—ã–π —Ñ–∏–Ω–∞–ª –ª—É–∑–µ—Ä–æ–≤";
    } else if (losersRound % 2 === 1) {
        return "–ü—Ä–∏–µ–º –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö –∏–∑ Winners";
    } else {
        return "–°–º–µ—à–∞–Ω–Ω—ã–π —Ä–∞—É–Ω–¥";
    }
}

module.exports = {
    DOUBLE_ELIMINATION_STRUCTURES,
    getDoubleEliminationStructure,
    validateStructure,
    getSupportedSizes,
    calculateTargetLosersRound,
    getLosersRoundDescription
}; 