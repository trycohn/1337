-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö
-- –≠—Ç–∞ —Ç–∞–±–ª–∏—Ü–∞ —Ö—Ä–∞–Ω–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—á–∞—Å—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö

-- –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
CREATE TABLE IF NOT EXISTS user_tournament_stats (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    tournament_id INTEGER NOT NULL REFERENCES tournaments(id) ON DELETE CASCADE,
    result VARCHAR(100) NOT NULL,
    wins INTEGER DEFAULT 0,
    losses INTEGER DEFAULT 0,
    is_team BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    -- –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å: –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –æ–¥–∏–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ç—É—Ä–Ω–∏—Ä–µ
    UNIQUE(user_id, tournament_id)
);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (—Å–æ–∑–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
CREATE INDEX IF NOT EXISTS idx_user_tournament_stats_user_id ON user_tournament_stats(user_id);
CREATE INDEX IF NOT EXISTS idx_user_tournament_stats_tournament_id ON user_tournament_stats(tournament_id);
CREATE INDEX IF NOT EXISTS idx_user_tournament_stats_result ON user_tournament_stats(result);
CREATE INDEX IF NOT EXISTS idx_user_tournament_stats_is_team ON user_tournament_stats(is_team);

-- –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DO $$
BEGIN
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç—Ä–∏–≥–≥–µ—Ä
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.triggers 
        WHERE trigger_name = 'update_user_tournament_stats_updated_at' 
        AND event_object_table = 'user_tournament_stats'
    ) THEN
        -- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä
        CREATE TRIGGER update_user_tournament_stats_updated_at 
            BEFORE UPDATE ON user_tournament_stats
            FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
        
        RAISE NOTICE '‚úÖ –¢—Ä–∏–≥–≥–µ—Ä update_user_tournament_stats_updated_at —Å–æ–∑–¥–∞–Ω';
    ELSE
        RAISE NOTICE '‚ÑπÔ∏è –¢—Ä–∏–≥–≥–µ—Ä update_user_tournament_stats_updated_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç';
    END IF;
END
$$;

-- –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–µ constraints (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
DO $$
BEGIN
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º constraint –Ω–∞ wins
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name = 'wins_non_negative' 
        AND table_name = 'user_tournament_stats'
    ) THEN
        ALTER TABLE user_tournament_stats 
        ADD CONSTRAINT wins_non_negative CHECK (wins >= 0);
        RAISE NOTICE '‚úÖ Constraint wins_non_negative –¥–æ–±–∞–≤–ª–µ–Ω';
    END IF;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º constraint –Ω–∞ losses
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name = 'losses_non_negative' 
        AND table_name = 'user_tournament_stats'
    ) THEN
        ALTER TABLE user_tournament_stats 
        ADD CONSTRAINT losses_non_negative CHECK (losses >= 0);
        RAISE NOTICE '‚úÖ Constraint losses_non_negative –¥–æ–±–∞–≤–ª–µ–Ω';
    END IF;
END
$$;

-- –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
DO $$
DECLARE
    table_exists BOOLEAN;
    trigger_exists BOOLEAN;
    record_count INTEGER;
BEGIN
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É
    SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = 'user_tournament_stats'
    ) INTO table_exists;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä
    SELECT EXISTS (
        SELECT FROM information_schema.triggers 
        WHERE trigger_name = 'update_user_tournament_stats_updated_at'
        AND event_object_table = 'user_tournament_stats'
    ) INTO trigger_exists;
    
    -- –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏
    SELECT COUNT(*) FROM user_tournament_stats INTO record_count;
    
    -- –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    IF table_exists AND trigger_exists THEN
        RAISE NOTICE 'üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!';
        RAISE NOTICE '‚úÖ –¢–∞–±–ª–∏—Ü–∞ user_tournament_stats: –°–û–ó–î–ê–ù–ê';
        RAISE NOTICE '‚úÖ –¢—Ä–∏–≥–≥–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: –ê–ö–¢–ò–í–ï–ù';
        RAISE NOTICE '‚úÖ –ò–Ω–¥–µ–∫—Å—ã: –°–û–ó–î–ê–ù–´';
        RAISE NOTICE '‚úÖ Constraints: –î–û–ë–ê–í–õ–ï–ù–´';
        RAISE NOTICE 'üìä –¢–µ–∫—É—â–∏—Ö –∑–∞–ø–∏—Å–µ–π: %', record_count;
        RAISE NOTICE 'üöÄ –°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç—É—Ä–Ω–∏—Ä–æ–≤ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è –ù–µ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ';
        RAISE NOTICE '–¢–∞–±–ª–∏—Ü–∞: %', CASE WHEN table_exists THEN '‚úÖ' ELSE '‚ùå' END;
        RAISE NOTICE '–¢—Ä–∏–≥–≥–µ—Ä: %', CASE WHEN trigger_exists THEN '‚úÖ' ELSE '‚ùå' END;
    END IF;
END
$$; 