-- üéØ V4 ULTIMATE: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¢–û–õ–¨–ö–û –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
-- –¢–∞–±–ª–∏—Ü–∞ user_tournament_stats –∏ friends —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤—ã!

-- ========================================
-- 1. –¢–ê–ë–õ–ò–¶–ê –î–û–°–¢–ò–ñ–ï–ù–ò–ô
-- ========================================

CREATE TABLE IF NOT EXISTS achievements (
    id SERIAL PRIMARY KEY,
    title VARCHAR(255) NOT NULL UNIQUE,
    description TEXT NOT NULL,
    icon VARCHAR(50) DEFAULT 'üèÜ',
    category VARCHAR(50) NOT NULL, -- tournaments, games, social, streaks, performance, special
    rarity VARCHAR(20) DEFAULT 'common', -- common, rare, epic, legendary, mythical
    points INTEGER DEFAULT 10,
    condition_type VARCHAR(50) NOT NULL, -- wins, tournaments_won, matches_played, etc.
    condition_value INTEGER NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ========================================
-- 2. –¢–ê–ë–õ–ò–¶–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–• –î–û–°–¢–ò–ñ–ï–ù–ò–ô
-- ========================================

CREATE TABLE IF NOT EXISTS user_achievements (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    achievement_id INTEGER REFERENCES achievements(id) ON DELETE CASCADE,
    unlocked_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    progress INTEGER DEFAULT 0,
    UNIQUE(user_id, achievement_id)
);

-- ========================================
-- 3. –ò–ù–î–ï–ö–°–´ –î–õ–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò
-- ========================================

CREATE INDEX IF NOT EXISTS idx_achievements_category ON achievements(category);
CREATE INDEX IF NOT EXISTS idx_achievements_rarity ON achievements(rarity);
CREATE INDEX IF NOT EXISTS idx_achievements_condition_type ON achievements(condition_type);
CREATE INDEX IF NOT EXISTS idx_user_achievements_user_id ON user_achievements(user_id);
CREATE INDEX IF NOT EXISTS idx_user_achievements_achievement_id ON user_achievements(achievement_id);

-- ========================================
-- 4. –¢–†–ò–ì–ì–ï–†–´ –î–õ–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø
-- ========================================

-- –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è achievements
DROP TRIGGER IF EXISTS update_achievements_updated_at ON achievements;
CREATE TRIGGER update_achievements_updated_at 
    BEFORE UPDATE ON achievements 
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- ========================================
-- 5. –§–£–ù–ö–¶–ò–Ø –ü–†–û–í–ï–†–ö–ò –î–û–°–¢–ò–ñ–ï–ù–ò–ô
-- ========================================

CREATE OR REPLACE FUNCTION check_achievements(user_id_param INTEGER)
RETURNS TABLE(unlocked_achievement_id INTEGER, achievement_title TEXT) AS $$
DECLARE
    achievement_record RECORD;
    user_stats RECORD;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü—ã
    SELECT 
        COUNT(*) as tournaments_participated,
        COUNT(*) FILTER (WHERE is_winner = true) as tournaments_won,
        COALESCE(SUM(total_matches), 0) as matches_played,
        COALESCE(SUM(wins), 0) as matches_won,
        CASE 
            WHEN COALESCE(SUM(total_matches), 0) > 0 
            THEN (COALESCE(SUM(wins), 0) * 100.0 / COALESCE(SUM(total_matches), 0))
            ELSE 0 
        END as winrate,
        (SELECT COUNT(*) FROM friends WHERE user_id = user_id_param AND status = 'accepted') as friends_count
    INTO user_stats
    FROM user_tournament_stats 
    WHERE user_id = user_id_param;

    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
    FOR achievement_record IN 
        SELECT a.* FROM achievements a 
        WHERE a.is_active = true 
        AND a.id NOT IN (
            SELECT achievement_id 
            FROM user_achievements 
            WHERE user_id = user_id_param
        )
    LOOP
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        CASE achievement_record.condition_type
            WHEN 'tournaments_participated' THEN
                IF user_stats.tournaments_participated >= achievement_record.condition_value THEN
                    INSERT INTO user_achievements (user_id, achievement_id) 
                    VALUES (user_id_param, achievement_record.id);
                    unlocked_achievement_id := achievement_record.id;
                    achievement_title := achievement_record.title;
                    RETURN NEXT;
                END IF;
            WHEN 'tournaments_won' THEN
                IF user_stats.tournaments_won >= achievement_record.condition_value THEN
                    INSERT INTO user_achievements (user_id, achievement_id) 
                    VALUES (user_id_param, achievement_record.id);
                    unlocked_achievement_id := achievement_record.id;
                    achievement_title := achievement_record.title;
                    RETURN NEXT;
                END IF;
            WHEN 'matches_played' THEN
                IF user_stats.matches_played >= achievement_record.condition_value THEN
                    INSERT INTO user_achievements (user_id, achievement_id) 
                    VALUES (user_id_param, achievement_record.id);
                    unlocked_achievement_id := achievement_record.id;
                    achievement_title := achievement_record.title;
                    RETURN NEXT;
                END IF;
            WHEN 'matches_won' THEN
                IF user_stats.matches_won >= achievement_record.condition_value THEN
                    INSERT INTO user_achievements (user_id, achievement_id) 
                    VALUES (user_id_param, achievement_record.id);
                    unlocked_achievement_id := achievement_record.id;
                    achievement_title := achievement_record.title;
                    RETURN NEXT;
                END IF;
            WHEN 'friends_count' THEN
                IF user_stats.friends_count >= achievement_record.condition_value THEN
                    INSERT INTO user_achievements (user_id, achievement_id) 
                    VALUES (user_id_param, achievement_record.id);
                    unlocked_achievement_id := achievement_record.id;
                    achievement_title := achievement_record.title;
                    RETURN NEXT;
                END IF;
            WHEN 'winrate_threshold' THEN
                IF user_stats.winrate >= achievement_record.condition_value 
                   AND user_stats.matches_played >= 20 THEN
                    INSERT INTO user_achievements (user_id, achievement_id) 
                    VALUES (user_id_param, achievement_record.id);
                    unlocked_achievement_id := achievement_record.id;
                    achievement_title := achievement_record.title;
                    RETURN NEXT;
                END IF;
        END CASE;
    END LOOP;
END;
$$ LANGUAGE plpgsql;

-- ========================================
-- 6. –ü–†–ï–î–°–¢–ê–í–õ–ï–ù–ò–ï –õ–ò–î–ï–†–ë–û–†–î–û–í
-- ========================================

CREATE OR REPLACE VIEW v4_leaderboard AS
SELECT 
    u.id as user_id,
    u.username,
    u.avatar_url,
    COALESCE(SUM(uts.total_matches), 0) as total_matches,
    COALESCE(SUM(uts.wins), 0) as total_wins,
    CASE 
        WHEN COALESCE(SUM(uts.total_matches), 0) > 0 
        THEN ROUND((COALESCE(SUM(uts.wins), 0) * 100.0 / COALESCE(SUM(uts.total_matches), 0)), 1)
        ELSE 0 
    END as winrate,
    COUNT(*) FILTER (WHERE uts.is_winner = true) as tournaments_won,
    COUNT(ua.id) as achievements_count,
    COALESCE(SUM(a.points), 0) as total_achievement_points,
    ROW_NUMBER() OVER (ORDER BY 
        COUNT(*) FILTER (WHERE uts.is_winner = true) DESC,
        COALESCE(SUM(uts.wins), 0) DESC,
        COALESCE(SUM(uts.total_matches), 0) DESC
    ) as rank
FROM users u
LEFT JOIN user_tournament_stats uts ON u.id = uts.user_id
LEFT JOIN user_achievements ua ON u.id = ua.user_id
LEFT JOIN achievements a ON ua.achievement_id = a.id
WHERE u.id > 1 -- –ò—Å–∫–ª—é—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
GROUP BY u.id, u.username, u.avatar_url
HAVING COALESCE(SUM(uts.total_matches), 0) > 0 -- –¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –º–∞—Ç—á–∞–º–∏
ORDER BY rank;

-- ========================================
-- 7. –ë–ê–ó–û–í–´–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø (18 –®–¢–£–ö)
-- ========================================

INSERT INTO achievements (title, description, icon, category, rarity, points, condition_type, condition_value) VALUES
-- –¢—É—Ä–Ω–∏—Ä–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
('–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏', '–ü—Ä–∏–Ω—è–ª —É—á–∞—Å—Ç–∏–µ –≤ –ø–µ—Ä–≤–æ–º —Ç—É—Ä–Ω–∏—Ä–µ', 'üéØ', 'tournaments', 'common', 10, 'tournaments_participated', 1),
('–¢—É—Ä–Ω–∏—Ä–Ω—ã–π –±–æ–µ—Ü', '–ü—Ä–∏–Ω—è–ª —É—á–∞—Å—Ç–∏–µ –≤ 5 —Ç—É—Ä–Ω–∏—Ä–∞—Ö', '‚öîÔ∏è', 'tournaments', 'rare', 25, 'tournaments_participated', 5),
('–¢—É—Ä–Ω–∏—Ä–Ω—ã–π –≤–µ—Ç–µ—Ä–∞–Ω', '–ü—Ä–∏–Ω—è–ª —É—á–∞—Å—Ç–∏–µ –≤ 25 —Ç—É—Ä–Ω–∏—Ä–∞—Ö', 'üõ°Ô∏è', 'tournaments', 'epic', 50, 'tournaments_participated', 25),
('–ü–µ—Ä–≤–∞—è –ø–æ–±–µ–¥–∞', '–í—ã–∏–≥—Ä–∞–ª –ø–µ—Ä–≤—ã–π —Ç—É—Ä–Ω–∏—Ä', 'üëë', 'tournaments', 'rare', 50, 'tournaments_won', 1),
('–ß–µ–º–ø–∏–æ–Ω', '–í—ã–∏–≥—Ä–∞–ª 5 —Ç—É—Ä–Ω–∏—Ä–æ–≤', 'üèÜ', 'tournaments', 'legendary', 100, 'tournaments_won', 5),

-- –ò–≥—Ä–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
('–î–µ–±—é—Ç–∞–Ω—Ç', '–°—ã–≥—Ä–∞–ª –ø–µ—Ä–≤—ã–π –º–∞—Ç—á', 'üéÆ', 'games', 'common', 5, 'matches_played', 1),
('–ê–∫—Ç–∏–≤–Ω—ã–π –∏–≥—Ä–æ–∫', '–°—ã–≥—Ä–∞–ª 50 –º–∞—Ç—á–µ–π', 'üéØ', 'games', 'rare', 30, 'matches_played', 50),
('–í–µ—Ç–µ—Ä–∞–Ω', '–°—ã–≥—Ä–∞–ª 200 –º–∞—Ç—á–µ–π', '‚≠ê', 'games', 'epic', 75, 'matches_played', 200),
('–ü–µ—Ä–≤–∞—è –ø–æ–±–µ–¥–∞ –≤ –º–∞—Ç—á–µ', '–í—ã–∏–≥—Ä–∞–ª –ø–µ—Ä–≤—ã–π –º–∞—Ç—á', '‚ú®', 'games', 'common', 15, 'matches_won', 1),
('–ú–∞—Å—Ç–µ—Ä –ø–æ–±–µ–¥', '–í—ã–∏–≥—Ä–∞–ª 100 –º–∞—Ç—á–µ–π', 'üî•', 'games', 'legendary', 150, 'matches_won', 100),

-- –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
('–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π', '–î–æ–±–∞–≤–∏–ª –ø–µ—Ä–≤–æ–≥–æ –¥—Ä—É–≥–∞', 'üë•', 'social', 'common', 10, 'friends_count', 1),
('–ü–æ–ø—É–ª—è—Ä–Ω—ã–π', '–ò–º–µ–µ—Ç 10 –¥—Ä—É–∑–µ–π', 'ü§ù', 'social', 'rare', 25, 'friends_count', 10),
('–ó–≤–µ–∑–¥–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞', '–ò–º–µ–µ—Ç 50 –¥—Ä—É–∑–µ–π', 'üåü', 'social', 'epic', 75, 'friends_count', 50),

-- –°–µ—Ä–∏–π–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
('–£–¥–∞—á–Ω–∞—è —Å–µ—Ä–∏—è', '–í—ã–∏–≥—Ä–∞–ª 3 –º–∞—Ç—á–∞ –ø–æ–¥—Ä—è–¥', 'üìà', 'streaks', 'rare', 30, 'win_streak', 3),
('–î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', '–í—ã–∏–≥—Ä–∞–ª 10 –º–∞—Ç—á–µ–π –ø–æ–¥—Ä—è–¥', 'üí™', 'streaks', 'legendary', 100, 'win_streak', 10),
('–ù–µ–ø–æ–±–µ–¥–∏–º—ã–π', '–í—ã–∏–≥—Ä–∞–ª 25 –º–∞—Ç—á–µ–π –ø–æ–¥—Ä—è–¥', 'üëë', 'streaks', 'mythical', 250, 'win_streak', 25),

-- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
('–°–Ω–∞–π–ø–µ—Ä', '–î–æ—Å—Ç–∏–≥ 80% –≤–∏–Ω—Ä–µ–π—Ç–∞ (–º–∏–Ω–∏–º—É–º 20 –∏–≥—Ä)', 'üéØ', 'performance', 'epic', 100, 'winrate_threshold', 80),
('–õ–µ–≥–µ–Ω–¥–∞', '–î–æ—Å—Ç–∏–≥ 90% –≤–∏–Ω—Ä–µ–π—Ç–∞ (–º–∏–Ω–∏–º—É–º 50 –∏–≥—Ä)', '‚ö°', 'performance', 'mythical', 200, 'winrate_threshold', 90)

ON CONFLICT (title) DO NOTHING;

-- ========================================
-- 8. –§–ò–ù–ê–õ–¨–ù–´–ï –°–û–û–ë–©–ï–ù–ò–Ø
-- ========================================

DO $$
DECLARE
    achievement_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO achievement_count FROM achievements;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üéâ ===============================================';
    RAISE NOTICE '‚úÖ V4 ULTIMATE: –ù–ï–î–û–°–¢–ê–Æ–©–ò–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –î–û–ë–ê–í–õ–ï–ù–´!';
    RAISE NOTICE 'üéâ ===============================================';
    RAISE NOTICE '';
    RAISE NOTICE 'üìä –°–æ–∑–¥–∞–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: %', achievement_count;
    RAISE NOTICE 'üèÜ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ';
    RAISE NOTICE 'üë• –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏ friends –∏ user_tournament_stats';
    RAISE NOTICE 'üìà –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ v4_leaderboard —Å–æ–∑–¥–∞–Ω–æ';
    RAISE NOTICE '‚ö° –§—É–Ω–∫—Ü–∏—è check_achievements() –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é';
    RAISE NOTICE '';
    RAISE NOTICE 'üöÄ V4 ULTIMATE –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!';
    RAISE NOTICE 'üì± –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å frontend —Å —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–º –¥–∞—à–±–æ—Ä–¥–æ–º';
    RAISE NOTICE '';
END $$; 