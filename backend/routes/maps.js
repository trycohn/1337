// backend/routes/maps.js
const express = require('express');
const router = express.Router();
const pool = require('../db');
const { authenticateToken } = require('../middleware/auth');

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–∞—Ä—Ç —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∏–≥—Ä–µ
router.get('/', async (req, res) => {
    try {
        const { game } = req.query;
        
        let query = 'SELECT * FROM maps';
        let params = [];
        
        if (game) {
            query += ' WHERE game = $1';
            params.push(game);
        }
        
        query += ' ORDER BY game, display_name, name';
        
        const result = await pool.query(query, params);
        
        console.log(`üîç –ü–æ–ª—É—á–µ–Ω–æ ${result.rows.length} –∫–∞—Ä—Ç${game ? ` –¥–ª—è –∏–≥—Ä—ã ${game}` : ''}`);
        res.json(result.rows);
    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞—Ä—Ç:', err);
        res.status(500).json({ error: err.message });
    }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ä—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∏–≥—Ä—ã (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç)
router.get('/game/:game', async (req, res) => {
    try {
        const { game } = req.params;
        
        const result = await pool.query(
            'SELECT * FROM maps WHERE game = $1 ORDER BY display_name, name',
            [game]
        );
        
        console.log(`üîç –ü–æ–ª—É—á–µ–Ω–æ ${result.rows.length} –∫–∞—Ä—Ç –¥–ª—è –∏–≥—Ä—ã ${game}`);
        res.json(result.rows);
    } catch (err) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç –¥–ª—è –∏–≥—Ä—ã ${req.params.game}:`, err);
        res.status(500).json({ error: err.message });
    }
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
router.post('/', authenticateToken, async (req, res) => {
    try {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ (–∞–¥–º–∏–Ω)
        if (!req.user.is_admin) {
            return res.status(403).json({ error: '–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –∫–∞—Ä—Ç—ã' });
        }
        
        const { name, game, display_name, image_url } = req.body;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if (!name || !game) {
            return res.status(400).json({ error: '–ü–æ–ª—è name –∏ game –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
        }
        
        const result = await pool.query(
            'INSERT INTO maps (name, game, display_name, image_url) VALUES ($1, $2, $3, $4) RETURNING *',
            [name, game, display_name || name, image_url]
        );
        
        console.log(`‚úÖ –ö–∞—Ä—Ç–∞ "${name}" –¥–ª—è –∏–≥—Ä—ã "${game}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞`);
        res.status(201).json(result.rows[0]);
    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã:', err);
        res.status(500).json({ error: err.message });
    }
});

module.exports = router; 