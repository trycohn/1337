// backend/routes/tournament/index.js
//
// üèóÔ∏è –ú–û–î–£–õ–¨–ù–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –¢–£–†–ù–ò–†–û–í v2.0
// ===================================
// 
// –≠—Ç–æ—Ç —Ñ–∞–π–ª –∑–∞–º–µ–Ω—è–µ—Ç –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π —Ñ–∞–π–ª tournaments.js –Ω–∞ –º–æ–¥—É–ª—å–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
// –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º Clean Architecture –∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏.
//
// üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–æ–¥—É–ª–µ–π:
// ‚îú‚îÄ‚îÄ üéØ controllers/tournament/ - HTTP-—Å–ª–æ–π (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤)
// ‚îú‚îÄ‚îÄ üîß services/tournament/   - –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
// ‚îú‚îÄ‚îÄ üóÑÔ∏è repositories/tournament/ - –°–ª–æ–π –¥–∞–Ω–Ω—ã—Ö (—Ä–∞–±–æ—Ç–∞ —Å –ë–î)
// ‚îú‚îÄ‚îÄ ‚úÖ validators/tournament/ - –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
// ‚îî‚îÄ‚îÄ üõ†Ô∏è utils/tournament/      - –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã
//
// ‚ú® –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã:
// ‚Ä¢ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –º–µ–∂–¥—É —Å–ª–æ—è–º–∏
// ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å –∫–æ–¥–∞
// ‚Ä¢ –õ–µ–≥–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
// ‚Ä¢ –°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ SOLID
// ‚Ä¢ –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
// ‚Ä¢ –ï–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
//
// üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è: –°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª tournaments.js —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ tournaments.js.legacy.backup
//

const express = require('express');
const TournamentController = require('../../controllers/tournament/TournamentController');
const ParticipantController = require('../../controllers/tournament/ParticipantController');
const MatchController = require('../../controllers/tournament/MatchController');
const AdminController = require('../../controllers/tournament/AdminController');
const ChatController = require('../../controllers/tournament/ChatController');
const MixTeamController = require('../../controllers/tournament/MixTeamController');
const { authenticateToken } = require('../../middleware/auth');

const router = express.Router();

// üìã **–û–°–ù–û–í–ù–´–ï –¢–£–†–ù–ò–†–ù–´–ï –û–ü–ï–†–ê–¶–ò–ò**

// üîß –í–ê–ñ–ù–û: –°–ü–ï–¶–ò–§–ò–ß–ù–´–ï –ú–ê–†–®–†–£–¢–´ –î–û–õ–ñ–ù–´ –ë–´–¢–¨ –ü–ï–†–ï–î –û–ë–©–ò–ú–ò!
// –≠—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫—É –∫–æ–≥–¥–∞ /games –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–ª—Å—è –∫–∞–∫ /:id

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä (–î–û–õ–ñ–ù–û –ë–´–¢–¨ –ü–ï–†–ï–î /:id!)
router.get('/games/list', TournamentController.getGames);

// üîß –ê–õ–ò–ê–° –î–õ–Ø –û–ë–†–ê–¢–ù–û–ô –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò: —Å—Ç–∞—Ä—ã–π –ø—É—Ç—å /games
router.get('/games', TournamentController.getGames);

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤
router.get('/', TournamentController.getAllTournaments);

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞ –ø–æ ID (–ü–û–°–õ–ï —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤!)
router.get('/:id', TournamentController.getTournamentById);

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞ (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
router.post('/', authenticateToken, TournamentController.createTournament);

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞ (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
router.put('/:id', authenticateToken, TournamentController.updateTournament);

// –£–¥–∞–ª–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞ (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
router.delete('/:id', authenticateToken, TournamentController.deleteTournament);

// –ù–∞—á–∞–ª–æ —Ç—É—Ä–Ω–∏—Ä–∞ (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
router.post('/:id/start', authenticateToken, TournamentController.startTournament);

// –°–±—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–µ–π
router.post('/:id/reset-match-results', authenticateToken, TournamentController.resetMatchResults);

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ —Ç—É—Ä–Ω–∏—Ä–∞
router.get('/:id/teams', TournamentController.getTeams);

// üìù **–û–ë–ù–û–í–õ–ï–ù–ò–Ø –°–û–î–ï–†–ñ–ò–ú–û–ì–û –¢–£–†–ù–ò–†–ê**

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
router.put('/:id/description', authenticateToken, TournamentController.updateDescription);

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
router.put('/:id/full-description', authenticateToken, TournamentController.updateFullDescription);

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞
router.put('/:id/rules', authenticateToken, TournamentController.updateRules);

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–æ–≤–æ–≥–æ —Ñ–æ–Ω–¥–∞
router.put('/:id/prize-pool', authenticateToken, TournamentController.updatePrizePool);

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
router.put('/:id/team-size', authenticateToken, TournamentController.updateTeamSize);

// üîÑ **–£–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ò–ö–° –ö–û–ú–ê–ù–î–ê–ú–ò**

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏–∫—Å –∫–æ–º–∞–Ω–¥ (–æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥)
router.post('/:id/mix-generate-teams', authenticateToken, MixTeamController.formTeams);

// –ü–µ—Ä–µ—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–∫—Å –∫–æ–º–∞–Ω–¥ (–æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥)
router.post('/:id/mix-regenerate-teams', authenticateToken, MixTeamController.regenerateTeams);

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –º–∏–∫—Å —Ç—É—Ä–Ω–∏—Ä–æ–≤ (–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ —Å—Ç–∞—Ç—É—Å—É –≤ –∫–æ–º–∞–Ω–¥–∞—Ö)
router.get('/:id/mix-original-participants', MixTeamController.getOriginalParticipants);

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –º–∏–∫—Å —Ç—É—Ä–Ω–∏—Ä–æ–≤
router.patch('/:id/mix-team-size', authenticateToken, MixTeamController.updateTeamSize);

// –û—á–∏—Å—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –º–∏–∫—Å —Ç—É—Ä–Ω–∏—Ä–∞
router.post('/:id/mix-clear-teams', authenticateToken, MixTeamController.clearMixTeams);

// üÜï –ê–õ–ò–ê–°–´ –î–õ–Ø –û–ë–†–ê–¢–ù–û–ô –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º
router.post('/:id/form-teams', authenticateToken, MixTeamController.formTeamsAlias);  // –ê–ª–∏–∞—Å –¥–ª—è mix-generate-teams
router.get('/:id/original-participants', MixTeamController.getOriginalParticipantsAlias);  // –ê–ª–∏–∞—Å –¥–ª—è mix-original-participants

// üÜï –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ê–õ–ò–ê–°–´ –î–õ–Ø –°–¢–ê–†–´–• –ú–ï–¢–û–î–û–í
router.post('/:id/generate-teams', authenticateToken, MixTeamController.generateMixTeams);  // –°—Ç–∞—Ä—ã–π –∞–ª–∏–∞—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏

// üë• **–£–ü–†–ê–í–õ–ï–ù–ò–ï –£–ß–ê–°–¢–ù–ò–ö–ê–ú–ò**

// –£—á–∞—Å—Ç–∏–µ –≤ —Ç—É—Ä–Ω–∏—Ä–µ
router.post('/:id/participate', authenticateToken, ParticipantController.participateInTournament);

// –û—Ç–º–µ–Ω–∞ —É—á–∞—Å—Ç–∏—è
router.delete('/:id/participate', authenticateToken, ParticipantController.withdrawFromTournament);

// –ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ç—É—Ä–Ω–∏—Ä–∞
router.get('/:id/participants', TournamentController.getOriginalParticipants);

// –£–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
router.delete('/:id/participants/:participantId', authenticateToken, ParticipantController.removeParticipant);

// ü•ä **–£–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ê–¢–ß–ê–ú–ò –ò –°–ï–¢–ö–ê–ú–ò**

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Å–µ—Ç–∫–∏
router.post('/:id/generate-bracket', authenticateToken, MatchController.generateBracket);

// –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Å–µ—Ç–∫–∏
router.post('/:id/regenerate-bracket', authenticateToken, MatchController.regenerateBracket);

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –º–∞—Ç—á–∞ –≤ —Ä–∞–º–∫–∞—Ö —Ç—É—Ä–Ω–∏—Ä–∞
router.put('/:id/matches/:matchId/result', authenticateToken, MatchController.updateMatchResult);

// üÜï –ü—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –º–∞—Ç—á–∞ –ø–æ ID –º–∞—Ç—á–∞ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º)
router.post('/matches/:matchId/result', authenticateToken, MatchController.updateSpecificMatchResult);

// –ü–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Ç—á–µ–π —Ç—É—Ä–Ω–∏—Ä–∞
router.get('/:id/matches', MatchController.getMatches);

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Ç—á–∞
router.get('/matches/:matchId', MatchController.getMatchById);

// üßπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –º–∞—Ç—á–µ–π
router.get('/:id/matches/check-duplicates', authenticateToken, MatchController.checkDuplicateMatches);

// üßπ –û—á–∏—Å—Ç–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –º–∞—Ç—á–µ–π
router.post('/:id/matches/cleanup-duplicates', authenticateToken, MatchController.cleanupDuplicateMatches);

// üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
router.get('/:id/matches/check-database-locks', authenticateToken, MatchController.checkDatabaseLocks);

// üõ°Ô∏è **–ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ï –§–£–ù–ö–¶–ò–ò**

// –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
router.post('/:id/request-admin', authenticateToken, AdminController.requestAdmin);

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
router.get('/:id/admin-request-status', authenticateToken, AdminController.getAdminRequestStatus);

// –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
router.post('/:id/respond-admin-request', authenticateToken, AdminController.respondToAdminRequest);

// –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
router.post('/:id/invite-admin', authenticateToken, AdminController.inviteAdmin);

// –ü—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
router.post('/:id/accept-admin-invitation', authenticateToken, AdminController.acceptAdminInvitation);

// –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
router.post('/:id/decline-admin-invitation', authenticateToken, AdminController.declineAdminInvitation);

// –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
router.delete('/:id/admins/:userId', authenticateToken, AdminController.removeAdmin);

// –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π (–≥–ª–æ–±–∞–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è)
router.post('/admin-invitations/cleanup-expired', authenticateToken, AdminController.cleanupExpiredInvitations);

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π (–≥–ª–æ–±–∞–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è)
router.get('/admin-invitations/stats', authenticateToken, AdminController.getInvitationStats);

// üí¨ **–ß–ê–¢ –¢–£–†–ù–ò–†–ê**

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞
router.get('/:id/chat/messages', authenticateToken, ChatController.getChatMessages);

// –ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
router.get('/:id/chat/participants', authenticateToken, ChatController.getChatParticipants);

// üõ†Ô∏è **–û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö –¢–£–†–ù–ò–†–û–í**
const { tournamentErrorHandler } = require('../../middleware/tournament/errorHandler');
router.use(tournamentErrorHandler);

module.exports = router; 