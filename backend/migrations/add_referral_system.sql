-- ‚ú® –ú–ò–ì–†–ê–¶–ò–Ø: –°–∏—Å—Ç–µ–º–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π v1.0.0
-- –î–∞—Ç–∞: 2025-01-25
-- –ê–≤—Ç–æ—Ä: 1337 Community Development Team
-- –¶–µ–ª—å: –î–æ–±–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π –¥–ª—è –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏

-- üë• –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
ALTER TABLE users ADD COLUMN IF NOT EXISTS invited_by INTEGER REFERENCES users(id) ON DELETE SET NULL;
ALTER TABLE users ADD COLUMN IF NOT EXISTS referral_code VARCHAR(20) UNIQUE;
ALTER TABLE users ADD COLUMN IF NOT EXISTS invited_at TIMESTAMP;

-- üìä –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
CREATE TABLE IF NOT EXISTS referral_links (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    tournament_id INTEGER NOT NULL REFERENCES tournaments(id) ON DELETE CASCADE,
    referral_code VARCHAR(50) NOT NULL UNIQUE,
    expires_at TIMESTAMP NOT NULL DEFAULT (NOW() + INTERVAL '7 days'),
    uses_count INTEGER DEFAULT 0,
    max_uses INTEGER DEFAULT 32,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- üèÜ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
CREATE TABLE IF NOT EXISTS referral_registrations (
    id SERIAL PRIMARY KEY,
    referrer_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    referred_user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    tournament_id INTEGER NOT NULL REFERENCES tournaments(id) ON DELETE CASCADE,
    referral_link_id INTEGER NOT NULL REFERENCES referral_links(id) ON DELETE CASCADE,
    registered_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    participated_in_tournament BOOLEAN DEFAULT FALSE,
    UNIQUE(referred_user_id, tournament_id) -- –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω –≤ —Ç—É—Ä–Ω–∏—Ä —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
);

-- üìà –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX IF NOT EXISTS idx_users_invited_by ON users(invited_by);
CREATE INDEX IF NOT EXISTS idx_users_referral_code ON users(referral_code);
CREATE INDEX IF NOT EXISTS idx_referral_links_user_id ON referral_links(user_id);
CREATE INDEX IF NOT EXISTS idx_referral_links_tournament_id ON referral_links(tournament_id);
CREATE INDEX IF NOT EXISTS idx_referral_links_referral_code ON referral_links(referral_code);
CREATE INDEX IF NOT EXISTS idx_referral_links_expires_at ON referral_links(expires_at);
CREATE INDEX IF NOT EXISTS idx_referral_registrations_referrer_id ON referral_registrations(referrer_id);
CREATE INDEX IF NOT EXISTS idx_referral_registrations_referred_user_id ON referral_registrations(referred_user_id);
CREATE INDEX IF NOT EXISTS idx_referral_registrations_tournament_id ON referral_registrations(tournament_id);

-- üîß –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
CREATE OR REPLACE FUNCTION generate_referral_code() RETURNS VARCHAR(20) AS $$
DECLARE
    code VARCHAR(20);
    exists_check INTEGER;
BEGIN
    LOOP
        -- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –∏–∑ 8 —Å–∏–º–≤–æ–ª–æ–≤ (–±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã)
        code := upper(substring(md5(random()::text || clock_timestamp()::text) from 1 for 8));
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
        SELECT COUNT(*) INTO exists_check FROM users WHERE referral_code = code;
        SELECT COUNT(*) INTO exists_check FROM referral_links WHERE referral_code = code;
        
        EXIT WHEN exists_check = 0;
    END LOOP;
    
    RETURN code;
END;
$$ LANGUAGE plpgsql;

-- üéØ –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
CREATE OR REPLACE FUNCTION auto_generate_user_referral_code()
RETURNS TRIGGER AS $$
BEGIN
    -- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    IF NEW.referral_code IS NULL THEN
        NEW.referral_code := generate_referral_code();
    END IF;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
DROP TRIGGER IF EXISTS trigger_auto_generate_user_referral_code ON users;
CREATE TRIGGER trigger_auto_generate_user_referral_code
    BEFORE INSERT ON users
    FOR EACH ROW
    EXECUTE FUNCTION auto_generate_user_referral_code();

-- üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–¥—ã)
UPDATE users 
SET referral_code = generate_referral_code() 
WHERE referral_code IS NULL;

-- üìä –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CREATE OR REPLACE FUNCTION get_user_referral_stats(user_id_param INTEGER)
RETURNS TABLE(
    total_invitations INTEGER,
    successful_registrations INTEGER,
    tournament_participants INTEGER,
    active_links INTEGER
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        COALESCE((SELECT COUNT(*) FROM referral_links WHERE user_id = user_id_param), 0)::INTEGER as total_invitations,
        COALESCE((SELECT COUNT(*) FROM referral_registrations WHERE referrer_id = user_id_param), 0)::INTEGER as successful_registrations,
        COALESCE((SELECT COUNT(*) FROM referral_registrations WHERE referrer_id = user_id_param AND participated_in_tournament = TRUE), 0)::INTEGER as tournament_participants,
        COALESCE((SELECT COUNT(*) FROM referral_links WHERE user_id = user_id_param AND expires_at > NOW()), 0)::INTEGER as active_links;
END;
$$ LANGUAGE plpgsql;

-- üßπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
CREATE OR REPLACE FUNCTION cleanup_expired_referral_links()
RETURNS INTEGER AS $$
DECLARE
    deleted_count INTEGER;
BEGIN
    DELETE FROM referral_links WHERE expires_at < NOW();
    GET DIAGNOSTICS deleted_count = ROW_COUNT;
    
    RETURN deleted_count;
END;
$$ LANGUAGE plpgsql;

-- üìù –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
COMMENT ON COLUMN users.invited_by IS 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
COMMENT ON COLUMN users.referral_code IS '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
COMMENT ON COLUMN users.invited_at IS '–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';

COMMENT ON TABLE referral_links IS '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä—ã';
COMMENT ON COLUMN referral_links.referral_code IS '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏';
COMMENT ON COLUMN referral_links.expires_at IS '–î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏';
COMMENT ON COLUMN referral_links.uses_count IS '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π —Å—Å—ã–ª–∫–∏';
COMMENT ON COLUMN referral_links.max_uses IS '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π';

COMMENT ON TABLE referral_registrations IS '–£—Å–ø–µ—à–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º —Å—Å—ã–ª–∫–∞–º';
COMMENT ON COLUMN referral_registrations.participated_in_tournament IS '–ü—Ä–∏–Ω—è–ª –ª–∏ —É—á–∞—Å—Ç–∏–µ –≤ —Ç—É—Ä–Ω–∏—Ä–µ';

-- ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏
DO $$
BEGIN
    RAISE NOTICE '‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π v1.0.0 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!';
    RAISE NOTICE 'üìä –§—É–Ω–∫—Ü–∏–∏: generate_referral_code(), get_user_referral_stats(), cleanup_expired_referral_links()';
    RAISE NOTICE 'üéØ –¢—Ä–∏–≥–≥–µ—Ä: auto_generate_user_referral_code –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–æ–≤';
END
$$; 