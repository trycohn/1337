-- ============================================================================
-- –ú–ò–ì–†–ê–¶–ò–Ø: –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å MatchZy –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
-- –î–∞—Ç–∞: 2 –æ–∫—Ç—è–±—Ä—è 2025
-- –û–ø–∏—Å–∞–Ω–∏–µ: –¢–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ MatchZy
-- –í–µ—Ä—Å–∏—è: 2.0 (—Å –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–æ–π —Ä–æ—Å—Ç–∞ –¥–æ v3.0 - AI/Heatmaps)
-- ============================================================================

-- –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Ç—á–∞ (–æ—Ç MatchZy)
CREATE TABLE IF NOT EXISTS match_stats (
  id SERIAL PRIMARY KEY,
  match_id INTEGER UNIQUE REFERENCES matches(id) ON DELETE CASCADE,
  
  -- –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –º–∞—Ç—á–∞
  map_name VARCHAR(50),
  rounds_played INTEGER DEFAULT 0,
  duration_seconds INTEGER DEFAULT 0,
  
  -- –ö–æ–º–∞–Ω–¥—ã
  team1_score INTEGER,
  team2_score INTEGER,
  team1_name VARCHAR(100),
  team2_name VARCHAR(100),
  
  -- Demo —Ñ–∞–π–ª
  demo_url VARCHAR(500),
  demo_file_path VARCHAR(500),
  demo_size_bytes BIGINT,
  
  -- Raw JSON –æ—Ç MatchZy (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞)
  raw_matchzy_data JSONB,
  
  -- –ú–µ—Ç–∞
  created_at TIMESTAMP DEFAULT NOW(),
  processed BOOLEAN DEFAULT FALSE,
  processed_at TIMESTAMP
);

CREATE INDEX idx_match_stats_match ON match_stats(match_id);
CREATE INDEX idx_match_stats_map ON match_stats(map_name);
CREATE INDEX idx_match_stats_processed ON match_stats(processed);

COMMENT ON TABLE match_stats IS '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Ç—á–∞ –æ—Ç MatchZy';
COMMENT ON COLUMN match_stats.raw_matchzy_data IS '–ü–æ–ª–Ω—ã–π JSON –æ—Ç MatchZy –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è';

-- ============================================================================
-- –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ –≤ –º–∞—Ç—á–µ
-- ============================================================================

CREATE TABLE IF NOT EXISTS player_match_stats (
  id SERIAL PRIMARY KEY,
  match_id INTEGER REFERENCES matches(id) ON DELETE CASCADE,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  steam_id VARCHAR(17) NOT NULL,
  team_id INTEGER REFERENCES tournament_teams(id) ON DELETE SET NULL,
  
  -- –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  kills INTEGER DEFAULT 0,
  deaths INTEGER DEFAULT 0,
  assists INTEGER DEFAULT 0,
  headshots INTEGER DEFAULT 0,
  damage_dealt INTEGER DEFAULT 0,
  rounds_played INTEGER DEFAULT 0,
  
  -- –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  adr DECIMAL(6,2) DEFAULT 0,                    -- Average Damage per Round
  kast DECIMAL(5,2) DEFAULT 0,                   -- Kill/Assist/Survive/Trade %
  rating DECIMAL(4,2) DEFAULT 0,                 -- HLTV 2.0 rating
  impact DECIMAL(4,2) DEFAULT 0,                 -- Impact rating
  hs_percentage DECIMAL(5,2) DEFAULT 0,          -- Headshot %
  
  -- Clutches (1vX situations)
  clutch_1v1_won INTEGER DEFAULT 0,
  clutch_1v1_total INTEGER DEFAULT 0,
  clutch_1v2_won INTEGER DEFAULT 0,
  clutch_1v2_total INTEGER DEFAULT 0,
  clutch_1v3_won INTEGER DEFAULT 0,
  clutch_1v3_total INTEGER DEFAULT 0,
  clutch_1v4_won INTEGER DEFAULT 0,
  clutch_1v4_total INTEGER DEFAULT 0,
  clutch_1v5_won INTEGER DEFAULT 0,
  clutch_1v5_total INTEGER DEFAULT 0,
  
  -- Utility
  flash_assists INTEGER DEFAULT 0,
  utility_damage INTEGER DEFAULT 0,
  enemies_flashed INTEGER DEFAULT 0,
  teammates_flashed INTEGER DEFAULT 0,          -- Friendly fire —Ñ–ª–µ—à–∫–∏
  
  -- Entry fragging
  entry_kills INTEGER DEFAULT 0,                -- –ü–µ—Ä–≤—ã–π –∫–∏–ª–ª –≤ —Ä–∞—É–Ω–¥–µ
  entry_deaths INTEGER DEFAULT 0,               -- –ü–µ—Ä–≤–∞—è —Å–º–µ—Ä—Ç—å –≤ —Ä–∞—É–Ω–¥–µ
  opening_kills INTEGER DEFAULT 0,              -- Opening duels –≤—ã–∏–≥—Ä–∞–Ω–æ
  opening_deaths INTEGER DEFAULT 0,             -- Opening duels –ø—Ä–æ–∏–≥—Ä–∞–Ω–æ
  trade_kills INTEGER DEFAULT 0,                -- –ú–µ—Å—Ç—å –∑–∞ —Ç–∏–º–º–µ–π—Ç–∞
  
  -- MVP –∏ –¥—Ä—É–≥–æ–µ
  mvp INTEGER DEFAULT 0,
  score INTEGER DEFAULT 0,                      -- In-game score
  
  -- Weapon stats (JSONB –¥–ª—è –≥–∏–±–∫–æ—Å—Ç–∏)
  weapon_stats JSONB DEFAULT '{}',              -- {"ak47": {"kills": 12, "hs": 9, ...}, ...}
  
  -- Economy (–¥–ª—è –í–∞—Ä–∏–∞–Ω—Ç–∞ 3)
  money_spent INTEGER DEFAULT 0,
  equipment_value INTEGER DEFAULT 0,
  
  -- üÜï –î–ª—è –í–∞—Ä–∏–∞–Ω—Ç–∞ 3 (–ø–æ–∫–∞ NULL, –∑–∞–ø–æ–ª–Ω–∏–º –ø–æ–∑–∂–µ)
  position_data JSONB,                          -- –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è heatmaps
  round_by_round_stats JSONB,                   -- –î–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–≥–æ —Ä–∞—É–Ω–¥–∞
  
  -- –ú–µ—Ç–∞
  created_at TIMESTAMP DEFAULT NOW(),
  
  UNIQUE(match_id, user_id)
);

CREATE INDEX idx_player_match_stats_user ON player_match_stats(user_id);
CREATE INDEX idx_player_match_stats_match ON player_match_stats(match_id);
CREATE INDEX idx_player_match_stats_steam ON player_match_stats(steam_id);
CREATE INDEX idx_player_match_stats_rating ON player_match_stats(rating DESC);
CREATE INDEX idx_player_match_stats_kd ON player_match_stats((kills::DECIMAL / NULLIF(deaths, 1)) DESC);

COMMENT ON TABLE player_match_stats IS '–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –º–∞—Ç—á–µ –æ—Ç MatchZy';

-- ============================================================================
-- –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ (–≤—Å–µ –º–∞—Ç—á–∏)
-- ============================================================================

CREATE TABLE IF NOT EXISTS player_aggregated_stats (
  user_id INTEGER PRIMARY KEY REFERENCES users(id) ON DELETE CASCADE,
  
  -- –û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
  total_matches INTEGER DEFAULT 0,
  total_wins INTEGER DEFAULT 0,
  total_losses INTEGER DEFAULT 0,
  win_rate DECIMAL(5,2) DEFAULT 0,
  total_rounds INTEGER DEFAULT 0,
  
  -- K/D/A
  total_kills INTEGER DEFAULT 0,
  total_deaths INTEGER DEFAULT 0,
  total_assists INTEGER DEFAULT 0,
  total_headshots INTEGER DEFAULT 0,
  kd_ratio DECIMAL(4,2) DEFAULT 0,
  kda_ratio DECIMAL(4,2) DEFAULT 0,
  
  -- –°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
  avg_kills_per_match DECIMAL(5,2) DEFAULT 0,
  avg_deaths_per_match DECIMAL(5,2) DEFAULT 0,
  avg_assists_per_match DECIMAL(5,2) DEFAULT 0,
  avg_adr DECIMAL(6,2) DEFAULT 0,
  avg_kast DECIMAL(5,2) DEFAULT 0,
  avg_rating DECIMAL(4,2) DEFAULT 0,
  avg_hs_percentage DECIMAL(5,2) DEFAULT 0,
  avg_impact DECIMAL(4,2) DEFAULT 0,
  
  -- Clutches (–∞–≥—Ä–µ–≥–∞—Ü–∏—è)
  total_clutch_won INTEGER DEFAULT 0,
  total_clutch_total INTEGER DEFAULT 0,
  clutch_success_rate DECIMAL(5,2) DEFAULT 0,
  clutch_1v1_rate DECIMAL(5,2) DEFAULT 0,
  clutch_1v2_rate DECIMAL(5,2) DEFAULT 0,
  
  -- Entry fragging
  total_entry_kills INTEGER DEFAULT 0,
  total_entry_deaths INTEGER DEFAULT 0,
  entry_success_rate DECIMAL(5,2) DEFAULT 0,
  total_opening_kills INTEGER DEFAULT 0,
  total_opening_deaths INTEGER DEFAULT 0,
  opening_duel_success_rate DECIMAL(5,2) DEFAULT 0,
  
  -- Utility
  total_flash_assists INTEGER DEFAULT 0,
  total_utility_damage INTEGER DEFAULT 0,
  avg_utility_damage_per_round DECIMAL(5,2) DEFAULT 0,
  
  -- MVP
  total_mvp INTEGER DEFAULT 0,
  mvp_rate DECIMAL(5,2) DEFAULT 0,
  
  -- –ü–æ –∫–∞—Ä—Ç–∞–º (JSONB) - –¥–ª—è –í–∞—Ä–∏–∞–Ω—Ç–∞ 2
  map_stats JSONB DEFAULT '{}',
  -- –§–æ—Ä–º–∞—Ç: {"dust2": {"matches": 15, "wins": 10, "kd": 1.35, "adr": 105, ...}, ...}
  
  -- –ü–æ –æ—Ä—É–∂–∏—é (JSONB) - –¥–ª—è –í–∞—Ä–∏–∞–Ω—Ç–∞ 2
  weapon_stats JSONB DEFAULT '{}',
  -- –§–æ—Ä–º–∞—Ç: {"ak47": {"kills": 450, "headshots": 324, "hs_rate": 72, ...}, ...}
  
  -- üÜï –î–ª—è –í–∞—Ä–∏–∞–Ω—Ç–∞ 3 (–ø–æ–∫–∞ –ø—É—Å—Ç—ã–µ, –∑–∞–ø–æ–ª–Ω–∏–º –ø–æ–∑–∂–µ)
  heatmap_data JSONB,                           -- –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–ø–ª–æ–≤—ã—Ö –∫–∞—Ä—Ç
  ai_insights JSONB,                            -- AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  training_plan JSONB,                          -- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
  
  -- –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
  updated_at TIMESTAMP DEFAULT NOW(),
  last_match_at TIMESTAMP
);

CREATE INDEX idx_player_aggregated_user ON player_aggregated_stats(user_id);
CREATE INDEX idx_player_aggregated_rating ON player_aggregated_stats(avg_rating DESC);
CREATE INDEX idx_player_aggregated_kd ON player_aggregated_stats(kd_ratio DESC);
CREATE INDEX idx_player_aggregated_matches ON player_aggregated_stats(total_matches DESC);

COMMENT ON TABLE player_aggregated_stats IS '–ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ –ø–æ –≤—Å–µ–º –º–∞—Ç—á–∞–º';

-- ============================================================================
-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ –ø–æ –∫–∞—Ä—Ç–∞–º (–¥–µ—Ç–∞–ª—å–Ω–æ)
-- ============================================================================

CREATE TABLE IF NOT EXISTS player_map_stats (
  id SERIAL PRIMARY KEY,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  map_name VARCHAR(50) NOT NULL,
  
  -- –û–±—â–µ–µ
  matches_played INTEGER DEFAULT 0,
  wins INTEGER DEFAULT 0,
  losses INTEGER DEFAULT 0,
  win_rate DECIMAL(5,2) DEFAULT 0,
  rounds_played INTEGER DEFAULT 0,
  
  -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  kills INTEGER DEFAULT 0,
  deaths INTEGER DEFAULT 0,
  assists INTEGER DEFAULT 0,
  kd_ratio DECIMAL(4,2) DEFAULT 0,
  avg_adr DECIMAL(6,2) DEFAULT 0,
  avg_rating DECIMAL(4,2) DEFAULT 0,
  hs_percentage DECIMAL(5,2) DEFAULT 0,
  
  -- T/CT —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ (–¥–ª—è –í–∞—Ä–∏–∞–Ω—Ç–∞ 2)
  t_side_rounds INTEGER DEFAULT 0,
  t_side_wins INTEGER DEFAULT 0,
  t_side_kd DECIMAL(4,2) DEFAULT 0,
  ct_side_rounds INTEGER DEFAULT 0,
  ct_side_wins INTEGER DEFAULT 0,
  ct_side_kd DECIMAL(4,2) DEFAULT 0,
  
  -- –ú–µ—Ç–∞
  updated_at TIMESTAMP DEFAULT NOW(),
  
  UNIQUE(user_id, map_name)
);

CREATE INDEX idx_player_map_stats_user ON player_map_stats(user_id);
CREATE INDEX idx_player_map_stats_map ON player_map_stats(map_name);
CREATE INDEX idx_player_map_stats_winrate ON player_map_stats(win_rate DESC);

COMMENT ON TABLE player_map_stats IS '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ –ø–æ –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç–µ –æ—Ç–¥–µ–ª—å–Ω–æ';

-- ============================================================================
-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω–æ–º–∞–ª–∏–π (–¥–ª—è –∞–Ω—Ç–∏—á–∏—Ç–∞)
-- ============================================================================

CREATE TABLE IF NOT EXISTS player_stats_anomalies (
  id SERIAL PRIMARY KEY,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  match_id INTEGER REFERENCES matches(id) ON DELETE CASCADE,
  
  -- –¢–∏–ø –∞–Ω–æ–º–∞–ª–∏–∏
  anomaly_type VARCHAR(50) NOT NULL CHECK (
    anomaly_type IN (
      'high_hs_percentage',      -- >75% HS
      'sudden_improvement',      -- –†–µ–∑–∫–∏–π —Ä–æ—Å—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
      'excessive_wallbangs',     -- –ú–Ω–æ–≥–æ wallbang –∫–∏–ª–ª–æ–≤
      'low_utility_high_kills',  -- –ú–∞–ª–æ utility, –º–Ω–æ–≥–æ –∫–∏–ª–ª–æ–≤
      'perfect_spray',           -- –ò–¥–µ–∞–ª—å–Ω—ã–π spray control
      'instant_reactions',       -- –ù–µ—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∞—è —Ä–µ–∞–∫—Ü–∏—è
      'prefiring_pattern'        -- –ü–∞—Ç—Ç–µ—Ä–Ω –ø—Ä–µ—Ñ–∞–π—Ä–æ–≤
    )
  ),
  
  -- –î–∞–Ω–Ω—ã–µ –∞–Ω–æ–º–∞–ª–∏–∏
  severity VARCHAR(20) CHECK (severity IN ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')),
  value DECIMAL(10,2),                         -- –ó–Ω–∞—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∏
  expected_value DECIMAL(10,2),                -- –û–∂–∏–¥–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  deviation_percentage DECIMAL(5,2),           -- –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –≤ %
  
  -- –î–µ—Ç–∞–ª–∏
  description TEXT,
  evidence JSONB,                              -- –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ (—Ä–∞—É–Ω–¥—ã, timestamps)
  
  -- –°—Ç–∞—Ç—É—Å
  reviewed BOOLEAN DEFAULT FALSE,
  reviewed_by INTEGER REFERENCES users(id),
  reviewed_at TIMESTAMP,
  confirmed_cheat BOOLEAN DEFAULT FALSE,
  
  -- –ú–µ—Ç–∞
  detected_at TIMESTAMP DEFAULT NOW()
);

CREATE INDEX idx_anomalies_user ON player_stats_anomalies(user_id);
CREATE INDEX idx_anomalies_match ON player_stats_anomalies(match_id);
CREATE INDEX idx_anomalies_severity ON player_stats_anomalies(severity);
CREATE INDEX idx_anomalies_reviewed ON player_stats_anomalies(reviewed);

COMMENT ON TABLE player_stats_anomalies IS '–û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –∞–Ω–æ–º–∞–ª–∏–∏ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –¥–ª—è –∞–Ω—Ç–∏—á–∏—Ç–∞';

-- ============================================================================
-- –§–£–ù–ö–¶–ò–Ø: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–∞
-- ============================================================================

CREATE OR REPLACE FUNCTION update_player_aggregated_stats_v2(p_user_id INTEGER)
RETURNS VOID AS $$
DECLARE
  v_matches RECORD;
  v_map_stats JSONB;
  v_weapon_stats JSONB;
BEGIN
  -- 1. –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  SELECT 
    COUNT(DISTINCT pms.match_id) as total_matches,
    COUNT(DISTINCT CASE WHEN m.winner_team_id = pms.team_id THEN pms.match_id END) as wins,
    SUM(pms.rounds_played) as total_rounds,
    SUM(pms.kills) as kills,
    SUM(pms.deaths) as deaths,
    SUM(pms.assists) as assists,
    SUM(pms.headshots) as headshots,
    AVG(pms.adr) as avg_adr,
    AVG(pms.kast) as avg_kast,
    AVG(pms.rating) as avg_rating,
    AVG(pms.impact) as avg_impact,
    AVG(pms.hs_percentage) as avg_hs,
    SUM(pms.clutch_1v1_won + pms.clutch_1v2_won + pms.clutch_1v3_won + 
        pms.clutch_1v4_won + pms.clutch_1v5_won) as clutch_won,
    SUM(pms.clutch_1v1_total + pms.clutch_1v2_total + pms.clutch_1v3_total + 
        pms.clutch_1v4_total + pms.clutch_1v5_total) as clutch_total,
    SUM(pms.entry_kills) as entry_kills,
    SUM(pms.entry_deaths) as entry_deaths,
    SUM(pms.opening_kills) as opening_kills,
    SUM(pms.opening_deaths) as opening_deaths,
    SUM(pms.flash_assists) as flash_assists,
    SUM(pms.utility_damage) as utility_damage,
    SUM(pms.mvp) as mvp
  INTO v_matches
  FROM player_match_stats pms
  LEFT JOIN matches m ON m.id = pms.match_id
  WHERE pms.user_id = p_user_id;
  
  -- 2. –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞—Ä—Ç–∞–º
  SELECT jsonb_object_agg(
    map_name,
    jsonb_build_object(
      'matches', matches,
      'wins', wins,
      'kd', kd_ratio,
      'adr', avg_adr,
      'rating', avg_rating
    )
  ) INTO v_map_stats
  FROM (
    SELECT 
      ms.map_name,
      COUNT(*) as matches,
      COUNT(CASE WHEN m.winner_team_id = pms.team_id THEN 1 END) as wins,
      CASE WHEN SUM(pms.deaths) > 0 
        THEN ROUND((SUM(pms.kills)::DECIMAL / SUM(pms.deaths))::NUMERIC, 2)
        ELSE SUM(pms.kills) 
      END as kd_ratio,
      ROUND(AVG(pms.adr)::NUMERIC, 2) as avg_adr,
      ROUND(AVG(pms.rating)::NUMERIC, 2) as avg_rating
    FROM player_match_stats pms
    JOIN match_stats ms ON ms.match_id = pms.match_id
    LEFT JOIN matches m ON m.id = pms.match_id
    WHERE pms.user_id = p_user_id
    GROUP BY ms.map_name
  ) map_data;
  
  -- 3. –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –æ—Ä—É–∂–∏—é
  SELECT jsonb_object_agg(
    weapon,
    stats
  ) INTO v_weapon_stats
  FROM (
    SELECT 
      weapon_data.key as weapon,
      jsonb_build_object(
        'kills', SUM((weapon_data.value->>'kills')::INTEGER),
        'headshots', SUM((weapon_data.value->>'headshots')::INTEGER),
        'damage', SUM((weapon_data.value->>'damage')::INTEGER)
      ) as stats
    FROM player_match_stats pms,
    LATERAL jsonb_each(pms.weapon_stats) as weapon_data
    WHERE pms.user_id = p_user_id
      AND jsonb_typeof(pms.weapon_stats) = 'object'
    GROUP BY weapon_data.key
  ) weapon_data;
  
  -- 4. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  INSERT INTO player_aggregated_stats (
    user_id,
    total_matches,
    total_wins,
    total_losses,
    win_rate,
    total_rounds,
    total_kills,
    total_deaths,
    total_assists,
    total_headshots,
    kd_ratio,
    kda_ratio,
    avg_kills_per_match,
    avg_deaths_per_match,
    avg_assists_per_match,
    avg_adr,
    avg_kast,
    avg_rating,
    avg_hs_percentage,
    avg_impact,
    total_clutch_won,
    total_clutch_total,
    clutch_success_rate,
    clutch_1v1_rate,
    clutch_1v2_rate,
    total_entry_kills,
    total_entry_deaths,
    entry_success_rate,
    total_opening_kills,
    total_opening_deaths,
    opening_duel_success_rate,
    total_flash_assists,
    total_utility_damage,
    avg_utility_damage_per_round,
    total_mvp,
    mvp_rate,
    map_stats,
    weapon_stats,
    updated_at,
    last_match_at
  ) VALUES (
    p_user_id,
    v_matches.total_matches,
    v_matches.wins,
    v_matches.total_matches - v_matches.wins,
    CASE WHEN v_matches.total_matches > 0 THEN (v_matches.wins::DECIMAL / v_matches.total_matches * 100) ELSE 0 END,
    v_matches.total_rounds,
    v_matches.kills,
    v_matches.deaths,
    v_matches.assists,
    v_matches.headshots,
    CASE WHEN v_matches.deaths > 0 THEN (v_matches.kills::DECIMAL / v_matches.deaths) ELSE v_matches.kills END,
    CASE WHEN v_matches.deaths > 0 THEN ((v_matches.kills + v_matches.assists)::DECIMAL / v_matches.deaths) ELSE v_matches.kills + v_matches.assists END,
    CASE WHEN v_matches.total_matches > 0 THEN (v_matches.kills::DECIMAL / v_matches.total_matches) ELSE 0 END,
    CASE WHEN v_matches.total_matches > 0 THEN (v_matches.deaths::DECIMAL / v_matches.total_matches) ELSE 0 END,
    CASE WHEN v_matches.total_matches > 0 THEN (v_matches.assists::DECIMAL / v_matches.total_matches) ELSE 0 END,
    v_matches.avg_adr,
    v_matches.avg_kast,
    v_matches.avg_rating,
    v_matches.avg_hs,
    v_matches.avg_impact,
    v_matches.clutch_won,
    v_matches.clutch_total,
    CASE WHEN v_matches.clutch_total > 0 THEN (v_matches.clutch_won::DECIMAL / v_matches.clutch_total * 100) ELSE 0 END,
    -- Clutch rates –ø–æ —Ç–∏–ø–∞–º (–ø–æ–∫–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–æ, –¥–µ—Ç–∞–ª–∏ –≤ –í–∞—Ä–∏–∞–Ω—Ç–µ 3)
    50.0,  -- placeholder –¥–ª—è 1v1
    35.0,  -- placeholder –¥–ª—è 1v2
    v_matches.entry_kills,
    v_matches.entry_deaths,
    CASE WHEN (v_matches.entry_kills + v_matches.entry_deaths) > 0 
      THEN (v_matches.entry_kills::DECIMAL / (v_matches.entry_kills + v_matches.entry_deaths) * 100) 
      ELSE 0 END,
    v_matches.opening_kills,
    v_matches.opening_deaths,
    CASE WHEN (v_matches.opening_kills + v_matches.opening_deaths) > 0 
      THEN (v_matches.opening_kills::DECIMAL / (v_matches.opening_kills + v_matches.opening_deaths) * 100) 
      ELSE 0 END,
    v_matches.flash_assists,
    v_matches.utility_damage,
    CASE WHEN v_matches.total_rounds > 0 THEN (v_matches.utility_damage::DECIMAL / v_matches.total_rounds) ELSE 0 END,
    v_matches.mvp,
    CASE WHEN v_matches.total_matches > 0 THEN (v_matches.mvp::DECIMAL / v_matches.total_matches * 100) ELSE 0 END,
    COALESCE(v_map_stats, '{}'::jsonb),
    COALESCE(v_weapon_stats, '{}'::jsonb),
    NOW(),
    NOW()
  )
  ON CONFLICT (user_id) DO UPDATE SET
    total_matches = EXCLUDED.total_matches,
    total_wins = EXCLUDED.total_wins,
    total_losses = EXCLUDED.total_losses,
    win_rate = EXCLUDED.win_rate,
    total_rounds = EXCLUDED.total_rounds,
    total_kills = EXCLUDED.total_kills,
    total_deaths = EXCLUDED.total_deaths,
    total_assists = EXCLUDED.total_assists,
    total_headshots = EXCLUDED.total_headshots,
    kd_ratio = EXCLUDED.kd_ratio,
    kda_ratio = EXCLUDED.kda_ratio,
    avg_kills_per_match = EXCLUDED.avg_kills_per_match,
    avg_deaths_per_match = EXCLUDED.avg_deaths_per_match,
    avg_assists_per_match = EXCLUDED.avg_assists_per_match,
    avg_adr = EXCLUDED.avg_adr,
    avg_kast = EXCLUDED.avg_kast,
    avg_rating = EXCLUDED.avg_rating,
    avg_hs_percentage = EXCLUDED.avg_hs_percentage,
    avg_impact = EXCLUDED.avg_impact,
    total_clutch_won = EXCLUDED.total_clutch_won,
    total_clutch_total = EXCLUDED.total_clutch_total,
    clutch_success_rate = EXCLUDED.clutch_success_rate,
    total_entry_kills = EXCLUDED.total_entry_kills,
    total_entry_deaths = EXCLUDED.total_entry_deaths,
    entry_success_rate = EXCLUDED.entry_success_rate,
    total_opening_kills = EXCLUDED.total_opening_kills,
    total_opening_deaths = EXCLUDED.total_opening_deaths,
    opening_duel_success_rate = EXCLUDED.opening_duel_success_rate,
    total_flash_assists = EXCLUDED.total_flash_assists,
    total_utility_damage = EXCLUDED.total_utility_damage,
    avg_utility_damage_per_round = EXCLUDED.avg_utility_damage_per_round,
    total_mvp = EXCLUDED.total_mvp,
    mvp_rate = EXCLUDED.mvp_rate,
    map_stats = EXCLUDED.map_stats,
    weapon_stats = EXCLUDED.weapon_stats,
    updated_at = NOW(),
    last_match_at = NOW();
    
END;
$$ LANGUAGE plpgsql;

COMMENT ON FUNCTION update_player_aggregated_stats_v2 IS '–ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞ v2.0 (—Å MatchZy –¥–∞–Ω–Ω—ã–º–∏)';

-- ============================================================================
-- –£–°–ü–ï–•
-- ============================================================================

DO $$
BEGIN
  RAISE NOTICE '‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (MatchZy v2.0) —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!';
  RAISE NOTICE 'üìä –°–æ–∑–¥–∞–Ω—ã —Ç–∞–±–ª–∏—Ü—ã:';
  RAISE NOTICE '   ‚Ä¢ match_stats (–æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Ç—á–∞)';
  RAISE NOTICE '   ‚Ä¢ player_match_stats (–¥–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ –≤ –º–∞—Ç—á–µ)';
  RAISE NOTICE '   ‚Ä¢ player_aggregated_stats (–∞–≥—Ä–µ–≥–∞—Ü–∏—è –ø–æ –≤—Å–µ–º –º–∞—Ç—á–∞–º)';
  RAISE NOTICE '   ‚Ä¢ player_map_stats (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–∞–º)';
  RAISE NOTICE '   ‚Ä¢ player_stats_anomalies (–¥–µ—Ç–µ–∫—Ü–∏—è –∞–Ω–æ–º–∞–ª–∏–π)';
  RAISE NOTICE 'üîß –°–æ–∑–¥–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è: update_player_aggregated_stats_v2()';
  RAISE NOTICE 'üöÄ –ì–æ—Ç–æ–≤–æ –∫ –ø—Ä–∏–µ–º—É –¥–∞–Ω–Ω—ã—Ö –æ—Ç MatchZy!';
END $$;

