const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
const filePath = path.join(__dirname, 'frontend', 'src', 'components', 'TournamentDetails.js');

console.log('üîß –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–ï–î–û–°–¢–ê–Æ–©–ò–• –°–ö–û–ë–û–ö');
console.log('================================');

try {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    let content = fs.readFileSync(filePath, 'utf8');
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ–±–∫–∏
    const openBraces = (content.match(/\{/g) || []).length;
    const closeBraces = (content.match(/\}/g) || []).length;
    const missing = openBraces - closeBraces;
    
    console.log(`üìä –û—Ç–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏: ${openBraces}`);
    console.log(`üìä –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏: ${closeBraces}`);
    console.log(`üìä –ù–µ–¥–æ—Å—Ç–∞–µ—Ç: ${missing}`);
    
    if (missing > 0) {
        const lines = content.split('\n');
        
        // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å export
        let exportIndex = -1;
        for (let i = lines.length - 1; i >= 0; i--) {
            if (lines[i].includes('export default TournamentDetails')) {
                exportIndex = i;
                break;
            }
        }
        
        if (exportIndex !== -1) {
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏ –ø–µ—Ä–µ–¥ export
            for (let i = 0; i < missing; i++) {
                lines.splice(exportIndex, 0, '}');
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            const newContent = lines.join('\n');
            fs.writeFileSync(filePath, newContent, 'utf8');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            const finalOpenBraces = (newContent.match(/\{/g) || []).length;
            const finalCloseBraces = (newContent.match(/\}/g) || []).length;
            
            console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${missing} —Å–∫–æ–±–æ–∫`);
            console.log(`üìä –§–∏–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${finalOpenBraces}:${finalCloseBraces}`);
            console.log(`üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: ${newContent.length} —Å–∏–º–≤–æ–ª–æ–≤`);
            
        } else {
            console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω export default');
        }
    } else {
        console.log('‚úÖ –°–∫–æ–±–∫–∏ —É–∂–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã');
    }
    
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
}

console.log('üéâ –ó–ê–í–ï–†–®–ï–ù–û!'); 