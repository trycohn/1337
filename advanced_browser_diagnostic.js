// ===============================================
// –ü–†–û–î–í–ò–ù–£–¢–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–£–†–ù–ò–†–ê –í –ë–†–ê–£–ó–ï–†–ï
// ===============================================

console.log('üîç –ü–†–û–î–í–ò–ù–£–¢–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–£–†–ù–ò–†–ê');
console.log('=====================================');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
if (!window.apiData) {
    console.log('‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã! –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
    console.log('fetch(`/api/tournaments/1`).then(r => r.json()).then(d => { window.apiData = d; console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"); });');
    return;
}

const tournament = window.apiData;
const matches = tournament.matches || [];

console.log('üìä –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:');
console.log('–¢—É—Ä–Ω–∏—Ä:', tournament.name);
console.log('–§–æ—Ä–º–∞—Ç:', tournament.format || tournament.bracket_type);
console.log('–°—Ç–∞—Ç—É—Å:', tournament.status);
console.log('–í—Å–µ–≥–æ –º–∞—Ç—á–µ–π:', matches.length);

// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –º–∞—Ç—á–∏
console.log('\nüèÜ –ê–ù–ê–õ–ò–ó –§–ò–ù–ê–õ–¨–ù–´–• –ú–ê–¢–ß–ï–ô:');
const finalMatches = matches.filter(m => 
    m.bracket_type === 'grand_final' || 
    m.is_final === true ||
    m.bracket_type === 'final'
);

console.log('–ù–∞–π–¥–µ–Ω–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –º–∞—Ç—á–µ–π:', finalMatches.length);
if (finalMatches.length > 0) {
    finalMatches.forEach(match => {
        console.log(`  –§–∏–Ω–∞–ª ID ${match.id}:`);
        console.log(`    –°—Ç–∞—Ç—É—Å: ${match.status}`);
        console.log(`    State: ${match.state || 'undefined'}`);
        console.log(`    –ö–æ–º–∞–Ω–¥—ã: ${match.team1_id} vs ${match.team2_id}`);
        console.log(`    –°—á–µ—Ç: ${match.score1}:${match.score2}`);
        console.log(`    –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: ${match.winner_team_id}`);
        console.log(`    –¢–∏–ø: ${match.bracket_type}`);
        console.log(`    –†–∞—É–Ω–¥: ${match.round}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç–∏
        const hasValidState = match.state === 'DONE' || match.state === 'SCORE_DONE' || match.status === 'completed';
        const hasScore = (match.score1 !== null && match.score1 !== undefined) || 
                        (match.score2 !== null && match.score2 !== undefined);
        const hasWinner = match.winner_team_id !== null && match.winner_team_id !== undefined;
        
        console.log(`    –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç–∏:`);
        console.log(`      hasValidState: ${hasValidState}`);
        console.log(`      hasScore: ${hasScore}`);
        console.log(`      hasWinner: ${hasWinner}`);
        console.log(`      isCompleted: ${hasValidState || hasScore || hasWinner}`);
    });
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã
console.log('\nüë• –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–û–ú–ê–ù–î–ê–•:');
const teams = tournament.teams || tournament.participants || [];
console.log('–ù–∞–π–¥–µ–Ω–æ –∫–æ–º–∞–Ω–¥/—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', teams.length);

if (finalMatches.length > 0) {
    const finalMatch = finalMatches[0];
    const team1 = teams.find(t => t.id === finalMatch.team1_id);
    const team2 = teams.find(t => t.id === finalMatch.team2_id);
    const winner = teams.find(t => t.id === finalMatch.winner_team_id);
    
    console.log('–í —Ñ–∏–Ω–∞–ª–µ:');
    console.log(`  –ö–æ–º–∞–Ω–¥–∞ 1 (ID ${finalMatch.team1_id}): ${team1 ? team1.name : '–ù–ï –ù–ê–ô–î–ï–ù–ê'}`);
    console.log(`  –ö–æ–º–∞–Ω–¥–∞ 2 (ID ${finalMatch.team2_id}): ${team2 ? team2.name : '–ù–ï –ù–ê–ô–î–ï–ù–ê'}`);
    console.log(`  –ü–æ–±–µ–¥–∏—Ç–µ–ª—å (ID ${finalMatch.winner_team_id}): ${winner ? winner.name : '–ù–ï –ù–ê–ô–î–ï–ù'}`);
}

// –≠–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É TournamentResults
console.log('\nüß™ –≠–ú–£–õ–Ø–¶–ò–Ø –õ–û–ì–ò–ö–ò TournamentResults:');

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –º–∞—Ç—á–µ–π
const completedMatches = matches.filter(match => {
    const hasValidState = match.state === 'DONE' || match.state === 'SCORE_DONE' || match.status === 'completed';
    const hasScore = (match.score1 !== null && match.score1 !== undefined) || 
                    (match.score2 !== null && match.score2 !== undefined);
    const hasWinner = match.winner_team_id !== null && match.winner_team_id !== undefined;
    
    return hasValidState || hasScore || hasWinner;
});

console.log('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –º–∞—Ç—á–µ–π –ø–æ –ª–æ–≥–∏–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:', completedMatches.length);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ hasResults
const hasResults = completedMatches.length > 0;
console.log('hasResults:', hasResults);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–∑–µ—Ä–æ–≤
const isCompleted = tournament.status === 'completed';
console.log('–¢—É—Ä–Ω–∏—Ä –∑–∞–≤–µ—Ä—à–µ–Ω (status === completed):', isCompleted);

// –≠–º—É–ª–∏—Ä—É–µ–º calculateWinners
console.log('\nüèÜ –≠–ú–£–õ–Ø–¶–ò–Ø calculateWinners:');

const finalMatch = matches.find(match => 
    match.bracket_type === 'grand_final' || 
    match.is_final === true ||
    (match.round && parseInt(match.round) === Math.max(...matches.map(m => parseInt(m.round) || 0)))
);

const thirdPlaceMatch = matches.find(match => 
    match.is_third_place_match === true ||
    match.bracket_type === 'placement'
);

console.log('–ù–∞–π–¥–µ–Ω —Ñ–∏–Ω–∞–ª:', !!finalMatch);
console.log('–§–∏–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω (–µ—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å):', finalMatch && finalMatch.winner_team_id);
console.log('–ù–∞–π–¥–µ–Ω –º–∞—Ç—á –∑–∞ 3-–µ –º–µ—Å—Ç–æ:', !!thirdPlaceMatch);

if (finalMatch && finalMatch.winner_team_id) {
    console.log('‚úÖ –ü—Ä–∏–∑–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è');
    
    const firstPlace = teams.find(t => t.id === finalMatch.winner_team_id);
    const secondPlaceId = finalMatch.winner_team_id === finalMatch.team1_id 
        ? finalMatch.team2_id 
        : finalMatch.team1_id;
    const secondPlace = teams.find(t => t.id === secondPlaceId);
    
    console.log('1-–µ –º–µ—Å—Ç–æ:', firstPlace?.name);
    console.log('2-–µ –º–µ—Å—Ç–æ:', secondPlace?.name);
} else {
    console.log('‚ùå –ü—Ä–∏–∑–µ—Ä—ã –ù–ï –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è
console.log('\nüìã –ß–¢–û –î–û–õ–ñ–ù–û –û–¢–û–ë–†–ê–ñ–ê–¢–¨–°–Ø:');
console.log('–ë–ª–æ–∫ "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã":', !hasResults);
console.log('–ë–ª–æ–∫ "–ü—Ä–∏–∑–æ–≤—ã–µ –º–µ—Å—Ç–∞":', hasResults && isCompleted && finalMatch && finalMatch.winner_team_id);
console.log('–ë–ª–æ–∫ "–ò—Å—Ç–æ—Ä–∏—è –º–∞—Ç—á–µ–π":', hasResults && completedMatches.length > 0);

console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');