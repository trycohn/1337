// üß™ –¢–ï–°–¢ –î–û–°–¢–£–ü–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í –ö –í–ö–õ–ê–î–ö–ï –£–ü–†–ê–í–õ–ï–ù–ò–Ø
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç—É—Ä–Ω–∏—Ä–∞

console.log('üß™Ô∏è === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–°–¢–£–ü–ê –ö –í–ö–õ–ê–î–ö–ï –£–ü–†–ê–í–õ–ï–ù–ò–Ø ===');

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä–∞
const currentUrl = window.location.href;
const tournamentId = currentUrl.match(/tournaments\/(\d+)/)?.[1];

if (!tournamentId) {
    console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω ID —Ç—É—Ä–Ω–∏—Ä–∞ –≤ URL');
} else {
    console.log(`üéØ ID —Ç—É—Ä–Ω–∏—Ä–∞: ${tournamentId}`);
}

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∫–ª–∞–¥–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ DOM
const managementTab = document.querySelector('[class*="tab-button"][class*="management"]');
const managementTabByText = Array.from(document.querySelectorAll('button')).find(btn => 
    btn.textContent.includes('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ') || btn.textContent.includes('‚öôÔ∏è')
);

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª–∞–¥–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
console.log('  - –ù–∞–π–¥–µ–Ω–∞ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É:', managementTab ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢');
console.log('  - –ù–∞–π–¥–µ–Ω–∞ –ø–æ —Ç–µ–∫—Å—Ç—É:', managementTabByText ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢');

if (managementTabByText) {
    const isVisible = managementTabByText.offsetParent !== null;
    const isDisabled = managementTabByText.disabled;
    console.log('  - –í–∏–¥–∏–º–æ—Å—Ç—å:', isVisible ? '‚úÖ –í–ò–î–ò–ú–ê' : '‚ùå –°–ö–†–´–¢–ê');
    console.log('  - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:', isDisabled ? '‚ùå –û–¢–ö–õ–Æ–ß–ï–ù–ê' : '‚úÖ –ê–ö–¢–ò–í–ù–ê');
}

// 3. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä–∞ –æ—Ç API
async function checkTournamentData() {
    try {
        const token = localStorage.getItem('token');
        if (!token) {
            console.log('‚ùå –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        const response = await fetch(`/api/tournaments/${tournamentId}`, {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });

        if (!response.ok) {
            console.log(`‚ùå –û—à–∏–±–∫–∞ API: ${response.status}`);
            return;
        }

        const tournament = response.json ? await response.json() : response;
        
        console.log('üìä –î–∞–Ω–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä–∞:');
        console.log('  - –ù–∞–∑–≤–∞–Ω–∏–µ:', tournament.name);
        console.log('  - –°–æ–∑–¥–∞—Ç–µ–ª—å ID:', tournament.created_by);
        console.log('  - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:', Array.isArray(tournament.admins) ? tournament.admins.length : '–Ω–µ –º–∞—Å—Å–∏–≤');
        
        if (Array.isArray(tournament.admins) && tournament.admins.length > 0) {
            console.log('üë• –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:');
            tournament.admins.forEach((admin, index) => {
                console.log(`  ${index + 1}. ID: ${admin.user_id}, –ò–º—è: ${admin.username}`);
            });
        }

        // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userResponse = await fetch('/api/users/me', {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });
        
        if (userResponse.ok) {
            const user = await userResponse.json();
            console.log('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
            console.log('  - ID:', user.id);
            console.log('  - –ò–º—è:', user.username);
            
            const isCreator = user.id === tournament.created_by;
            const isAdmin = Array.isArray(tournament.admins) ? 
                tournament.admins.some(admin => admin.user_id === user.id) : false;
            
            console.log('üîë –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:');
            console.log('  - –°–æ–∑–¥–∞—Ç–µ–ª—å —Ç—É—Ä–Ω–∏—Ä–∞:', isCreator ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢');
            console.log('  - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ç—É—Ä–Ω–∏—Ä–∞:', isAdmin ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢');
            console.log('  - –î–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é:', (isCreator || isAdmin) ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢');
            
            if (!isCreator && !isAdmin) {
                console.log('üí° –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ç—É—Ä–Ω–∏—Ä–æ–º:');
                console.log('   1. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–æ–∑–¥–∞—Ç–µ–ª—è –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤–∞—Å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã');
                console.log('   2. –ü—Ä–∏–º–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —á–∞—Ç–µ');
                console.log('   3. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É');
            }
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkTournamentData();

console.log('üéØ –ò–ù–°–¢–†–£–ö–¶–ò–Ø:');
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã');
console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã—à–µ');
console.log('3. –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ - –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è');
console.log('4. –ü—Ä–∏–º–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É'); 