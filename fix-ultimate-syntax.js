const fs = require('fs');

const FILE_PATH = 'frontend/src/components/TournamentDetails.js';

console.log('üö® –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö —Å–∫–æ–±–æ–∫ –≤ –∫–æ–Ω—Ü–µ —Ñ–∞–π–ª–∞');

function ultimateSyntaxFix() {
    try {
        let content = fs.readFileSync(FILE_PATH, 'utf8');
        
        console.log('üìñ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, —Ä–∞–∑–º–µ—Ä:', Math.round(content.length / 1024), 'KB');
        
        // –¢–û–ß–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ª–∏—à–Ω–∏–µ —Å–∫–æ–±–∫–∏ –ø–µ—Ä–µ–¥ export
        console.log('üîß –£–¥–∞–ª—è–µ–º –≤—Å–µ –ª–∏—à–Ω–∏–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏ –ø–µ—Ä–µ–¥ export');
        
        // –ü–∞—Ç—Ç–µ—Ä–Ω: </section>    );  }  [–ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö }]  export default
        const exactPattern = /(\s*<\/section>\s*\);\s*\}\s*)\}+(\s*export default TournamentDetails;)/;
        
        if (content.match(exactPattern)) {
            content = content.replace(exactPattern, '$1\n$2');
            console.log('‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ª–∏—à–Ω–∏–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏ –ø–µ—Ä–µ–¥ export');
        } else {
            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–ª—É—á–∞–µ–≤
            const altPattern = /(\s*\);\s*\}\s*)\}+(\s*export default)/;
            if (content.match(altPattern)) {
                content = content.replace(altPattern, '$1\n$2');
                console.log('‚úÖ –£–¥–∞–ª–µ–Ω—ã –ª–∏—à–Ω–∏–µ —Å–∫–æ–±–∫–∏ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω)');
            } else {
                console.log('‚ùì –ò—â–µ–º –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã...');
                
                // –¢—Ä–µ—Ç–∏–π –≤–∞—Ä–∏–∞–Ω—Ç - –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ } –ø–µ—Ä–µ–¥ export
                const thirdPattern = /(\}\s*)\}+(\s*export default)/;
                if (content.match(thirdPattern)) {
                    content = content.replace(thirdPattern, '$1\n$2');
                    console.log('‚úÖ –£–¥–∞–ª–µ–Ω—ã –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∫–æ–±–∫–∏ –ø–µ—Ä–µ–¥ export');
                }
            }
        }
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞: —É–¥–∞–ª—è–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å —Ç–æ–ª—å–∫–æ —Å–∫–æ–±–∫–∞–º–∏ –ø–µ—Ä–µ–¥ export
        const lines = content.split('\n');
        const exportIndex = lines.findIndex(line => line.trim().startsWith('export default'));
        
        if (exportIndex !== -1) {
            // –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ç–æ–ª—å–∫–æ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏ –ø–µ—Ä–µ–¥ export
            let removed = 0;
            for (let i = exportIndex - 1; i >= 0; i--) {
                const line = lines[i].trim();
                if (line === '}') {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–∞ –ª–∏ —ç—Ç–∞ —Å–∫–æ–±–∫–∞
                    // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥ –Ω–µ–π —É–∂–µ –µ—Å—Ç—å —Å–∫–æ–±–∫–∞, —É–¥–∞–ª—è–µ–º
                    if (i > 0 && lines[i-1].trim() === '}') {
                        lines.splice(i, 1);
                        removed++;
                    } else {
                        break; // –û—Å—Ç–∞–≤–ª—è–µ–º –æ–¥–Ω—É —Å–∫–æ–±–∫—É –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
                    }
                } else if (line === '') {
                    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
                    continue;
                } else {
                    break; // –ù–∞–π–¥–µ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
                }
            }
            
            if (removed > 0) {
                content = lines.join('\n');
                console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${removed} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫ —Å –ª–∏—à–Ω–∏–º–∏ —Å–∫–æ–±–∫–∞–º–∏`);
            }
        }
        
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        fs.writeFileSync(FILE_PATH, content, 'utf8');
        
        // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
        const finalLines = content.split('\n');
        const finalExportIndex = finalLines.findIndex(line => line.trim().startsWith('export default'));
        
        console.log('üìã –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤ –∫–æ–Ω—Ü–µ —Ñ–∞–π–ª–∞:');
        if (finalExportIndex !== -1) {
            const contextLines = finalLines.slice(Math.max(0, finalExportIndex - 5), finalExportIndex + 3);
            contextLines.forEach((line, index) => {
                const lineNum = finalExportIndex - Math.min(5, finalExportIndex) + index + 1;
                const marker = lineNum === finalExportIndex + 1 ? ' ‚Üí ' : '   ';
                console.log(`${marker}${lineNum}: ${line}`);
            });
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Å–∫–æ–±–æ–∫
        const openBraces = (content.match(/\{/g) || []).length;
        const closeBraces = (content.match(/\}/g) || []).length;
        
        console.log('üìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
        console.log(`   - –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${Math.round(content.length / 1024)} KB`);
        console.log(`   - –û—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫: ${openBraces}`);
        console.log(`   - –ó–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫: ${closeBraces}`);
        console.log(`   - –ë–∞–ª–∞–Ω—Å: ${openBraces === closeBraces ? '‚úÖ –ò–¥–µ–∞–ª—å–Ω–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã' : '‚ùå –î–∏—Å–±–∞–ª–∞–Ω—Å: ' + (openBraces - closeBraces)}`);
        
        return openBraces === closeBraces;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏:', error);
        return false;
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
if (ultimateSyntaxFix()) {
    console.log('\nüéØ –£–°–ü–ï–•! –§–∞–π–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
    console.log('üöÄ –¢–µ–ø–µ—Ä—å npm run build –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫');
    console.log('\nüìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:');
    console.log('   1. ‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ª–∏—à–Ω–∏–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏');
    console.log('   2. ‚úÖ export default —Ç–µ–ø–µ—Ä—å –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —É—Ä–æ–≤–Ω–µ');
    console.log('   3. ‚úÖ –°–∫–æ–±–∫–∏ –∏–¥–µ–∞–ª—å–Ω–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã');
    console.log('   4. ‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å JavaScript –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
} else {
    console.log('\n‚ùå –í—Å–µ –µ—â–µ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –±–∞–ª–∞–Ω—Å–æ–º —Å–∫–æ–±–æ–∫');
    console.log('üõ†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä—É—á–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞');
} 