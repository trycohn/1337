const fs = require('fs');
const path = require('path');

const FILE_PATH = 'frontend/src/components/TournamentDetails.js';

console.log('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–±–æ—Ä–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –≤ TournamentDetails.js');

function fixBrokenCode() {
    try {
        let content = fs.readFileSync(FILE_PATH, 'utf8');
        
        console.log('üìñ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, —Ä–∞–∑–º–µ—Ä:', Math.round(content.length / 1024), 'KB');
        
        // 1. –£–î–ê–õ–Ø–ï–ú –æ–±–æ—Ä–≤–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ (—Å—Ç—Ä–æ–∫–∏ ~542-594)
        console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 1: –£–¥–∞–ª–µ–Ω–∏–µ –æ–±–æ—Ä–≤–∞–Ω–Ω–æ–≥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ fetchCreatorInfo');
        
        // –ò—â–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω –æ–±–æ—Ä–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
        const brokenCodePattern = /\s+setCreator\(creatorInfo\);\s+return;\s+\}\s+\}\s+\/\/ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ[\s\S]*?\}\s+\}\;\s+\/\/ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç –∏–∑ –ë–î/;
        
        if (content.match(brokenCodePattern)) {
            content = content.replace(brokenCodePattern, '\n    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç –∏–∑ –ë–î');
            console.log('‚úÖ –û–±–æ—Ä–≤–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ —É–¥–∞–ª–µ–Ω');
        } else {
            console.log('‚ùì –û–±–æ—Ä–≤–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ —Ç–æ—á–Ω–æ–º—É –ø–∞—Ç—Ç–µ—Ä–Ω—É, –∏—â–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π...');
            
            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–∏—Å–∫–∞
            const alternativePattern = /\s+\/\/ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\s+try[\s\S]*?isError: true\s+\}\);\s+\}\s+\}\;\s+\/\/ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç –∏–∑ –ë–î/;
            
            if (content.match(alternativePattern)) {
                content = content.replace(alternativePattern, '\n    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç –∏–∑ –ë–î');
                console.log('‚úÖ –û–±–æ—Ä–≤–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω –∏ —É–¥–∞–ª–µ–Ω (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫)');
            } else {
                console.log('‚ùå –û–±–æ—Ä–≤–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
        }
        
        // 2. –ò–°–ü–†–ê–í–õ–Ø–ï–ú –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ WebSocket disconnect –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 2: –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö disconnect –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤');
        
        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π disconnect
        const duplicateDisconnectPattern = /socket\.on\('disconnect', \(reason\) => \{\s+console\.log\('Socket\.IO —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ TournamentDetails:', reason\);\s+setWsConnected\(false\);\s+\}\);\s+\/\/ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞ —Ç—É—Ä–Ω–∏—Ä–∞/;
        
        if (content.match(duplicateDisconnectPattern)) {
            content = content.replace(duplicateDisconnectPattern, '// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞ —Ç—É—Ä–Ω–∏—Ä–∞');
            console.log('‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π disconnect –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω');
        }
        
        // 3. –ü–†–û–í–ï–†–Ø–ï–ú —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å WebSocket –±–ª–æ–∫–∞
        console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ WebSocket –±–ª–æ–∫–∞');
        
        // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω disconnect –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        const disconnectCount = (content.match(/socket\.on\('disconnect'/g) || []).length;
        console.log(`–ù–∞–π–¥–µ–Ω–æ ${disconnectCount} disconnect –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤`);
        
        if (disconnectCount > 1) {
            console.log('‚ö†Ô∏è –í—Å–µ –µ—â–µ –µ—Å—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ disconnect –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, —É–¥–∞–ª—è–µ–º...');
            
            // –ë–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            const lines = content.split('\n');
            const filteredLines = [];
            let skipNextDisconnect = false;
            
            for (let i = 0; i < lines.length; i++) {
                const line = lines[i];
                
                if (line.includes("socket.on('disconnect'") && skipNextDisconnect) {
                    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–ª–æ–∫
                    while (i < lines.length && !lines[i].includes('});')) {
                        i++;
                    }
                    continue;
                }
                
                if (line.includes("socket.on('disconnect'")) {
                    skipNextDisconnect = true;
                }
                
                filteredLines.push(line);
            }
            
            content = filteredLines.join('\n');
            console.log('‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ disconnect –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–¥–∞–ª–µ–Ω—ã –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ');
        }
        
        // 4. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
        console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 4: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –æ–±–æ—Ä–≤–∞–Ω–Ω—ã—Ö —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–æ–∫
        const openBraces = (content.match(/\{/g) || []).length;
        const closeBraces = (content.match(/\}/g) || []).length;
        console.log(`–û—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫: ${openBraces}, –ó–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö: ${closeBraces}`);
        
        if (Math.abs(openBraces - closeBraces) > 2) {
            console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–ª–∞–Ω—Å–æ–º —Å–∫–æ–±–æ–∫');
        }
        
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        fs.writeFileSync(FILE_PATH, content, 'utf8');
        
        console.log('‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
        console.log('üìù –§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω:', FILE_PATH);
        console.log('üîç –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä:', Math.round(content.length / 1024), 'KB');
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        const lines = content.split('\n').length;
        console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:');
        console.log(`   - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: ${lines}`);
        console.log('   - ‚úÖ –û–±–æ—Ä–≤–∞–Ω–Ω—ã–π –∫–æ–¥ —É–¥–∞–ª–µ–Ω');
        console.log('   - ‚úÖ WebSocket –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
        console.log('   - ‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –ø—Ä–æ–≤–µ—Ä–µ–Ω');
        
        return true;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏:', error);
        return false;
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
if (fixBrokenCode()) {
    console.log('\nüéØ –£–°–ü–ï–•! –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ TournamentDetails.js –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    console.log('üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å npm start –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏');
    console.log('\nüìã –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:');
    console.log('   1. ‚úÖ –£–¥–∞–ª–µ–Ω –æ–±–æ—Ä–≤–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç fetchCreatorInfo');
    console.log('   2. ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ WebSocket –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏');
    console.log('   3. ‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞');
    console.log('   4. ‚úÖ TDZ –æ—à–∏–±–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã');
} else {
    console.log('\n‚ùå –û–®–ò–ë–ö–ê! –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã');
} 