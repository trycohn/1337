const fs = require('fs');
const path = require('path');

const TOURNAMENT_DETAILS_PATH = 'frontend/src/components/TournamentDetails.js';

console.log('üîß –ó–∞–ø—É—Å–∫ ULTIMATE –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è TDZ –æ—à–∏–±–æ–∫ –≤ TournamentDetails.js...');

function fixTDZErrors() {
    try {
        // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
        let content = fs.readFileSync(TOURNAMENT_DETAILS_PATH, 'utf8');
        
        console.log('üìñ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, —Ä–∞–∑–º–µ—Ä:', Math.round(content.length / 1024), 'KB');
        
        // 1. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–µ—Ä–µ–Ω–æ—Å–∏–º fetchCreatorInfo –≤ –Ω–∞—á–∞–ª–æ –∫–∞–∫ useCallback
        console.log('üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 1: –ü–µ—Ä–µ–Ω–æ—Å fetchCreatorInfo –≤ –Ω–∞—á–∞–ª–æ –∫–∞–∫ useCallback');
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ fetchCreatorInfo
        const fetchCreatorInfoPattern = /\/\/ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ —Ç—É—Ä–Ω–∏—Ä–∞[\s\S]*?const fetchCreatorInfo = async \(creatorId\) => \{[\s\S]*?\}\;/;
        const fetchCreatorInfoMatch = content.match(fetchCreatorInfoPattern);
        
        if (fetchCreatorInfoMatch) {
            // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏
            const oldFunctionBody = fetchCreatorInfoMatch[0];
            
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
            content = content.replace(fetchCreatorInfoPattern, '');
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞–∫ useCallback –≤ –Ω–∞—á–∞–ª–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
            const newFetchCreatorInfo = `
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ —Ç—É—Ä–Ω–∏—Ä–∞
    const fetchCreatorInfo = useCallback(async (creatorId) => {
        if (!creatorId) return;
        
        try {
            // –î–µ–ª–∞–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –ë–î
            console.log(\`–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ —Ç—É—Ä–Ω–∏—Ä–∞ (ID: \${creatorId}) –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\`);
            
            const response = await api.get(\`/api/users/profile/\${creatorId}\`);
            
            if (response.data) {
                console.log(\`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ —Ç—É—Ä–Ω–∏—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ –ë–î:\`, response.data);
                setCreator(response.data);
                
                // –ö–µ—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±—É–¥—É—â–µ–º
                const cacheKey = \`user_\${creatorId}\`;
                localStorage.setItem(cacheKey, JSON.stringify(response.data));
                localStorage.setItem(\`\${cacheKey}_timestamp\`, Date.now().toString());
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞—Ç–µ–ª—è —Ç—É—Ä–Ω–∏—Ä–∞ –∏–∑ –ë–î:', error);
            
            // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            if (tournament && tournament.participants && Array.isArray(tournament.participants)) {
                console.log('–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ç—É—Ä–Ω–∏—Ä–∞');
                
                const creatorFromParticipants = tournament.participants.find(
                    participant => participant.user_id === creatorId || participant.id === creatorId
                );
                
                if (creatorFromParticipants) {
                    console.log('–ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', creatorFromParticipants);
                    
                    const creatorInfo = {
                        id: creatorId,
                        username: creatorFromParticipants.name || creatorFromParticipants.username || \`–£—á–∞—Å—Ç–Ω–∏–∫ #\${creatorId}\`,
                        avatar_url: creatorFromParticipants.avatar_url || null,
                        fromParticipants: true
                    };
                    
                    setCreator(creatorInfo);
                    return;
                }
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            try {
                console.log('–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º –∫–µ—à–µ');
                const cacheKey = \`user_\${creatorId}\`;
                const cachedUser = localStorage.getItem(cacheKey);
                
                if (cachedUser) {
                    const parsedUser = JSON.parse(cachedUser);
                    if (parsedUser && parsedUser.id === creatorId) {
                        console.log('–ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –≤ –∫–µ—à–µ:', parsedUser);
                        setCreator(parsedUser);
                        return;
                    }
                }
            } catch (cacheError) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', cacheError);
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –º—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ tournament.created_by_info
            if (tournament && tournament.created_by_info) {
                console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –∏–∑ tournament.created_by_info');
                setCreator(tournament.created_by_info);
                return;
            }
            
            // –ï—Å–ª–∏ –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            console.log('–í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É');
            setCreator({
                id: creatorId,
                username: \`–°–æ–∑–¥–∞—Ç–µ–ª—å #\${creatorId}\`,
                avatar_url: null,
                isError: true
            });
        }
    }, [tournament]);
`;
            
            // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
            const stateDefinitionsEnd = content.indexOf('    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Ç—É—Ä–Ω–∏—Ä–∞');
            if (stateDefinitionsEnd !== -1) {
                content = content.slice(0, stateDefinitionsEnd) + newFetchCreatorInfo + '\n    ' + content.slice(stateDefinitionsEnd);
                console.log('‚úÖ fetchCreatorInfo –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ –Ω–∞—á–∞–ª–æ –∫–∞–∫ useCallback');
            } else {
                console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ fetchCreatorInfo');
            }
        }
        
        // 2. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π setupWebSocket
        console.log('üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 2: –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ setupWebSocket');
        
        // –ò—â–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π setupWebSocket (–≤—Ç–æ—Ä–æ–π)
        const duplicateSetupWebSocketPattern = /\/\/ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Socket\.IO –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ç—É—Ä–Ω–∏—Ä–∞\s*const setupWebSocket = useCallback\(\(\) => \{[\s\S]*?\}, \[id\]\);[\s\S]*?useEffect\(\(\) => \{[\s\S]*?setupWebSocket\(\);[\s\S]*?\}, \[user\]\);/;
        
        if (content.match(duplicateSetupWebSocketPattern)) {
            content = content.replace(duplicateSetupWebSocketPattern, '');
            console.log('‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π setupWebSocket —É–¥–∞–ª–µ–Ω');
        }
        
        // 3. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ disconnect –≤ WebSocket
        console.log('üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 3: –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö WebSocket –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤');
        
        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ disconnect
        const duplicateDisconnectPattern = /socket\.on\('disconnect', \(reason\) => \{\s*console\.log\('Socket\.IO —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ TournamentDetails:', reason\);\s*setWsConnected\(false\);\s*\}\);/g;
        const disconnectMatches = content.match(duplicateDisconnectPattern);
        if (disconnectMatches && disconnectMatches.length > 1) {
            // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π
            content = content.replace(duplicateDisconnectPattern, '');
            content = content.replace(/(\s+\/\/ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞ —Ç—É—Ä–Ω–∏—Ä–∞)/,
                `
        socket.on('disconnect', (reason) => {
            console.log('Socket.IO —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ:', reason);
            setWsConnected(false);
        });
$1`);
            console.log('‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ disconnect –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
        }
        
        // 4. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—è–¥–æ–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
        console.log('üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—è–¥–∫–∞ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ memoizedGameData –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –¥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        const memoizedGameDataIndex = content.indexOf('const memoizedGameData = useMemo');
        const memoizedGameDataUsageIndex = content.indexOf('}, [memoizedGameData,');
        
        if (memoizedGameDataIndex > memoizedGameDataUsageIndex && memoizedGameDataUsageIndex !== -1) {
            console.log('‚ö†Ô∏è memoizedGameData –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –¥–∞–Ω–Ω–æ–π –æ—à–∏–±–∫–∏');
        }
        
        // 5. –ü–†–û–í–ï–†–ö–ê: –£–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        console.log('üîÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 5: –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—Ä—É–≥–∏–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        const functionNames = ['getGameMaps', 'getDefaultMap', 'gameHasMaps'];
        functionNames.forEach(funcName => {
            const pattern = new RegExp(`const ${funcName} = `, 'g');
            const matches = content.match(pattern);
            if (matches && matches.length > 1) {
                console.log(`‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${matches.length} –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π ${funcName}`);
            }
        });
        
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        fs.writeFileSync(TOURNAMENT_DETAILS_PATH, content, 'utf8');
        
        console.log('‚úÖ –í—Å–µ TDZ –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
        console.log('üìù –§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω:', TOURNAMENT_DETAILS_PATH);
        console.log('üîç –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä:', Math.round(content.length / 1024), 'KB');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π
        const lines = content.split('\n').length;
        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
        console.log('   - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫:', lines);
        console.log('   - fetchCreatorInfo: ‚úÖ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –∏ —Å–¥–µ–ª–∞–Ω useCallback');
        console.log('   - setupWebSocket: ‚úÖ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
        console.log('   - WebSocket –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏: ‚úÖ –æ—á–∏—â–µ–Ω—ã');
        
        return true;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ TDZ –æ—à–∏–±–æ–∫:', error);
        return false;
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
if (fixTDZErrors()) {
    console.log('\nüéØ –£–°–ü–ï–•! –í—Å–µ TDZ –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    console.log('üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å npm start –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏');
    console.log('\nüìã –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:');
    console.log('   1. ‚úÖ fetchCreatorInfo –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ –Ω–∞—á–∞–ª–æ –∫–∞–∫ useCallback');
    console.log('   2. ‚úÖ –£–¥–∞–ª–µ–Ω –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π setupWebSocket');
    console.log('   3. ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã WebSocket –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏');
    console.log('   4. ‚úÖ –£—Å—Ç—Ä–∞–Ω–µ–Ω—ã —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏');
    console.log('   5. ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π');
} else {
    console.log('\n‚ùå –û–®–ò–ë–ö–ê! –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å TDZ –æ—à–∏–±–∫–∏');
    console.log('üõ†Ô∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é');
} 