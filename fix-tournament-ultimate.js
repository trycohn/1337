const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
const filePath = path.join(__dirname, 'frontend', 'src', 'components', 'TournamentDetails.js');

console.log('üîß –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï TournamentDetails.js');
console.log('===============================================');

try {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    let content = fs.readFileSync(filePath, 'utf8');
    console.log(`üìÅ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω. –†–∞–∑–º–µ—Ä: ${content.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    const lines = content.split('\n');
    console.log(`üìä –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: ${lines.length}`);
    
    // –ù–∞–π–¥–µ–º —Å—Ç—Ä–æ–∫—É —Å </section>
    let sectionLineIndex = -1;
    for (let i = 0; i < lines.length; i++) {
        if (lines[i].trim().includes('</section>')) {
            sectionLineIndex = i;
            console.log(`üéØ –ù–∞–π–¥–µ–Ω </section> –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${i + 1}: "${lines[i].trim()}"`);
            break;
        }
    }
    
    if (sectionLineIndex === -1) {
        throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω </section>');
    }
    
    // –ù–∞–π–¥–µ–º —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É –ø–æ—Å–ª–µ </section> —Å ); 
    let returnLineIndex = -1;
    for (let i = sectionLineIndex + 1; i < lines.length && i < sectionLineIndex + 5; i++) {
        if (lines[i].trim() === ');') {
            returnLineIndex = i;
            console.log(`üéØ –ù–∞–π–¥–µ–Ω ); –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${i + 1}`);
            break;
        }
    }
    
    if (returnLineIndex === -1) {
        throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω ); –ø–æ—Å–ª–µ </section>');
    }
    
    // –û–±—Ä–µ–∑–∞–µ–º —Ñ–∞–π–ª –¥–æ —Å—Ç—Ä–æ–∫–∏ —Å );, –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ
    const newLines = lines.slice(0, returnLineIndex + 1);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ
    newLines.push('}'); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é TournamentDetails
    newLines.push('');
    newLines.push('export default TournamentDetails;');
    
    console.log(`üìä –û–±—Ä–µ–∑–∞–µ–º —Ñ–∞–π–ª —Å ${lines.length} –¥–æ ${newLines.length} —Å—Ç—Ä–æ–∫`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Å–∫–æ–±–æ–∫ –≤ –Ω–æ–≤–æ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–º
    const newContent = newLines.join('\n');
    const openBraces = (newContent.match(/\{/g) || []).length;
    const closeBraces = (newContent.match(/\}/g) || []).length;
    
    console.log(`üìä –û—Ç–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏: ${openBraces}`);
    console.log(`üìä –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏: ${closeBraces}`);
    console.log(`üìä –†–∞–∑–Ω–∏—Ü–∞: ${openBraces - closeBraces}`);
    
    // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –µ—Å—Ç—å –¥–∏—Å–±–∞–ª–∞–Ω—Å, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏
    const missingBraces = openBraces - closeBraces;
    if (missingBraces > 0) {
        console.log(`üîß –î–æ–±–∞–≤–ª—è–µ–º ${missingBraces} –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫`);
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏ –ø–µ—Ä–µ–¥ export
        const exportIndex = newLines.length - 1; // –ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏ —Å export
        
        for (let i = 0; i < missingBraces; i++) {
            newLines.splice(exportIndex, 0, '}');
        }
    }
    
    // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    const finalContent = newLines.join('\n');
    const finalOpenBraces = (finalContent.match(/\{/g) || []).length;
    const finalCloseBraces = (finalContent.match(/\}/g) || []).length;
    
    console.log(`üìä –§–ò–ù–ê–õ–¨–ù–´–ô –ë–ê–õ–ê–ù–°:`);
    console.log(`üìä –û—Ç–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏: ${finalOpenBraces}`);
    console.log(`üìä –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏: ${finalCloseBraces}`);
    console.log(`üìä –ë–∞–ª–∞–Ω—Å: ${finalOpenBraces === finalCloseBraces ? '‚úÖ –ò–î–ï–ê–õ–¨–ù–´–ô' : '‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô'}`);
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(filePath, finalContent, 'utf8');
    
    console.log(`‚úÖ –§–∞–π–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω`);
    console.log(`üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: ${finalContent.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    console.log(`üìä –§–∏–Ω–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: ${newLines.length}`);
    
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
}

console.log('üéâ –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!'); 