#!/bin/bash
# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–æ–≤ —Ä–∞—É–Ω–¥–∞ 2 —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint

echo "üîÑ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Å–æ—Å—Ç–∞–≤—ã —Ä–∞—É–Ω–¥–∞ 2 —á–µ—Ä–µ–∑ /confirm-rosters..."

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
# –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: localStorage.getItem('token')

# –í–ê–†–ò–ê–ù–¢ 1: –° —Ç–æ–∫–µ–Ω–æ–º (–∑–∞–º–µ–Ω–∏—Ç–µ YOUR_TOKEN)
# curl -X POST https://1337community.com/api/tournaments/23/fullmix/rounds/2/confirm-rosters \
#   -H "Authorization: Bearer YOUR_TOKEN" \
#   -H "Content-Type: application/json"

# –í–ê–†–ò–ê–ù–¢ 2: –ß–µ—Ä–µ–∑ psql –Ω–∞–ø—Ä—è–º—É—é (–æ–±—Ö–æ–¥–∏–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)
psql -U postgres -d 1337community << 'EOF'

-- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Å–æ—Å—Ç–∞–≤—ã —Ä–∞—É–Ω–¥–∞ 2 –Ω–∞–ø—Ä—è–º—É—é –≤ –ë–î
BEGIN;

-- 1. –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞—É–Ω–¥–∞ 2
WITH round2_teams AS (
    SELECT DISTINCT 
        m.team1_id as team_id,
        m.id as match_id
    FROM matches m
    WHERE m.tournament_id = 23 AND m.round = 2
    UNION
    SELECT DISTINCT 
        m.team2_id as team_id,
        m.id as match_id
    FROM matches m
    WHERE m.tournament_id = 23 AND m.round = 2
),
team_rosters AS (
    SELECT 
        rt.team_id,
        rt.match_id,
        jsonb_agg(
            jsonb_build_object(
                'participant_id', ttm.participant_id,
                'user_id', ttm.user_id,
                'name', COALESCE(u.username, tp.name),
                'position', ttm.position
            ) ORDER BY ttm.position
        ) as roster
    FROM round2_teams rt
    JOIN tournament_team_members ttm ON ttm.team_id = rt.team_id
    LEFT JOIN users u ON u.id = ttm.user_id
    LEFT JOIN tournament_participants tp ON tp.id = ttm.participant_id
    GROUP BY rt.team_id, rt.match_id
)
-- 2. –û–±–Ω–æ–≤–ª—è–µ–º metadata –º–∞—Ç—á–µ–π
UPDATE matches m
SET metadata = jsonb_set(
    COALESCE(m.metadata, '{}'::jsonb),
    '{round_rosters}',
    jsonb_build_object(
        'round', 2,
        'team1_roster', (SELECT roster FROM team_rosters WHERE team_id = m.team1_id AND match_id = m.id),
        'team2_roster', (SELECT roster FROM team_rosters WHERE team_id = m.team2_id AND match_id = m.id),
        'confirmed_at', to_char(NOW(), 'YYYY-MM-DD"T"HH24:MI:SS.MS"Z"')
    ),
    true
)
WHERE m.tournament_id = 23 AND m.round = 2
RETURNING 
    '‚úÖ –û–ë–ù–û–í–õ–ï–ù –ú–ê–¢–ß' as " ",
    m.id as "ID –º–∞—Ç—á–∞",
    m.round as "–†–∞—É–Ω–¥",
    jsonb_array_length(m.metadata->'round_rosters'->'team1_roster') as "Team1 –∏–≥—Ä–æ–∫–æ–≤",
    jsonb_array_length(m.metadata->'round_rosters'->'team2_roster') as "Team2 –∏–≥—Ä–æ–∫–æ–≤";

-- 3. –û–±–Ω–æ–≤–ª—è–µ–º —Å–Ω–∞–ø—à–æ—Ç
UPDATE full_mix_snapshots
SET 
    snapshot = jsonb_set(
        COALESCE(snapshot, '{}'::jsonb),
        '{meta,rosters_confirmed}',
        'true'::jsonb,
        true
    ),
    snapshot = jsonb_set(
        snapshot,
        '{meta,rosters_confirmed_at}',
        to_jsonb(to_char(NOW(), 'YYYY-MM-DD"T"HH24:MI:SS.MS"Z"')),
        true
    )
WHERE tournament_id = 23 AND round_number = 2
RETURNING 
    '‚úÖ –û–ë–ù–û–í–õ–ï–ù –°–ù–ê–ü–®–û–¢' as " ",
    round_number as "–†–∞—É–Ω–¥",
    snapshot->'meta'->>'rosters_confirmed' as "rosters_confirmed";

COMMIT;

-- 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
SELECT 
    'üìä –ò–¢–û–ì–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê' as " ";

SELECT 
    m.id as "ID –º–∞—Ç—á–∞",
    m.round as "–†–∞—É–Ω–¥",
    CASE 
        WHEN m.metadata->'round_rosters'->'confirmed_at' IS NOT NULL 
        THEN '–ï–°–¢–¨ ‚úÖ'
        ELSE '–ù–ï–¢ ‚ùå'
    END as "Metadata",
    jsonb_array_length(m.metadata->'round_rosters'->'team1_roster') as "Team1",
    jsonb_array_length(m.metadata->'round_rosters'->'team2_roster') as "Team2"
FROM matches m
WHERE m.tournament_id = 23 AND m.round = 2;

SELECT 
    round_number as "–†–∞—É–Ω–¥",
    snapshot->'meta'->>'rosters_confirmed' as "rosters_confirmed",
    snapshot->'meta'->>'rosters_confirmed_at' as "confirmed_at"
FROM full_mix_snapshots
WHERE tournament_id = 23 AND round_number = 2;

EOF

echo ""
echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–∫—É —Ç—É—Ä–Ω–∏—Ä–∞ - —Å–æ—Å—Ç–∞–≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è"

