#!/bin/bash

# üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï BACKEND SOCKET.IO –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
# –¶–µ–ª—å: –î–æ–±–∞–≤–∏—Ç—å fallback –Ω–∞ polling –µ—Å–ª–∏ WebSocket –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï BACKEND SOCKET.IO –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò"
echo "============================================="

echo ""
echo "üîç 1. –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:"
echo "-----------------------------------"

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–∞–ø–∫—É backend
cd /var/www/1337community.com/backend

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞ server.js
echo "üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ server.js –Ω–∞ Socket.IO –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:"
grep -n "socket.io" server.js || echo "‚ùå Socket.IO –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ server.js"

echo ""
echo "üîß 2. –°–û–ó–î–ê–ù–ò–ï –£–õ–£–ß–®–ï–ù–ù–û–ô SOCKET.IO –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:"
echo "------------------------------------------------"

# –°–æ–∑–¥–∞–µ–º backup —Ç–µ–∫—É—â–µ–≥–æ server.js
cp server.js server.js.backup.$(date +%Y%m%d_%H%M%S)
echo "‚úÖ Backup —Å–æ–∑–¥–∞–Ω: server.js.backup.$(date +%Y%m%d_%H%M%S)"

# –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π server.js —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π Socket.IO –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
cat > socketio_config_patch.js << 'EOF'
// üöÄ –£–õ–£–ß–®–ï–ù–ù–ê–Ø SOCKET.IO –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
// –î–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ –≤ server.js –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è HTTP —Å–µ—Ä–≤–µ—Ä–∞

const { Server: SocketIOServer } = require('socket.io');

console.log('üîå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Socket.IO —Å–µ—Ä–≤–µ—Ä–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏...');

const io = new SocketIOServer(server, {
    // ‚ö° –ö–†–ò–¢–ò–ß–ù–û: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–≤
    transports: ['websocket', 'polling'],
    
    // üîß WebSocket fallback –Ω–∞ polling
    upgrade: true,
    rememberUpgrade: false,
    
    // CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è WebSocket
    cors: {
        origin: [
            "https://1337community.com",
            "http://1337community.com",
            "https://www.1337community.com",
            "http://localhost:3000",
            "http://localhost:3001"
        ],
        methods: ["GET", "POST"],
        credentials: true,
        allowedHeaders: ["Authorization", "Content-Type"]
    },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    pingTimeout: 60000,
    pingInterval: 25000,
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è WebSocket
    allowEIO3: true,
    
    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–æ—Ç–∫–ª—é—á–∏—Ç—å –≤ production)
    // allowRequest: (req, callback) => {
    //     console.log('üîç Socket.IO: Incoming connection request');
    //     callback(null, true);
    // }
});

console.log('‚úÖ Socket.IO —Å–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω —Å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞–º–∏:', ['websocket', 'polling']);

// üîê Middleware –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
io.use(async (socket, next) => {
    try {
        console.log('üîç Socket.IO: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...');
        
        const token = socket.request._query?.token || socket.handshake.auth?.token;
        if (!token) {
            console.log('‚ùå Socket.IO: –¢–æ–∫–µ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
            return next(new Error('–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω'));
        }

        console.log('üîç Socket.IO: –ü—Ä–æ–≤–µ—Ä–∫–∞ JWT —Ç–æ–∫–µ–Ω–∞...');
        const decoded = jwt.verify(token, process.env.JWT_SECRET);
        
        console.log('‚úÖ Socket.IO: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', decoded.username);
        socket.userId = decoded.id;
        socket.username = decoded.username;
        
        next();
    } catch (error) {
        console.log('‚ùå Socket.IO: –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error.message);
        next(new Error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'));
    }
});

// üì° –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
io.on('connection', (socket) => {
    console.log('‚úÖ Socket.IO: –ù–æ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    console.log('üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', socket.username, 'ID:', socket.userId);
    console.log('üîç –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:', socket.conn.transport.name);
    
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    socket.join(`user_${socket.userId}`);
    console.log('üè† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ:', `user_${socket.userId}`);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ–Ω—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    socket.conn.on('upgrade', () => {
        console.log('‚ö° –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞:', socket.conn.transport.name);
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
    socket.on('disconnect', (reason) => {
        console.log('üîå Socket.IO: –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ:', reason);
        console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–µ–Ω:', socket.username);
    });
    
    // –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ —Ç—É—Ä–Ω–∏—Ä—É
    socket.on('join-tournament', (tournamentId) => {
        try {
            const roomName = `tournament_${tournamentId}`;
            socket.join(roomName);
            console.log(`üèüÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${socket.username} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Ç—É—Ä–Ω–∏—Ä—É ${tournamentId}`);
            
            // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            socket.emit('tournament-joined', { tournamentId, status: 'success' });
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —Ç—É—Ä–Ω–∏—Ä—É:', error.message);
            socket.emit('error', { message: '–û—à–∏–±–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —Ç—É—Ä–Ω–∏—Ä—É' });
        }
    });
    
    // –í—ã—Ö–æ–¥ –∏–∑ —Ç—É—Ä–Ω–∏—Ä–∞
    socket.on('leave-tournament', (tournamentId) => {
        try {
            const roomName = `tournament_${tournamentId}`;
            socket.leave(roomName);
            console.log(`üö™ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${socket.username} –ø–æ–∫–∏–Ω—É–ª —Ç—É—Ä–Ω–∏—Ä ${tournamentId}`);
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ç—É—Ä–Ω–∏—Ä–∞:', error.message);
        }
    });
});

// üåê –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Socket.IO
io.engine.on('connection_error', (err) => {
    console.log('‚ùå Socket.IO connection_error:', err.req);
    console.log('‚ùå –ö–æ–¥ –æ—à–∏–±–∫–∏:', err.code);
    console.log('‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ:', err.message);
    console.log('‚ùå –ö–æ–Ω—Ç–µ–∫—Å—Ç:', err.context);
});

// –≠–∫—Å–ø–æ—Ä—Ç io –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
app.set('io', io);

console.log('‚úÖ Socket.IO –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
console.log('üîå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—ã: websocket, polling');
console.log('üåê CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è 1337community.com');

EOF

echo "‚úÖ Socket.IO –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞"

echo ""
echo "üîß 3. –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:"
echo "----------------------------"

echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
echo ""
echo "üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò:"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª server.js –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ"
echo "2. –ù–∞–π–¥–∏—Ç–µ —Å–µ–∫—Ü–∏—é Socket.IO (–æ–±—ã—á–Ω–æ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è HTTP —Å–µ—Ä–≤–µ—Ä–∞)"
echo "3. –ó–∞–º–µ–Ω–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Socket.IO –Ω–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ socketio_config_patch.js"
echo "4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PM2"
echo ""
echo "üìÅ –§–∞–π–ª—ã:"
echo "- Backup: server.js.backup.*"
echo "- –ü–∞—Ç—á: socketio_config_patch.js"
echo ""
echo "üîÑ –ü–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "pm2 restart 1337-backend"
echo "pm2 logs 1337-backend --follow"

echo ""
echo "üß™ 4. –¢–ï–°–¢–û–í–´–ô ENDPOINT –î–õ–Ø SOCKET.IO:"
echo "------------------------------------"

# –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π endpoint
cat > test_socketio_endpoint.js << 'EOF'
// üß™ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –¢–ï–°–¢–û–í–´–ô ENDPOINT
// –î–æ–±–∞–≤–∏—Ç—å –≤ routes —Å–µ–∫—Ü–∏—é server.js

app.get('/test-socketio', (req, res) => {
    try {
        const io = req.app.get('io');
        
        if (!io) {
            return res.status(500).json({
                status: 'error',
                message: 'Socket.IO –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω',
                timestamp: new Date().toISOString()
            });
        }
        
        const clientsCount = io.engine.clientsCount || 0;
        const transports = ['websocket', 'polling']; // –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—ã
        
        res.json({
            status: 'success',
            message: 'Socket.IO —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ',
            clientsCount: clientsCount,
            transports: transports,
            timestamp: new Date().toISOString(),
            version: require('socket.io/package.json').version
        });
        
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ endpoint:', error.message);
        res.status(500).json({
            status: 'error',
            message: '–û—à–∏–±–∫–∞ Socket.IO —Å–µ—Ä–≤–µ—Ä–∞: ' + error.message,
            timestamp: new Date().toISOString()
        });
    }
});

console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π endpoint /test-socketio –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
EOF

echo "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π endpoint –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –≤ —Ñ–∞–π–ª–µ test_socketio_endpoint.js"

echo ""
echo "üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo "=================="
echo "1. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ Socket.IO –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ socketio_config_patch.js –≤ server.js"
echo "2. –î–æ–±–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π endpoint –∏–∑ test_socketio_endpoint.js"
echo "3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ backend: pm2 restart 1337-backend"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs 1337-backend --follow"
echo "5. –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ: curl https://1337community.com/test-socketio"
echo ""
echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:"
echo "- –ï—Å–ª–∏ WebSocket –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, Socket.IO –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—Å—è –Ω–∞ polling"
echo "- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞—Ö –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è—Ö"
echo "- –í –±—Ä–∞—É–∑–µ—Ä–µ DevTools –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è —É—Å–ø–µ—à–Ω—ã–µ socket.io –∑–∞–ø—Ä–æ—Å—ã"

echo ""
echo "üéâ BACKEND –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–û–î–ì–û–¢–û–í–õ–ï–ù–´!"
echo "====================================" 