const fs = require('fs');

const FILE_PATH = 'frontend/src/components/TournamentDetails.js';

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∏—Å–±–∞–ª–∞–Ω—Å–∞ —Å–∫–æ–±–æ–∫ –≤ TournamentDetails.js...');

function fixBraces() {
    try {
        let content = fs.readFileSync(FILE_PATH, 'utf8');
        console.log('üìñ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω');
        
        // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ–±–∫–∏
        const openBraces = (content.match(/\{/g) || []).length;
        const closeBraces = (content.match(/\}/g) || []).length;
        
        console.log(`–û—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫: ${openBraces}`);
        console.log(`–ó–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫: ${closeBraces}`);
        console.log(`–î–∏—Å–±–∞–ª–∞–Ω—Å: ${openBraces - closeBraces}`);
        
        if (openBraces === closeBraces) {
            console.log('‚úÖ –°–∫–æ–±–∫–∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã!');
            return true;
        }
        
        // –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –∫–æ–Ω–µ—Ü
        if (openBraces > closeBraces) {
            const missingBraces = openBraces - closeBraces;
            console.log(`‚ö†Ô∏è –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç ${missingBraces} –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫`);
            
            // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ —Ñ–∞–π–ª–µ
            const lines = content.split('\n');
            let lastNonEmptyLineIndex = lines.length - 1;
            
            // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–Ω–∞—á–∏–º—É—é —Å—Ç—Ä–æ–∫—É
            while (lastNonEmptyLineIndex > 0 && !lines[lastNonEmptyLineIndex].trim()) {
                lastNonEmptyLineIndex--;
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏ –ø–µ—Ä–µ–¥ –ø–æ—Å–ª–µ–¥–Ω–∏–º export
            const exportIndex = content.lastIndexOf('export default');
            if (exportIndex !== -1) {
                const beforeExport = content.substring(0, exportIndex);
                const afterExport = content.substring(exportIndex);
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏
                const missingCloseBraces = '}\n'.repeat(missingBraces);
                content = beforeExport + missingCloseBraces + afterExport;
                
                console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${missingBraces} –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫ –ø–µ—Ä–µ–¥ export`);
            } else {
                // –ï—Å–ª–∏ –Ω–µ—Ç export, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
                const missingCloseBraces = '\n' + '}\n'.repeat(missingBraces);
                content += missingCloseBraces;
                
                console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${missingBraces} –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞`);
            }
        }
        
        // –ï—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫
        if (closeBraces > openBraces) {
            console.log(`‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫: +${closeBraces - openBraces}`);
            console.log('–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ');
            return false;
        }
        
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        fs.writeFileSync(FILE_PATH, content, 'utf8');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const newOpenBraces = (content.match(/\{/g) || []).length;
        const newCloseBraces = (content.match(/\}/g) || []).length;
        
        console.log('üìä –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
        console.log(`–û—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫: ${newOpenBraces}`);
        console.log(`–ó–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫: ${newCloseBraces}`);
        console.log(`–ë–∞–ª–∞–Ω—Å: ${newOpenBraces === newCloseBraces ? '‚úÖ –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã' : '‚ùå –ù–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã'}`);
        
        return newOpenBraces === newCloseBraces;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        return false;
    }
}

if (fixBraces()) {
    console.log('\nüéØ –£–°–ü–ï–•! –°–∫–æ–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
} else {
    console.log('\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å–∫–æ–±–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
} 