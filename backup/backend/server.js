require('dotenv').config({ path: __dirname + '/.env' });

console.log("üîç –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π JWT_SECRET:", process.env.JWT_SECRET); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è

const express = require('express');
const path = require('path');
const cors = require('cors');
const pool = require('./db');

const app = express();

// Middleware –¥–ª—è —Ä–∞–∑–±–æ—Ä–∞ JSON
app.use(express.json());

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
app.use(cors({
    origin: [
        'http://80.87.200.23/',
        'http://127.0.0.1:5500',
        'https://1337community.com',
        'http://localhost:3000' // –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ React –Ω–∞ –ø–æ—Ä—Ç—É 3000
    ],
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
    credentials: true
}));

// –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ build (React)
app.use(express.static(path.join(__dirname, '../frontend/build'), { cacheControl: false }));

// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ URL-–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
app.use(express.urlencoded({ extended: true }));

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
app.get('/testdb', async (req, res) => {
    try {
        const result = await pool.query('SELECT NOW()');
        res.json({ status: 'success', time: result.rows[0].now });
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ:', err);
        res.status(500).json({ status: 'error', message: err.message });
    }
});

// API-–º–∞—Ä—à—Ä—É—Ç—ã
app.use('/api/users', require('./routes/users'));
app.use('/api/auth', require('./routes/auth'));
app.use('/api/tournaments', require('./routes/tournaments'));
app.use('/api/teams', require('./routes/teams'));
app.use('/api/tournamentPlayers', require('./routes/tournamentPlayers'));
app.use('/api/matches', require('./routes/matches'));
app.use('/api/statistics', require('./routes/statistics'));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404 –¥–ª—è API-–º–∞—Ä—à—Ä—É—Ç–æ–≤
app.use('/api', (req, res) => {
    res.status(404).json({ error: 'API –º–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });
});

// Catch-all –¥–ª—è SPA (React Router)
app.get(/^\/(?!api).*/, (req, res) => {
    res.sendFile(path.join(__dirname, '../frontend/build/index.html'));
});

// –û–±—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ 404 –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
app.use((req, res) => {
    res.status(404).json({ error: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç—É
const PORT = process.env.PORT || 3000;
app.listen(PORT, async () => {
    console.log(`Server running on port ${PORT}`);
    // –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try {
        await pool.query('SELECT NOW()');
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');
    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err.message);
    }
});
