// ========================================
// –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ü–¶–ò–ò FULL DOUBLE ELIMINATION
// ========================================

// üß™ –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12) –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö:
// - http://1337community.com/create-tournament
// - http://1337community.com/tournament/[ID]/bracket

console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø—Ü–∏–∏ Full Double Elimination...');

// –¢–ï–°–¢ 1: –ü–†–û–í–ï–†–ö–ê –§–û–†–ú–´ –°–û–ó–î–ê–ù–ò–Ø –¢–£–†–ù–ò–†–ê
// ========================================
function testCreateTournamentForm() {
    console.log('\nüîç –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞');
    
    // –ù–∞—Ö–æ–¥–∏–º —Å–µ–ª–µ–∫—Ç–æ—Ä —Ç–∏–ø–∞ —Å–µ—Ç–∫–∏
    const bracketTypeSelect = document.querySelector('select[name="bracket_type"]');
    if (!bracketTypeSelect) {
        console.error('‚ùå –°–µ–ª–µ–∫—Ç–æ—Ä —Ç–∏–ø–∞ —Å–µ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return false;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Double Elimination
    bracketTypeSelect.value = 'double_elimination';
    bracketTypeSelect.dispatchEvent(new Event('change', { bubbles: true }));
    
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è DOM
    setTimeout(() => {
        // –ò—â–µ–º —á–µ–∫–±–æ–∫—Å Full Double Elimination
        const fullDECheckbox = document.querySelector('input[name="full_double_elimination"]');
        if (fullDECheckbox) {
            console.log('‚úÖ –ß–µ–∫–±–æ–∫—Å Full Double Elimination –Ω–∞–π–¥–µ–Ω');
            console.log(`   –°—Ç–∞—Ç—É—Å: ${fullDECheckbox.checked ? '–≤–∫–ª—é—á–µ–Ω' : '–æ—Ç–∫–ª—é—á–µ–Ω'}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
            const hint = fullDECheckbox.closest('.form-group')?.querySelector('.form-hint');
            if (hint && hint.textContent.includes('Grand Final Triumph')) {
                console.log('‚úÖ –ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ Grand Final Triumph –Ω–∞–π–¥–µ–Ω–∞');
            } else {
                console.warn('‚ö†Ô∏è –ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ Grand Final Triumph –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            }
            
            return true;
        } else {
            console.error('‚ùå –ß–µ–∫–±–æ–∫—Å Full Double Elimination –Ω–µ –Ω–∞–π–¥–µ–Ω');
            console.log('   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
            console.log('   - Frontend –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç');
            console.log('   - –¢–∏–ø —Å–µ—Ç–∫–∏ –Ω–µ Double Elimination');
            console.log('   - –ù–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            return false;
        }
    }, 500);
}

// –¢–ï–°–¢ 2: –ü–†–û–í–ï–†–ö–ê –ü–ê–ù–ï–õ–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –°–ï–¢–ö–û–ô  
// ========================================
function testBracketManagementPanel() {
    console.log('\nüîç –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ç–∫–æ–π');
    
    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ç–∫–∏
    const settingsButton = document.querySelector('button:has-text("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å")') || 
                          document.querySelector('button[class*="generate"]') ||
                          Array.from(document.querySelectorAll('button')).find(btn => 
                              btn.textContent.includes('–ù–∞—Å—Ç—Ä–æ–∏—Ç—å') || btn.textContent.includes('—Å–æ–∑–¥–∞—Ç—å —Å–µ—Ç–∫—É')
                          );
    
    if (!settingsButton) {
        console.warn('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        console.log('   –í–æ–∑–º–æ–∂–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ç–∫–æ–π');
        return false;
    }
    
    console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ç–∫–∏ –Ω–∞–π–¥–µ–Ω–∞');
    
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —á–µ–∫–±–æ–∫—Å –≤ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
    const fullDECheckbox = document.querySelector('input[type="checkbox"]') &&
                          Array.from(document.querySelectorAll('input[type="checkbox"]')).find(cb => 
                              cb.closest('label')?.textContent.includes('Full Double Elimination')
                          );
    
    if (fullDECheckbox) {
        console.log('‚úÖ –ß–µ–∫–±–æ–∫—Å Full Double Elimination –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –Ω–∞–π–¥–µ–Ω');
        return true;
    } else {
        console.log('‚ÑπÔ∏è –ß–µ–∫–±–æ–∫—Å –ø–æ–∫–∞ –Ω–µ –≤–∏–¥–∏–º (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö)');
        console.log('   –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ç–∫–∏');
        return null; // –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    }
}

// –¢–ï–°–¢ 3: –ü–†–û–í–ï–†–ö–ê API ENDPOINTS
// ========================================
async function testAPIEndpoints() {
    console.log('\nüîç –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints');
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const token = localStorage.getItem('token');
        if (!token) {
            console.warn('‚ö†Ô∏è –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            console.log('   –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API');
            return false;
        }
        
        // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞
        const testTournamentData = {
            name: 'üß™ Test Full Double Elimination',
            description: '–¢–µ—Å—Ç –æ–ø—Ü–∏–∏ Full Double Elimination',
            game: 'Counter-Strike 2',
            participant_type: 'team',
            team_size: 5,
            max_teams: 8,
            bracket_type: 'double_elimination',
            full_double_elimination: true // üÜï –ù–û–í–ê–Ø –û–ü–¶–ò–Ø
        };
        
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞...');
        
        const response = await fetch('/api/tournaments', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify(testTournamentData)
        });
        
        if (response.ok) {
            const result = await response.json();
            console.log('‚úÖ API —Å–æ–∑–¥–∞–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç');
            console.log(`   –°–æ–∑–¥–∞–Ω —Ç—É—Ä–Ω–∏—Ä ID: ${result.tournament?.id}`);
            console.log(`   Full Double Elimination: ${result.tournament?.full_double_elimination}`);
            
            // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç—É—Ä–Ω–∏—Ä
            if (result.tournament?.id) {
                try {
                    await fetch(`/api/tournaments/${result.tournament.id}`, {
                        method: 'DELETE',
                        headers: { 'Authorization': `Bearer ${token}` }
                    });
                    console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π —Ç—É—Ä–Ω–∏—Ä —É–¥–∞–ª–µ–Ω');
                } catch (e) {
                    console.log('‚ÑπÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ç—É—Ä–Ω–∏—Ä (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)');
                }
            }
            
            return true;
        } else {
            const error = await response.json();
            console.error('‚ùå –û—à–∏–±–∫–∞ API:', error);
            return false;
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:', error);
        return false;
    }
}

// –¢–ï–°–¢ 4: –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• (—á–µ—Ä–µ–∑ API)
// ========================================
async function testDatabaseSchema() {
    console.log('\nüîç –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    
    try {
        const token = localStorage.getItem('token');
        if (!token) {
            console.warn('‚ö†Ô∏è –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
            return false;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –ª—é–±–æ–π —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç—É—Ä–Ω–∏—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ö–µ–º—ã
        const response = await fetch('/api/tournaments?limit=1', {
            headers: { 'Authorization': `Bearer ${token}` }
        });
        
        if (response.ok) {
            const data = await response.json();
            const tournament = data.tournaments?.[0];
            
            if (tournament) {
                const hasFullDEField = 'full_double_elimination' in tournament;
                console.log(`${hasFullDEField ? '‚úÖ' : '‚ùå'} –ü–æ–ª–µ full_double_elimination ${hasFullDEField ? '–Ω–∞–π–¥–µ–Ω–æ' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
                console.log(`   –ü—Ä–∏–º–µ—Ä —Ç—É—Ä–Ω–∏—Ä–∞: ${tournament.name}`);
                console.log(`   –¢–∏–ø —Å–µ—Ç–∫–∏: ${tournament.bracket_type}`);
                console.log(`   Full DE: ${tournament.full_double_elimination}`);
                return hasFullDEField;
            } else {
                console.log('‚ÑπÔ∏è –ù–µ—Ç —Ç—É—Ä–Ω–∏—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ö–µ–º—ã');
                return null;
            }
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–æ–≤');
            return false;
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
        return false;
    }
}

// –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
// ========================================
async function runAllTests() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...\n');
    
    const results = {
        createForm: false,
        bracketPanel: false,
        api: false,
        database: false
    };
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const currentPath = window.location.pathname;
    console.log(`üìç –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${currentPath}`);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (currentPath.includes('create-tournament')) {
        console.log('üéØ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞');
        results.createForm = testCreateTournamentForm();
    } else if (currentPath.includes('tournament') && currentPath.includes('bracket')) {
        console.log('üéØ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ç–∫–æ–π');
        results.bracketPanel = testBracketManagementPanel();
    } else {
        console.log('‚ÑπÔ∏è –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã (API –∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)');
    }
    
    // API —Ç–µ—Å—Ç—ã (–≤–µ–∑–¥–µ)
    results.api = await testAPIEndpoints();
    results.database = await testDatabaseSchema();
    
    // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:');
    console.log('====================');
    Object.entries(results).forEach(([test, result]) => {
        const status = result === true ? '‚úÖ –ü–†–û–ô–î–ï–ù' : 
                      result === false ? '‚ùå –ü–†–û–í–ê–õ–ï–ù' : 
                      result === null ? '‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–û' : '‚è≠Ô∏è –ü–†–û–ü–£–©–ï–ù';
        console.log(`${test.padEnd(15)}: ${status}`);
    });
    
    const passedTests = Object.values(results).filter(r => r === true).length;
    const totalTests = Object.values(results).filter(r => r !== undefined).length;
    
    console.log(`\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${passedTests}/${totalTests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ`);
    
    if (passedTests === totalTests) {
        console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –û–ø—Ü–∏—è Full Double Elimination —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    } else {
        console.log('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ.');
    }
    
    return results;
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
setTimeout(() => {
    runAllTests().catch(console.error);
}, 1000);

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.testFullDoubleElimination = {
    runAll: runAllTests,
    testCreateForm: testCreateTournamentForm,
    testBracketPanel: testBracketManagementPanel,
    testAPI: testAPIEndpoints,
    testDatabase: testDatabaseSchema
};

console.log('‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏: window.testFullDoubleElimination.*');
console.log('üìñ –ü—Ä–∏–º–µ—Ä: testFullDoubleElimination.runAll()');