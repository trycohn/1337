-- ===== –ú–ò–ì–†–ê–¶–ò–Ø: –§–£–ù–ö–¶–ò–û–ù–ê–õ –ü–†–ò–ì–õ–ê–®–ï–ù–ò–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í –¢–£–†–ù–ò–†–û–í =====
-- –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 2025-01-22
-- –ê–≤—Ç–æ—Ä: 1337 Community Development Team
-- –û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –∏ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ —Ç—É—Ä–Ω–∏—Ä–æ–≤

-- 1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Ç—É—Ä–Ω–∏—Ä–æ–≤
CREATE TABLE IF NOT EXISTS tournament_admins (
    id SERIAL PRIMARY KEY,
    tournament_id INTEGER NOT NULL REFERENCES tournaments(id) ON DELETE CASCADE,
    user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    permissions JSONB DEFAULT '{"can_edit_matches": true, "can_manage_participants": true, "can_invite_admins": true}',
    created_at TIMESTAMP DEFAULT NOW(),
    UNIQUE(tournament_id, user_id)
);

-- 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
CREATE TABLE IF NOT EXISTS admin_invitations (
    id SERIAL PRIMARY KEY,
    tournament_id INTEGER NOT NULL REFERENCES tournaments(id) ON DELETE CASCADE,
    inviter_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    invitee_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    status VARCHAR(20) DEFAULT 'pending' CHECK (status IN ('pending', 'accepted', 'declined', 'expired')),
    expires_at TIMESTAMP NOT NULL,
    responded_at TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    UNIQUE(tournament_id, invitee_id, status) -- –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥—É–±–ª–∏—Ä—É—é—â–∏–µ pending –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
);

-- 3. –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
INSERT INTO users (username, email, password_hash, is_system_user, avatar_url, created_at) 
VALUES (
    '1337community', 
    'system@1337community.com', 
    '$2b$10$dummyhash', 
    true,
    '/api/uploads/avatars/system-logo.png',
    NOW()
)
ON CONFLICT (username) DO UPDATE SET
    is_system_user = true,
    email = 'system@1337community.com';

-- 4. –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
CREATE INDEX IF NOT EXISTS idx_tournament_admins_tournament_id ON tournament_admins(tournament_id);
CREATE INDEX IF NOT EXISTS idx_tournament_admins_user_id ON tournament_admins(user_id);
CREATE INDEX IF NOT EXISTS idx_admin_invitations_tournament_id ON admin_invitations(tournament_id);
CREATE INDEX IF NOT EXISTS idx_admin_invitations_invitee_id ON admin_invitations(invitee_id);
CREATE INDEX IF NOT EXISTS idx_admin_invitations_status ON admin_invitations(status);

-- 5. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
CREATE OR REPLACE FUNCTION accept_admin_invitation(
    invitation_id INTEGER,
    user_id INTEGER
) RETURNS JSONB AS $$
DECLARE
    invitation_record RECORD;
    result JSONB;
BEGIN
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    SELECT ai.*, t.name as tournament_name 
    INTO invitation_record
    FROM admin_invitations ai
    JOIN tournaments t ON ai.tournament_id = t.id
    WHERE ai.id = invitation_id 
    AND ai.invitee_id = user_id 
    AND ai.status = 'pending' 
    AND ai.expires_at > NOW();
    
    IF NOT FOUND THEN
        RETURN '{"success": false, "message": "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –∏—Å—Ç–µ–∫–ª–æ"}'::jsonb;
    END IF;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    IF EXISTS (
        SELECT 1 FROM tournament_admins 
        WHERE tournament_id = invitation_record.tournament_id 
        AND user_id = user_id
    ) THEN
        -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        UPDATE admin_invitations 
        SET status = 'accepted', responded_at = NOW() 
        WHERE id = invitation_id;
        
        RETURN '{"success": true, "message": "–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —ç—Ç–æ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞"}'::jsonb;
    END IF;
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
    INSERT INTO tournament_admins (tournament_id, user_id, permissions)
    VALUES (
        invitation_record.tournament_id, 
        user_id, 
        '{"can_edit_matches": true, "can_manage_participants": true, "can_invite_admins": true}'::jsonb
    );
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    UPDATE admin_invitations 
    SET status = 'accepted', responded_at = NOW() 
    WHERE id = invitation_id;
    
    result := jsonb_build_object(
        'success', true,
        'message', format('–í—ã —É—Å–ø–µ—à–Ω–æ —Å—Ç–∞–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ç—É—Ä–Ω–∏—Ä–∞ "%s"', invitation_record.tournament_name),
        'tournament_id', invitation_record.tournament_id,
        'tournament_name', invitation_record.tournament_name
    );
    
    RETURN result;
END;
$$ LANGUAGE plpgsql;

-- 6. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
CREATE OR REPLACE FUNCTION decline_admin_invitation(
    invitation_id INTEGER,
    user_id INTEGER
) RETURNS JSONB AS $$
DECLARE
    invitation_record RECORD;
    result JSONB;
BEGIN
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    SELECT ai.*, t.name as tournament_name 
    INTO invitation_record
    FROM admin_invitations ai
    JOIN tournaments t ON ai.tournament_id = t.id
    WHERE ai.id = invitation_id 
    AND ai.invitee_id = user_id 
    AND ai.status = 'pending';
    
    IF NOT FOUND THEN
        RETURN '{"success": false, "message": "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"}'::jsonb;
    END IF;
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    UPDATE admin_invitations 
    SET status = 'declined', responded_at = NOW() 
    WHERE id = invitation_id;
    
    result := jsonb_build_object(
        'success', true,
        'message', format('–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Ç—É—Ä–Ω–∏—Ä–∞ "%s" –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ', invitation_record.tournament_name),
        'tournament_id', invitation_record.tournament_id,
        'tournament_name', invitation_record.tournament_name
    );
    
    RETURN result;
END;
$$ LANGUAGE plpgsql;

-- 7. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
CREATE OR REPLACE FUNCTION update_expired_invitations() RETURNS void AS $$
BEGIN
    UPDATE admin_invitations 
    SET status = 'expired' 
    WHERE status = 'pending' 
    AND expires_at <= NOW();
END;
$$ LANGUAGE plpgsql;

-- üÜï 7.1. –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Å –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
CREATE OR REPLACE FUNCTION cleanup_expired_admin_invitations() RETURNS INTEGER AS $$
DECLARE
    affected_rows INTEGER;
BEGIN
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
    UPDATE admin_invitations 
    SET status = 'expired'
    WHERE status = 'pending' 
      AND expires_at <= NOW();
    
    GET DIAGNOSTICS affected_rows = ROW_COUNT;
    
    -- –õ–æ–≥–∏—Ä—É–µ–º –µ—Å–ª–∏ –µ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    IF affected_rows > 0 THEN
        RAISE NOTICE '–û–±–Ω–æ–≤–ª–µ–Ω–æ % –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤', affected_rows;
    END IF;
    
    RETURN affected_rows;
END;
$$ LANGUAGE plpgsql;

-- üÜï 7.2. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ (—Ç—Ä–∏–≥–≥–µ—Ä)
CREATE OR REPLACE FUNCTION auto_cleanup_expired_invitations() RETURNS TRIGGER AS $$
BEGIN
    -- –û—á–∏—â–∞–µ–º –∏—Å—Ç–µ–∫—à–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
    PERFORM cleanup_expired_admin_invitations();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- üÜï 7.3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏
DROP TRIGGER IF EXISTS auto_cleanup_trigger ON admin_invitations;
CREATE TRIGGER auto_cleanup_trigger
    BEFORE INSERT ON admin_invitations
    FOR EACH STATEMENT
    EXECUTE FUNCTION auto_cleanup_expired_invitations();

-- 8. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ (—Ç—Ä–∏–≥–≥–µ—Ä)
CREATE OR REPLACE FUNCTION send_admin_invitation_notification() RETURNS TRIGGER AS $$
DECLARE
    system_user_id INTEGER;
    tournament_name TEXT;
    inviter_username TEXT;
    chat_id INTEGER;
    message_text TEXT;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º ID —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    SELECT id INTO system_user_id 
    FROM users 
    WHERE username = '1337community' AND is_system_user = true;
    
    IF system_user_id IS NULL THEN
        RETURN NEW; -- –ï—Å–ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º
    END IF;
    
    -- –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—É—Ä–Ω–∏—Ä–µ –∏ –ø—Ä–∏–≥–ª–∞—à–∞—é—â–µ–º
    SELECT t.name, u.username 
    INTO tournament_name, inviter_username
    FROM tournaments t
    JOIN users u ON NEW.inviter_id = u.id
    WHERE t.id = NEW.tournament_id;
    
    -- –ù–∞—Ö–æ–¥–∏–º —á–∞—Ç —Ç—É—Ä–Ω–∏—Ä–∞
    SELECT id INTO chat_id
    FROM chats 
    WHERE name = tournament_name AND type = 'group';
    
    IF chat_id IS NOT NULL THEN
        -- –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        message_text := format(
            'ü§ù %s –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –≤–∞—Å —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ç—É—Ä–Ω–∏—Ä–∞ "%s"!

–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∞–≤–∞ –Ω–∞:
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–µ–π  
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', 
            inviter_username, 
            tournament_name
        );
        
        -- –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        INSERT INTO messages (chat_id, sender_id, content, message_type, metadata)
        VALUES (
            chat_id, 
            system_user_id, 
            message_text,
            'admin_invitation',
            jsonb_build_object(
                'invitation_id', NEW.id,
                'tournament_id', NEW.tournament_id,
                'inviter_id', NEW.inviter_id,
                'invitee_id', NEW.invitee_id,
                'actions', jsonb_build_array(
                    jsonb_build_object(
                        'type', 'accept_admin_invitation',
                        'label', '‚úÖ –ü—Ä–∏–Ω—è—Ç—å',
                        'invitation_id', NEW.id
                    ),
                    jsonb_build_object(
                        'type', 'decline_admin_invitation',
                        'label', '‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', 
                        'invitation_id', NEW.id
                    )
                )
            )
        );
    END IF;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- 9. –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
DROP TRIGGER IF EXISTS admin_invitation_notification_trigger ON admin_invitations;
CREATE TRIGGER admin_invitation_notification_trigger
    AFTER INSERT ON admin_invitations
    FOR EACH ROW 
    WHEN (NEW.status = 'pending')
    EXECUTE FUNCTION send_admin_invitation_notification();

-- 10. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ is_system_user –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DO $$ 
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'users' AND column_name = 'is_system_user'
    ) THEN
        ALTER TABLE users ADD COLUMN is_system_user BOOLEAN DEFAULT FALSE;
    END IF;
END $$;

-- 11. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
-- –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ cron –∏–ª–∏ –≤—ã–∑—ã–≤–∞—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏
-- SELECT update_expired_invitations();

COMMIT;

-- ===== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–û–í =====
/*
–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:
1. tournament_admins - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Ç—É—Ä–Ω–∏—Ä–æ–≤ —Å –ø—Ä–∞–≤–∞–º–∏
2. admin_invitations - –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã

–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
1. accept_admin_invitation(invitation_id, user_id) - –ø—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
2. decline_admin_invitation(invitation_id, user_id) - –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è  
3. update_expired_invitations() - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–µ–∫—à–∏—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
4. send_admin_invitation_notification() - –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (—Ç—Ä–∏–≥–≥–µ—Ä)

API Endpoints (–Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ routes):
- POST /tournaments/:id/invite-admin - –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
- DELETE /tournaments/:id/admins/:userId - —É–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
- POST /admin-invitations/:id/accept - –ø—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
- POST /admin-invitations/:id/decline - –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è

–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (permissions JSON):
- can_edit_matches: —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–µ–π
- can_manage_participants: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
- can_invite_admins: –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
*/ 