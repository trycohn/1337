#!/usr/bin/env node

/**
 * üîß –°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è CSS –ø—Ä–æ–±–ª–µ–º
 */

const fs = require('fs');
const path = require('path');

console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–°–¢–ê–í–®–ò–•–°–Ø CSS –ü–†–û–ë–õ–ï–ú');
console.log('='.repeat(50));

const filePath = 'frontend/src/components/tournament/modals/AddParticipantModal.css';

try {
    let content = fs.readFileSync(filePath, 'utf8');
    
    console.log(`üîß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${filePath}`);
    
    // –°–æ–∑–¥–∞–µ–º backup
    const backupPath = `${filePath}.final-fix-backup.${Date.now()}`;
    fs.writeFileSync(backupPath, content, 'utf8');
    console.log(`üì¶ Backup: ${backupPath}`);
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
    let fixedCount = 0;
    
    // –ü–∞—Ç—Ç–µ—Ä–Ω 1: /* REMOVED ANIMATION: */ REMOVED ANIMATION: something; */
    const pattern1 = /\/\* REMOVED ANIMATION: \*\/ REMOVED ANIMATION: ([^}]+); \*\//g;
    content = content.replace(pattern1, (match, p1) => {
        fixedCount++;
        return `/* REMOVED ANIMATION: ${p1}; */`;
    });
    
    // –ü–∞—Ç—Ç–µ—Ä–Ω 2: –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    const pattern2 = /\/\* REMOVED ANIMATION: ([^*\/]+) \*\/ \*\//g;
    content = content.replace(pattern2, (match, p1) => {
        fixedCount++;
        return `/* REMOVED ANIMATION: ${p1} */`;
    });
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(filePath, content, 'utf8');
    
    if (fixedCount > 0) {
        console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: ${filePath}`);
        console.log(`üéØ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: ${fixedCount}`);
    } else {
        console.log(`‚úÖ –§–∞–π–ª —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: ${filePath}`);
    }
    
} catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${filePath}:`, error.message);
}

console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!'); 